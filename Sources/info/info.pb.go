// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: info.proto

package info

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// These values define the type of firmware/flight software release
type Version_FlightSoftwareVersionType int32

const (
	Version_FLIGHT_SOFTWARE_VERSION_TYPE_UNKNOWN Version_FlightSoftwareVersionType = 0 // Unknown type
	Version_FLIGHT_SOFTWARE_VERSION_TYPE_DEV     Version_FlightSoftwareVersionType = 1 // Development release
	Version_FLIGHT_SOFTWARE_VERSION_TYPE_ALPHA   Version_FlightSoftwareVersionType = 2 // Alpha release
	Version_FLIGHT_SOFTWARE_VERSION_TYPE_BETA    Version_FlightSoftwareVersionType = 3 // Beta release
	Version_FLIGHT_SOFTWARE_VERSION_TYPE_RC      Version_FlightSoftwareVersionType = 4 // Release candidate
	Version_FLIGHT_SOFTWARE_VERSION_TYPE_RELEASE Version_FlightSoftwareVersionType = 5 // Official stable release
)

// Enum value maps for Version_FlightSoftwareVersionType.
var (
	Version_FlightSoftwareVersionType_name = map[int32]string{
		0: "FLIGHT_SOFTWARE_VERSION_TYPE_UNKNOWN",
		1: "FLIGHT_SOFTWARE_VERSION_TYPE_DEV",
		2: "FLIGHT_SOFTWARE_VERSION_TYPE_ALPHA",
		3: "FLIGHT_SOFTWARE_VERSION_TYPE_BETA",
		4: "FLIGHT_SOFTWARE_VERSION_TYPE_RC",
		5: "FLIGHT_SOFTWARE_VERSION_TYPE_RELEASE",
	}
	Version_FlightSoftwareVersionType_value = map[string]int32{
		"FLIGHT_SOFTWARE_VERSION_TYPE_UNKNOWN": 0,
		"FLIGHT_SOFTWARE_VERSION_TYPE_DEV":     1,
		"FLIGHT_SOFTWARE_VERSION_TYPE_ALPHA":   2,
		"FLIGHT_SOFTWARE_VERSION_TYPE_BETA":    3,
		"FLIGHT_SOFTWARE_VERSION_TYPE_RC":      4,
		"FLIGHT_SOFTWARE_VERSION_TYPE_RELEASE": 5,
	}
)

func (x Version_FlightSoftwareVersionType) Enum() *Version_FlightSoftwareVersionType {
	p := new(Version_FlightSoftwareVersionType)
	*p = x
	return p
}

func (x Version_FlightSoftwareVersionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Version_FlightSoftwareVersionType) Descriptor() protoreflect.EnumDescriptor {
	return file_info_proto_enumTypes[0].Descriptor()
}

func (Version_FlightSoftwareVersionType) Type() protoreflect.EnumType {
	return &file_info_proto_enumTypes[0]
}

func (x Version_FlightSoftwareVersionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Version_FlightSoftwareVersionType.Descriptor instead.
func (Version_FlightSoftwareVersionType) EnumDescriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{15, 0}
}

// Possible results returned for info requests.
type InfoResult_Result int32

const (
	InfoResult_RESULT_UNKNOWN                      InfoResult_Result = 0 // Unknown result
	InfoResult_RESULT_SUCCESS                      InfoResult_Result = 1 // Request succeeded
	InfoResult_RESULT_INFORMATION_NOT_RECEIVED_YET InfoResult_Result = 2 // Information has not been received yet
	InfoResult_RESULT_NO_SYSTEM                    InfoResult_Result = 3 // No system is connected
)

// Enum value maps for InfoResult_Result.
var (
	InfoResult_Result_name = map[int32]string{
		0: "RESULT_UNKNOWN",
		1: "RESULT_SUCCESS",
		2: "RESULT_INFORMATION_NOT_RECEIVED_YET",
		3: "RESULT_NO_SYSTEM",
	}
	InfoResult_Result_value = map[string]int32{
		"RESULT_UNKNOWN":                      0,
		"RESULT_SUCCESS":                      1,
		"RESULT_INFORMATION_NOT_RECEIVED_YET": 2,
		"RESULT_NO_SYSTEM":                    3,
	}
)

func (x InfoResult_Result) Enum() *InfoResult_Result {
	p := new(InfoResult_Result)
	*p = x
	return p
}

func (x InfoResult_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InfoResult_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_info_proto_enumTypes[1].Descriptor()
}

func (InfoResult_Result) Type() protoreflect.EnumType {
	return &file_info_proto_enumTypes[1]
}

func (x InfoResult_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InfoResult_Result.Descriptor instead.
func (InfoResult_Result) EnumDescriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{16, 0}
}

type GetFlightInformationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFlightInformationRequest) Reset() {
	*x = GetFlightInformationRequest{}
	mi := &file_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFlightInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlightInformationRequest) ProtoMessage() {}

func (x *GetFlightInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlightInformationRequest.ProtoReflect.Descriptor instead.
func (*GetFlightInformationRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{0}
}

type GetFlightInformationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InfoResult    *InfoResult            `protobuf:"bytes,1,opt,name=info_result,json=infoResult,proto3" json:"info_result,omitempty"`
	FlightInfo    *FlightInfo            `protobuf:"bytes,2,opt,name=flight_info,json=flightInfo,proto3" json:"flight_info,omitempty"` // Flight information of the system
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFlightInformationResponse) Reset() {
	*x = GetFlightInformationResponse{}
	mi := &file_info_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFlightInformationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlightInformationResponse) ProtoMessage() {}

func (x *GetFlightInformationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlightInformationResponse.ProtoReflect.Descriptor instead.
func (*GetFlightInformationResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{1}
}

func (x *GetFlightInformationResponse) GetInfoResult() *InfoResult {
	if x != nil {
		return x.InfoResult
	}
	return nil
}

func (x *GetFlightInformationResponse) GetFlightInfo() *FlightInfo {
	if x != nil {
		return x.FlightInfo
	}
	return nil
}

type GetIdentificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIdentificationRequest) Reset() {
	*x = GetIdentificationRequest{}
	mi := &file_info_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIdentificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentificationRequest) ProtoMessage() {}

func (x *GetIdentificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentificationRequest.ProtoReflect.Descriptor instead.
func (*GetIdentificationRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{2}
}

type GetIdentificationResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	InfoResult     *InfoResult            `protobuf:"bytes,1,opt,name=info_result,json=infoResult,proto3" json:"info_result,omitempty"`
	Identification *Identification        `protobuf:"bytes,2,opt,name=identification,proto3" json:"identification,omitempty"` // Identification of the system
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetIdentificationResponse) Reset() {
	*x = GetIdentificationResponse{}
	mi := &file_info_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIdentificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentificationResponse) ProtoMessage() {}

func (x *GetIdentificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentificationResponse.ProtoReflect.Descriptor instead.
func (*GetIdentificationResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{3}
}

func (x *GetIdentificationResponse) GetInfoResult() *InfoResult {
	if x != nil {
		return x.InfoResult
	}
	return nil
}

func (x *GetIdentificationResponse) GetIdentification() *Identification {
	if x != nil {
		return x.Identification
	}
	return nil
}

type GetProductRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProductRequest) Reset() {
	*x = GetProductRequest{}
	mi := &file_info_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductRequest) ProtoMessage() {}

func (x *GetProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductRequest.ProtoReflect.Descriptor instead.
func (*GetProductRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{4}
}

type GetProductResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InfoResult    *InfoResult            `protobuf:"bytes,1,opt,name=info_result,json=infoResult,proto3" json:"info_result,omitempty"`
	Product       *Product               `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"` // Product information of the system
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProductResponse) Reset() {
	*x = GetProductResponse{}
	mi := &file_info_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductResponse) ProtoMessage() {}

func (x *GetProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductResponse.ProtoReflect.Descriptor instead.
func (*GetProductResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{5}
}

func (x *GetProductResponse) GetInfoResult() *InfoResult {
	if x != nil {
		return x.InfoResult
	}
	return nil
}

func (x *GetProductResponse) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

type GetVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersionRequest) Reset() {
	*x = GetVersionRequest{}
	mi := &file_info_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionRequest) ProtoMessage() {}

func (x *GetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionRequest.ProtoReflect.Descriptor instead.
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{6}
}

type GetVersionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InfoResult    *InfoResult            `protobuf:"bytes,1,opt,name=info_result,json=infoResult,proto3" json:"info_result,omitempty"`
	Version       *Version               `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"` // Version information about the system
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersionResponse) Reset() {
	*x = GetVersionResponse{}
	mi := &file_info_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionResponse) ProtoMessage() {}

func (x *GetVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionResponse.ProtoReflect.Descriptor instead.
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{7}
}

func (x *GetVersionResponse) GetInfoResult() *InfoResult {
	if x != nil {
		return x.InfoResult
	}
	return nil
}

func (x *GetVersionResponse) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

type GetSpeedFactorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpeedFactorRequest) Reset() {
	*x = GetSpeedFactorRequest{}
	mi := &file_info_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpeedFactorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpeedFactorRequest) ProtoMessage() {}

func (x *GetSpeedFactorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpeedFactorRequest.ProtoReflect.Descriptor instead.
func (*GetSpeedFactorRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{8}
}

type GetSpeedFactorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InfoResult    *InfoResult            `protobuf:"bytes,1,opt,name=info_result,json=infoResult,proto3" json:"info_result,omitempty"`
	SpeedFactor   float64                `protobuf:"fixed64,2,opt,name=speed_factor,json=speedFactor,proto3" json:"speed_factor,omitempty"` // Speed factor of simulation
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpeedFactorResponse) Reset() {
	*x = GetSpeedFactorResponse{}
	mi := &file_info_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpeedFactorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpeedFactorResponse) ProtoMessage() {}

func (x *GetSpeedFactorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpeedFactorResponse.ProtoReflect.Descriptor instead.
func (*GetSpeedFactorResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{9}
}

func (x *GetSpeedFactorResponse) GetInfoResult() *InfoResult {
	if x != nil {
		return x.InfoResult
	}
	return nil
}

func (x *GetSpeedFactorResponse) GetSpeedFactor() float64 {
	if x != nil {
		return x.SpeedFactor
	}
	return 0
}

type SubscribeFlightInformationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeFlightInformationRequest) Reset() {
	*x = SubscribeFlightInformationRequest{}
	mi := &file_info_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeFlightInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeFlightInformationRequest) ProtoMessage() {}

func (x *SubscribeFlightInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeFlightInformationRequest.ProtoReflect.Descriptor instead.
func (*SubscribeFlightInformationRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{10}
}

type FlightInformationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlightInfo    *FlightInfo            `protobuf:"bytes,1,opt,name=flight_info,json=flightInfo,proto3" json:"flight_info,omitempty"` // The next flight information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlightInformationResponse) Reset() {
	*x = FlightInformationResponse{}
	mi := &file_info_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlightInformationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlightInformationResponse) ProtoMessage() {}

func (x *FlightInformationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlightInformationResponse.ProtoReflect.Descriptor instead.
func (*FlightInformationResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{11}
}

func (x *FlightInformationResponse) GetFlightInfo() *FlightInfo {
	if x != nil {
		return x.FlightInfo
	}
	return nil
}

// System flight information.
type FlightInfo struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	TimeBootMs             uint32                 `protobuf:"varint,1,opt,name=time_boot_ms,json=timeBootMs,proto3" json:"time_boot_ms,omitempty"`                                       // Time since system boot
	FlightUid              uint64                 `protobuf:"varint,2,opt,name=flight_uid,json=flightUid,proto3" json:"flight_uid,omitempty"`                                            // Flight counter. Starts from zero, is incremented at every disarm and is never reset (even after reboot)
	DurationSinceArmingMs  uint32                 `protobuf:"varint,3,opt,name=duration_since_arming_ms,json=durationSinceArmingMs,proto3" json:"duration_since_arming_ms,omitempty"`    // Duration since arming in milliseconds
	DurationSinceTakeoffMs uint32                 `protobuf:"varint,4,opt,name=duration_since_takeoff_ms,json=durationSinceTakeoffMs,proto3" json:"duration_since_takeoff_ms,omitempty"` // Duration since takeoff in milliseconds
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *FlightInfo) Reset() {
	*x = FlightInfo{}
	mi := &file_info_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlightInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlightInfo) ProtoMessage() {}

func (x *FlightInfo) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlightInfo.ProtoReflect.Descriptor instead.
func (*FlightInfo) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{12}
}

func (x *FlightInfo) GetTimeBootMs() uint32 {
	if x != nil {
		return x.TimeBootMs
	}
	return 0
}

func (x *FlightInfo) GetFlightUid() uint64 {
	if x != nil {
		return x.FlightUid
	}
	return 0
}

func (x *FlightInfo) GetDurationSinceArmingMs() uint32 {
	if x != nil {
		return x.DurationSinceArmingMs
	}
	return 0
}

func (x *FlightInfo) GetDurationSinceTakeoffMs() uint32 {
	if x != nil {
		return x.DurationSinceTakeoffMs
	}
	return 0
}

// System identification.
type Identification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HardwareUid   string                 `protobuf:"bytes,1,opt,name=hardware_uid,json=hardwareUid,proto3" json:"hardware_uid,omitempty"` // UID of the hardware. This refers to uid2 of MAVLink. If the system does not support uid2 yet, this is all zeros.
	LegacyUid     uint64                 `protobuf:"varint,2,opt,name=legacy_uid,json=legacyUid,proto3" json:"legacy_uid,omitempty"`      // Legacy UID of the hardware, referred to as uid in MAVLink (formerly exposed during system discovery as UUID).
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Identification) Reset() {
	*x = Identification{}
	mi := &file_info_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Identification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identification) ProtoMessage() {}

func (x *Identification) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identification.ProtoReflect.Descriptor instead.
func (*Identification) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{13}
}

func (x *Identification) GetHardwareUid() string {
	if x != nil {
		return x.HardwareUid
	}
	return ""
}

func (x *Identification) GetLegacyUid() uint64 {
	if x != nil {
		return x.LegacyUid
	}
	return 0
}

// System product information.
type Product struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VendorId      int32                  `protobuf:"varint,1,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`         // ID of the board vendor
	VendorName    string                 `protobuf:"bytes,2,opt,name=vendor_name,json=vendorName,proto3" json:"vendor_name,omitempty"`    // Name of the vendor
	ProductId     int32                  `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`      // ID of the product
	ProductName   string                 `protobuf:"bytes,4,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"` // Name of the product
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Product) Reset() {
	*x = Product{}
	mi := &file_info_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{14}
}

func (x *Product) GetVendorId() int32 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *Product) GetVendorName() string {
	if x != nil {
		return x.VendorName
	}
	return ""
}

func (x *Product) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *Product) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

// System version information.
type Version struct {
	state               protoimpl.MessageState            `protogen:"open.v1"`
	FlightSwMajor       int32                             `protobuf:"varint,1,opt,name=flight_sw_major,json=flightSwMajor,proto3" json:"flight_sw_major,omitempty"`                                                                             // Flight software major version
	FlightSwMinor       int32                             `protobuf:"varint,2,opt,name=flight_sw_minor,json=flightSwMinor,proto3" json:"flight_sw_minor,omitempty"`                                                                             // Flight software minor version
	FlightSwPatch       int32                             `protobuf:"varint,3,opt,name=flight_sw_patch,json=flightSwPatch,proto3" json:"flight_sw_patch,omitempty"`                                                                             // Flight software patch version
	FlightSwVendorMajor int32                             `protobuf:"varint,4,opt,name=flight_sw_vendor_major,json=flightSwVendorMajor,proto3" json:"flight_sw_vendor_major,omitempty"`                                                         // Flight software vendor major version
	FlightSwVendorMinor int32                             `protobuf:"varint,5,opt,name=flight_sw_vendor_minor,json=flightSwVendorMinor,proto3" json:"flight_sw_vendor_minor,omitempty"`                                                         // Flight software vendor minor version
	FlightSwVendorPatch int32                             `protobuf:"varint,6,opt,name=flight_sw_vendor_patch,json=flightSwVendorPatch,proto3" json:"flight_sw_vendor_patch,omitempty"`                                                         // Flight software vendor patch version
	OsSwMajor           int32                             `protobuf:"varint,7,opt,name=os_sw_major,json=osSwMajor,proto3" json:"os_sw_major,omitempty"`                                                                                         // Operating system software major version
	OsSwMinor           int32                             `protobuf:"varint,8,opt,name=os_sw_minor,json=osSwMinor,proto3" json:"os_sw_minor,omitempty"`                                                                                         // Operating system software minor version
	OsSwPatch           int32                             `protobuf:"varint,9,opt,name=os_sw_patch,json=osSwPatch,proto3" json:"os_sw_patch,omitempty"`                                                                                         // Operating system software patch version
	FlightSwGitHash     string                            `protobuf:"bytes,10,opt,name=flight_sw_git_hash,json=flightSwGitHash,proto3" json:"flight_sw_git_hash,omitempty"`                                                                     // Flight software git hash
	OsSwGitHash         string                            `protobuf:"bytes,11,opt,name=os_sw_git_hash,json=osSwGitHash,proto3" json:"os_sw_git_hash,omitempty"`                                                                                 // Operating system software git hash
	FlightSwVersionType Version_FlightSoftwareVersionType `protobuf:"varint,12,opt,name=flight_sw_version_type,json=flightSwVersionType,proto3,enum=mavsdk.rpc.info.Version_FlightSoftwareVersionType" json:"flight_sw_version_type,omitempty"` // Flight software version type
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_info_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{15}
}

func (x *Version) GetFlightSwMajor() int32 {
	if x != nil {
		return x.FlightSwMajor
	}
	return 0
}

func (x *Version) GetFlightSwMinor() int32 {
	if x != nil {
		return x.FlightSwMinor
	}
	return 0
}

func (x *Version) GetFlightSwPatch() int32 {
	if x != nil {
		return x.FlightSwPatch
	}
	return 0
}

func (x *Version) GetFlightSwVendorMajor() int32 {
	if x != nil {
		return x.FlightSwVendorMajor
	}
	return 0
}

func (x *Version) GetFlightSwVendorMinor() int32 {
	if x != nil {
		return x.FlightSwVendorMinor
	}
	return 0
}

func (x *Version) GetFlightSwVendorPatch() int32 {
	if x != nil {
		return x.FlightSwVendorPatch
	}
	return 0
}

func (x *Version) GetOsSwMajor() int32 {
	if x != nil {
		return x.OsSwMajor
	}
	return 0
}

func (x *Version) GetOsSwMinor() int32 {
	if x != nil {
		return x.OsSwMinor
	}
	return 0
}

func (x *Version) GetOsSwPatch() int32 {
	if x != nil {
		return x.OsSwPatch
	}
	return 0
}

func (x *Version) GetFlightSwGitHash() string {
	if x != nil {
		return x.FlightSwGitHash
	}
	return ""
}

func (x *Version) GetOsSwGitHash() string {
	if x != nil {
		return x.OsSwGitHash
	}
	return ""
}

func (x *Version) GetFlightSwVersionType() Version_FlightSoftwareVersionType {
	if x != nil {
		return x.FlightSwVersionType
	}
	return Version_FLIGHT_SOFTWARE_VERSION_TYPE_UNKNOWN
}

// Result type.
type InfoResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        InfoResult_Result      `protobuf:"varint,1,opt,name=result,proto3,enum=mavsdk.rpc.info.InfoResult_Result" json:"result,omitempty"` // Result enum value
	ResultStr     string                 `protobuf:"bytes,2,opt,name=result_str,json=resultStr,proto3" json:"result_str,omitempty"`                  // Human-readable English string describing the result
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoResult) Reset() {
	*x = InfoResult{}
	mi := &file_info_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResult) ProtoMessage() {}

func (x *InfoResult) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResult.ProtoReflect.Descriptor instead.
func (*InfoResult) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{16}
}

func (x *InfoResult) GetResult() InfoResult_Result {
	if x != nil {
		return x.Result
	}
	return InfoResult_RESULT_UNKNOWN
}

func (x *InfoResult) GetResultStr() string {
	if x != nil {
		return x.ResultStr
	}
	return ""
}

var File_info_proto protoreflect.FileDescriptor

const file_info_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"info.proto\x12\x0fmavsdk.rpc.info\x1a\x14mavsdk_options.proto\"\x1d\n" +
	"\x1bGetFlightInformationRequest\"\x9a\x01\n" +
	"\x1cGetFlightInformationResponse\x12<\n" +
	"\vinfo_result\x18\x01 \x01(\v2\x1b.mavsdk.rpc.info.InfoResultR\n" +
	"infoResult\x12<\n" +
	"\vflight_info\x18\x02 \x01(\v2\x1b.mavsdk.rpc.info.FlightInfoR\n" +
	"flightInfo\"\x1a\n" +
	"\x18GetIdentificationRequest\"\xa2\x01\n" +
	"\x19GetIdentificationResponse\x12<\n" +
	"\vinfo_result\x18\x01 \x01(\v2\x1b.mavsdk.rpc.info.InfoResultR\n" +
	"infoResult\x12G\n" +
	"\x0eidentification\x18\x02 \x01(\v2\x1f.mavsdk.rpc.info.IdentificationR\x0eidentification\"\x13\n" +
	"\x11GetProductRequest\"\x86\x01\n" +
	"\x12GetProductResponse\x12<\n" +
	"\vinfo_result\x18\x01 \x01(\v2\x1b.mavsdk.rpc.info.InfoResultR\n" +
	"infoResult\x122\n" +
	"\aproduct\x18\x02 \x01(\v2\x18.mavsdk.rpc.info.ProductR\aproduct\"\x13\n" +
	"\x11GetVersionRequest\"\x86\x01\n" +
	"\x12GetVersionResponse\x12<\n" +
	"\vinfo_result\x18\x01 \x01(\v2\x1b.mavsdk.rpc.info.InfoResultR\n" +
	"infoResult\x122\n" +
	"\aversion\x18\x02 \x01(\v2\x18.mavsdk.rpc.info.VersionR\aversion\"\x17\n" +
	"\x15GetSpeedFactorRequest\"y\n" +
	"\x16GetSpeedFactorResponse\x12<\n" +
	"\vinfo_result\x18\x01 \x01(\v2\x1b.mavsdk.rpc.info.InfoResultR\n" +
	"infoResult\x12!\n" +
	"\fspeed_factor\x18\x02 \x01(\x01R\vspeedFactor\"#\n" +
	"!SubscribeFlightInformationRequest\"Y\n" +
	"\x19FlightInformationResponse\x12<\n" +
	"\vflight_info\x18\x01 \x01(\v2\x1b.mavsdk.rpc.info.FlightInfoR\n" +
	"flightInfo\"\xc1\x01\n" +
	"\n" +
	"FlightInfo\x12 \n" +
	"\ftime_boot_ms\x18\x01 \x01(\rR\n" +
	"timeBootMs\x12\x1d\n" +
	"\n" +
	"flight_uid\x18\x02 \x01(\x04R\tflightUid\x127\n" +
	"\x18duration_since_arming_ms\x18\x03 \x01(\rR\x15durationSinceArmingMs\x129\n" +
	"\x19duration_since_takeoff_ms\x18\x04 \x01(\rR\x16durationSinceTakeoffMs\"R\n" +
	"\x0eIdentification\x12!\n" +
	"\fhardware_uid\x18\x01 \x01(\tR\vhardwareUid\x12\x1d\n" +
	"\n" +
	"legacy_uid\x18\x02 \x01(\x04R\tlegacyUid\"\x89\x01\n" +
	"\aProduct\x12\x1b\n" +
	"\tvendor_id\x18\x01 \x01(\x05R\bvendorId\x12\x1f\n" +
	"\vvendor_name\x18\x02 \x01(\tR\n" +
	"vendorName\x12\x1d\n" +
	"\n" +
	"product_id\x18\x03 \x01(\x05R\tproductId\x12!\n" +
	"\fproduct_name\x18\x04 \x01(\tR\vproductName\"\xc7\x06\n" +
	"\aVersion\x12&\n" +
	"\x0fflight_sw_major\x18\x01 \x01(\x05R\rflightSwMajor\x12&\n" +
	"\x0fflight_sw_minor\x18\x02 \x01(\x05R\rflightSwMinor\x12&\n" +
	"\x0fflight_sw_patch\x18\x03 \x01(\x05R\rflightSwPatch\x123\n" +
	"\x16flight_sw_vendor_major\x18\x04 \x01(\x05R\x13flightSwVendorMajor\x123\n" +
	"\x16flight_sw_vendor_minor\x18\x05 \x01(\x05R\x13flightSwVendorMinor\x123\n" +
	"\x16flight_sw_vendor_patch\x18\x06 \x01(\x05R\x13flightSwVendorPatch\x12\x1e\n" +
	"\vos_sw_major\x18\a \x01(\x05R\tosSwMajor\x12\x1e\n" +
	"\vos_sw_minor\x18\b \x01(\x05R\tosSwMinor\x12\x1e\n" +
	"\vos_sw_patch\x18\t \x01(\x05R\tosSwPatch\x12+\n" +
	"\x12flight_sw_git_hash\x18\n" +
	" \x01(\tR\x0fflightSwGitHash\x12#\n" +
	"\x0eos_sw_git_hash\x18\v \x01(\tR\vosSwGitHash\x12g\n" +
	"\x16flight_sw_version_type\x18\f \x01(\x0e22.mavsdk.rpc.info.Version.FlightSoftwareVersionTypeR\x13flightSwVersionType\"\x89\x02\n" +
	"\x19FlightSoftwareVersionType\x12(\n" +
	"$FLIGHT_SOFTWARE_VERSION_TYPE_UNKNOWN\x10\x00\x12$\n" +
	" FLIGHT_SOFTWARE_VERSION_TYPE_DEV\x10\x01\x12&\n" +
	"\"FLIGHT_SOFTWARE_VERSION_TYPE_ALPHA\x10\x02\x12%\n" +
	"!FLIGHT_SOFTWARE_VERSION_TYPE_BETA\x10\x03\x12#\n" +
	"\x1fFLIGHT_SOFTWARE_VERSION_TYPE_RC\x10\x04\x12(\n" +
	"$FLIGHT_SOFTWARE_VERSION_TYPE_RELEASE\x10\x05\"\xd8\x01\n" +
	"\n" +
	"InfoResult\x12:\n" +
	"\x06result\x18\x01 \x01(\x0e2\".mavsdk.rpc.info.InfoResult.ResultR\x06result\x12\x1d\n" +
	"\n" +
	"result_str\x18\x02 \x01(\tR\tresultStr\"o\n" +
	"\x06Result\x12\x12\n" +
	"\x0eRESULT_UNKNOWN\x10\x00\x12\x12\n" +
	"\x0eRESULT_SUCCESS\x10\x01\x12'\n" +
	"#RESULT_INFORMATION_NOT_RECEIVED_YET\x10\x02\x12\x14\n" +
	"\x10RESULT_NO_SYSTEM\x10\x032\xa4\x05\n" +
	"\vInfoService\x12y\n" +
	"\x14GetFlightInformation\x12,.mavsdk.rpc.info.GetFlightInformationRequest\x1a-.mavsdk.rpc.info.GetFlightInformationResponse\"\x04\x80\xb5\x18\x01\x12p\n" +
	"\x11GetIdentification\x12).mavsdk.rpc.info.GetIdentificationRequest\x1a*.mavsdk.rpc.info.GetIdentificationResponse\"\x04\x80\xb5\x18\x01\x12[\n" +
	"\n" +
	"GetProduct\x12\".mavsdk.rpc.info.GetProductRequest\x1a#.mavsdk.rpc.info.GetProductResponse\"\x04\x80\xb5\x18\x01\x12[\n" +
	"\n" +
	"GetVersion\x12\".mavsdk.rpc.info.GetVersionRequest\x1a#.mavsdk.rpc.info.GetVersionResponse\"\x04\x80\xb5\x18\x01\x12g\n" +
	"\x0eGetSpeedFactor\x12&.mavsdk.rpc.info.GetSpeedFactorRequest\x1a'.mavsdk.rpc.info.GetSpeedFactorResponse\"\x04\x80\xb5\x18\x01\x12\x84\x01\n" +
	"\x1aSubscribeFlightInformation\x122.mavsdk.rpc.info.SubscribeFlightInformationRequest\x1a*.mavsdk.rpc.info.FlightInformationResponse\"\x04\x80\xb5\x18\x000\x01B\x13B\tInfoProtoZ\x06.;infob\x06proto3"

var (
	file_info_proto_rawDescOnce sync.Once
	file_info_proto_rawDescData []byte
)

func file_info_proto_rawDescGZIP() []byte {
	file_info_proto_rawDescOnce.Do(func() {
		file_info_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_info_proto_rawDesc), len(file_info_proto_rawDesc)))
	})
	return file_info_proto_rawDescData
}

var file_info_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_info_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_info_proto_goTypes = []any{
	(Version_FlightSoftwareVersionType)(0),    // 0: mavsdk.rpc.info.Version.FlightSoftwareVersionType
	(InfoResult_Result)(0),                    // 1: mavsdk.rpc.info.InfoResult.Result
	(*GetFlightInformationRequest)(nil),       // 2: mavsdk.rpc.info.GetFlightInformationRequest
	(*GetFlightInformationResponse)(nil),      // 3: mavsdk.rpc.info.GetFlightInformationResponse
	(*GetIdentificationRequest)(nil),          // 4: mavsdk.rpc.info.GetIdentificationRequest
	(*GetIdentificationResponse)(nil),         // 5: mavsdk.rpc.info.GetIdentificationResponse
	(*GetProductRequest)(nil),                 // 6: mavsdk.rpc.info.GetProductRequest
	(*GetProductResponse)(nil),                // 7: mavsdk.rpc.info.GetProductResponse
	(*GetVersionRequest)(nil),                 // 8: mavsdk.rpc.info.GetVersionRequest
	(*GetVersionResponse)(nil),                // 9: mavsdk.rpc.info.GetVersionResponse
	(*GetSpeedFactorRequest)(nil),             // 10: mavsdk.rpc.info.GetSpeedFactorRequest
	(*GetSpeedFactorResponse)(nil),            // 11: mavsdk.rpc.info.GetSpeedFactorResponse
	(*SubscribeFlightInformationRequest)(nil), // 12: mavsdk.rpc.info.SubscribeFlightInformationRequest
	(*FlightInformationResponse)(nil),         // 13: mavsdk.rpc.info.FlightInformationResponse
	(*FlightInfo)(nil),                        // 14: mavsdk.rpc.info.FlightInfo
	(*Identification)(nil),                    // 15: mavsdk.rpc.info.Identification
	(*Product)(nil),                           // 16: mavsdk.rpc.info.Product
	(*Version)(nil),                           // 17: mavsdk.rpc.info.Version
	(*InfoResult)(nil),                        // 18: mavsdk.rpc.info.InfoResult
}
var file_info_proto_depIdxs = []int32{
	18, // 0: mavsdk.rpc.info.GetFlightInformationResponse.info_result:type_name -> mavsdk.rpc.info.InfoResult
	14, // 1: mavsdk.rpc.info.GetFlightInformationResponse.flight_info:type_name -> mavsdk.rpc.info.FlightInfo
	18, // 2: mavsdk.rpc.info.GetIdentificationResponse.info_result:type_name -> mavsdk.rpc.info.InfoResult
	15, // 3: mavsdk.rpc.info.GetIdentificationResponse.identification:type_name -> mavsdk.rpc.info.Identification
	18, // 4: mavsdk.rpc.info.GetProductResponse.info_result:type_name -> mavsdk.rpc.info.InfoResult
	16, // 5: mavsdk.rpc.info.GetProductResponse.product:type_name -> mavsdk.rpc.info.Product
	18, // 6: mavsdk.rpc.info.GetVersionResponse.info_result:type_name -> mavsdk.rpc.info.InfoResult
	17, // 7: mavsdk.rpc.info.GetVersionResponse.version:type_name -> mavsdk.rpc.info.Version
	18, // 8: mavsdk.rpc.info.GetSpeedFactorResponse.info_result:type_name -> mavsdk.rpc.info.InfoResult
	14, // 9: mavsdk.rpc.info.FlightInformationResponse.flight_info:type_name -> mavsdk.rpc.info.FlightInfo
	0,  // 10: mavsdk.rpc.info.Version.flight_sw_version_type:type_name -> mavsdk.rpc.info.Version.FlightSoftwareVersionType
	1,  // 11: mavsdk.rpc.info.InfoResult.result:type_name -> mavsdk.rpc.info.InfoResult.Result
	2,  // 12: mavsdk.rpc.info.InfoService.GetFlightInformation:input_type -> mavsdk.rpc.info.GetFlightInformationRequest
	4,  // 13: mavsdk.rpc.info.InfoService.GetIdentification:input_type -> mavsdk.rpc.info.GetIdentificationRequest
	6,  // 14: mavsdk.rpc.info.InfoService.GetProduct:input_type -> mavsdk.rpc.info.GetProductRequest
	8,  // 15: mavsdk.rpc.info.InfoService.GetVersion:input_type -> mavsdk.rpc.info.GetVersionRequest
	10, // 16: mavsdk.rpc.info.InfoService.GetSpeedFactor:input_type -> mavsdk.rpc.info.GetSpeedFactorRequest
	12, // 17: mavsdk.rpc.info.InfoService.SubscribeFlightInformation:input_type -> mavsdk.rpc.info.SubscribeFlightInformationRequest
	3,  // 18: mavsdk.rpc.info.InfoService.GetFlightInformation:output_type -> mavsdk.rpc.info.GetFlightInformationResponse
	5,  // 19: mavsdk.rpc.info.InfoService.GetIdentification:output_type -> mavsdk.rpc.info.GetIdentificationResponse
	7,  // 20: mavsdk.rpc.info.InfoService.GetProduct:output_type -> mavsdk.rpc.info.GetProductResponse
	9,  // 21: mavsdk.rpc.info.InfoService.GetVersion:output_type -> mavsdk.rpc.info.GetVersionResponse
	11, // 22: mavsdk.rpc.info.InfoService.GetSpeedFactor:output_type -> mavsdk.rpc.info.GetSpeedFactorResponse
	13, // 23: mavsdk.rpc.info.InfoService.SubscribeFlightInformation:output_type -> mavsdk.rpc.info.FlightInformationResponse
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_info_proto_init() }
func file_info_proto_init() {
	if File_info_proto != nil {
		return
	}
	file_mavsdk_options_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_info_proto_rawDesc), len(file_info_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_info_proto_goTypes,
		DependencyIndexes: file_info_proto_depIdxs,
		EnumInfos:         file_info_proto_enumTypes,
		MessageInfos:      file_info_proto_msgTypes,
	}.Build()
	File_info_proto = out.File
	file_info_proto_goTypes = nil
	file_info_proto_depIdxs = nil
}
