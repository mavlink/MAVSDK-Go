// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: failure.proto

package failure

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A failure unit.
type FailureUnit int32

const (
	FailureUnit_FAILURE_UNIT_SENSOR_GYRO            FailureUnit = 0   // Gyro
	FailureUnit_FAILURE_UNIT_SENSOR_ACCEL           FailureUnit = 1   // Accelerometer
	FailureUnit_FAILURE_UNIT_SENSOR_MAG             FailureUnit = 2   // Magnetometer
	FailureUnit_FAILURE_UNIT_SENSOR_BARO            FailureUnit = 3   // Barometer
	FailureUnit_FAILURE_UNIT_SENSOR_GPS             FailureUnit = 4   // GPS
	FailureUnit_FAILURE_UNIT_SENSOR_OPTICAL_FLOW    FailureUnit = 5   // Optical flow
	FailureUnit_FAILURE_UNIT_SENSOR_VIO             FailureUnit = 6   // Visual inertial odometry
	FailureUnit_FAILURE_UNIT_SENSOR_DISTANCE_SENSOR FailureUnit = 7   // Distance sensor
	FailureUnit_FAILURE_UNIT_SENSOR_AIRSPEED        FailureUnit = 8   // Airspeed
	FailureUnit_FAILURE_UNIT_SYSTEM_BATTERY         FailureUnit = 100 // Battery
	FailureUnit_FAILURE_UNIT_SYSTEM_MOTOR           FailureUnit = 101 // Motor
	FailureUnit_FAILURE_UNIT_SYSTEM_SERVO           FailureUnit = 102 // Servo
	FailureUnit_FAILURE_UNIT_SYSTEM_AVOIDANCE       FailureUnit = 103 // Avoidance
	FailureUnit_FAILURE_UNIT_SYSTEM_RC_SIGNAL       FailureUnit = 104 // RC signal
	FailureUnit_FAILURE_UNIT_SYSTEM_MAVLINK_SIGNAL  FailureUnit = 105 // MAVLink signal
)

// Enum value maps for FailureUnit.
var (
	FailureUnit_name = map[int32]string{
		0:   "FAILURE_UNIT_SENSOR_GYRO",
		1:   "FAILURE_UNIT_SENSOR_ACCEL",
		2:   "FAILURE_UNIT_SENSOR_MAG",
		3:   "FAILURE_UNIT_SENSOR_BARO",
		4:   "FAILURE_UNIT_SENSOR_GPS",
		5:   "FAILURE_UNIT_SENSOR_OPTICAL_FLOW",
		6:   "FAILURE_UNIT_SENSOR_VIO",
		7:   "FAILURE_UNIT_SENSOR_DISTANCE_SENSOR",
		8:   "FAILURE_UNIT_SENSOR_AIRSPEED",
		100: "FAILURE_UNIT_SYSTEM_BATTERY",
		101: "FAILURE_UNIT_SYSTEM_MOTOR",
		102: "FAILURE_UNIT_SYSTEM_SERVO",
		103: "FAILURE_UNIT_SYSTEM_AVOIDANCE",
		104: "FAILURE_UNIT_SYSTEM_RC_SIGNAL",
		105: "FAILURE_UNIT_SYSTEM_MAVLINK_SIGNAL",
	}
	FailureUnit_value = map[string]int32{
		"FAILURE_UNIT_SENSOR_GYRO":            0,
		"FAILURE_UNIT_SENSOR_ACCEL":           1,
		"FAILURE_UNIT_SENSOR_MAG":             2,
		"FAILURE_UNIT_SENSOR_BARO":            3,
		"FAILURE_UNIT_SENSOR_GPS":             4,
		"FAILURE_UNIT_SENSOR_OPTICAL_FLOW":    5,
		"FAILURE_UNIT_SENSOR_VIO":             6,
		"FAILURE_UNIT_SENSOR_DISTANCE_SENSOR": 7,
		"FAILURE_UNIT_SENSOR_AIRSPEED":        8,
		"FAILURE_UNIT_SYSTEM_BATTERY":         100,
		"FAILURE_UNIT_SYSTEM_MOTOR":           101,
		"FAILURE_UNIT_SYSTEM_SERVO":           102,
		"FAILURE_UNIT_SYSTEM_AVOIDANCE":       103,
		"FAILURE_UNIT_SYSTEM_RC_SIGNAL":       104,
		"FAILURE_UNIT_SYSTEM_MAVLINK_SIGNAL":  105,
	}
)

func (x FailureUnit) Enum() *FailureUnit {
	p := new(FailureUnit)
	*p = x
	return p
}

func (x FailureUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FailureUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_failure_proto_enumTypes[0].Descriptor()
}

func (FailureUnit) Type() protoreflect.EnumType {
	return &file_failure_proto_enumTypes[0]
}

func (x FailureUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FailureUnit.Descriptor instead.
func (FailureUnit) EnumDescriptor() ([]byte, []int) {
	return file_failure_proto_rawDescGZIP(), []int{0}
}

// A failure type
type FailureType int32

const (
	FailureType_FAILURE_TYPE_OK           FailureType = 0 // No failure injected, used to reset a previous failure
	FailureType_FAILURE_TYPE_OFF          FailureType = 1 // Sets unit off, so completely non-responsive
	FailureType_FAILURE_TYPE_STUCK        FailureType = 2 // Unit is stuck e.g. keeps reporting the same value
	FailureType_FAILURE_TYPE_GARBAGE      FailureType = 3 // Unit is reporting complete garbage
	FailureType_FAILURE_TYPE_WRONG        FailureType = 4 // Unit is consistently wrong
	FailureType_FAILURE_TYPE_SLOW         FailureType = 5 // Unit is slow, so e.g. reporting at slower than expected rate
	FailureType_FAILURE_TYPE_DELAYED      FailureType = 6 // Data of unit is delayed in time
	FailureType_FAILURE_TYPE_INTERMITTENT FailureType = 7 // Unit is sometimes working, sometimes not
)

// Enum value maps for FailureType.
var (
	FailureType_name = map[int32]string{
		0: "FAILURE_TYPE_OK",
		1: "FAILURE_TYPE_OFF",
		2: "FAILURE_TYPE_STUCK",
		3: "FAILURE_TYPE_GARBAGE",
		4: "FAILURE_TYPE_WRONG",
		5: "FAILURE_TYPE_SLOW",
		6: "FAILURE_TYPE_DELAYED",
		7: "FAILURE_TYPE_INTERMITTENT",
	}
	FailureType_value = map[string]int32{
		"FAILURE_TYPE_OK":           0,
		"FAILURE_TYPE_OFF":          1,
		"FAILURE_TYPE_STUCK":        2,
		"FAILURE_TYPE_GARBAGE":      3,
		"FAILURE_TYPE_WRONG":        4,
		"FAILURE_TYPE_SLOW":         5,
		"FAILURE_TYPE_DELAYED":      6,
		"FAILURE_TYPE_INTERMITTENT": 7,
	}
)

func (x FailureType) Enum() *FailureType {
	p := new(FailureType)
	*p = x
	return p
}

func (x FailureType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FailureType) Descriptor() protoreflect.EnumDescriptor {
	return file_failure_proto_enumTypes[1].Descriptor()
}

func (FailureType) Type() protoreflect.EnumType {
	return &file_failure_proto_enumTypes[1]
}

func (x FailureType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FailureType.Descriptor instead.
func (FailureType) EnumDescriptor() ([]byte, []int) {
	return file_failure_proto_rawDescGZIP(), []int{1}
}

// Possible results returned for failure requests.
type FailureResult_Result int32

const (
	FailureResult_RESULT_UNKNOWN          FailureResult_Result = 0 // Unknown result
	FailureResult_RESULT_SUCCESS          FailureResult_Result = 1 // Request succeeded
	FailureResult_RESULT_NO_SYSTEM        FailureResult_Result = 2 // No system is connected
	FailureResult_RESULT_CONNECTION_ERROR FailureResult_Result = 3 // Connection error
	FailureResult_RESULT_UNSUPPORTED      FailureResult_Result = 4 // Failure not supported
	FailureResult_RESULT_DENIED           FailureResult_Result = 5 // Failure injection denied
	FailureResult_RESULT_DISABLED         FailureResult_Result = 6 // Failure injection is disabled
	FailureResult_RESULT_TIMEOUT          FailureResult_Result = 7 // Request timed out
)

// Enum value maps for FailureResult_Result.
var (
	FailureResult_Result_name = map[int32]string{
		0: "RESULT_UNKNOWN",
		1: "RESULT_SUCCESS",
		2: "RESULT_NO_SYSTEM",
		3: "RESULT_CONNECTION_ERROR",
		4: "RESULT_UNSUPPORTED",
		5: "RESULT_DENIED",
		6: "RESULT_DISABLED",
		7: "RESULT_TIMEOUT",
	}
	FailureResult_Result_value = map[string]int32{
		"RESULT_UNKNOWN":          0,
		"RESULT_SUCCESS":          1,
		"RESULT_NO_SYSTEM":        2,
		"RESULT_CONNECTION_ERROR": 3,
		"RESULT_UNSUPPORTED":      4,
		"RESULT_DENIED":           5,
		"RESULT_DISABLED":         6,
		"RESULT_TIMEOUT":          7,
	}
)

func (x FailureResult_Result) Enum() *FailureResult_Result {
	p := new(FailureResult_Result)
	*p = x
	return p
}

func (x FailureResult_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FailureResult_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_failure_proto_enumTypes[2].Descriptor()
}

func (FailureResult_Result) Type() protoreflect.EnumType {
	return &file_failure_proto_enumTypes[2]
}

func (x FailureResult_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FailureResult_Result.Descriptor instead.
func (FailureResult_Result) EnumDescriptor() ([]byte, []int) {
	return file_failure_proto_rawDescGZIP(), []int{2, 0}
}

type InjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailureUnit FailureUnit `protobuf:"varint,1,opt,name=failure_unit,json=failureUnit,proto3,enum=mavsdk.rpc.failure.FailureUnit" json:"failure_unit,omitempty"` // The failure unit to send
	FailureType FailureType `protobuf:"varint,2,opt,name=failure_type,json=failureType,proto3,enum=mavsdk.rpc.failure.FailureType" json:"failure_type,omitempty"` // The failure type to send
	Instance    int32       `protobuf:"varint,3,opt,name=instance,proto3" json:"instance,omitempty"`                                                              // Instance to affect (0 for all)
}

func (x *InjectRequest) Reset() {
	*x = InjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_failure_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjectRequest) ProtoMessage() {}

func (x *InjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_failure_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjectRequest.ProtoReflect.Descriptor instead.
func (*InjectRequest) Descriptor() ([]byte, []int) {
	return file_failure_proto_rawDescGZIP(), []int{0}
}

func (x *InjectRequest) GetFailureUnit() FailureUnit {
	if x != nil {
		return x.FailureUnit
	}
	return FailureUnit_FAILURE_UNIT_SENSOR_GYRO
}

func (x *InjectRequest) GetFailureType() FailureType {
	if x != nil {
		return x.FailureType
	}
	return FailureType_FAILURE_TYPE_OK
}

func (x *InjectRequest) GetInstance() int32 {
	if x != nil {
		return x.Instance
	}
	return 0
}

type InjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailureResult *FailureResult `protobuf:"bytes,1,opt,name=failure_result,json=failureResult,proto3" json:"failure_result,omitempty"`
}

func (x *InjectResponse) Reset() {
	*x = InjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_failure_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjectResponse) ProtoMessage() {}

func (x *InjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_failure_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjectResponse.ProtoReflect.Descriptor instead.
func (*InjectResponse) Descriptor() ([]byte, []int) {
	return file_failure_proto_rawDescGZIP(), []int{1}
}

func (x *InjectResponse) GetFailureResult() *FailureResult {
	if x != nil {
		return x.FailureResult
	}
	return nil
}

type FailureResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    FailureResult_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mavsdk.rpc.failure.FailureResult_Result" json:"result,omitempty"` // Result enum value
	ResultStr string               `protobuf:"bytes,2,opt,name=result_str,json=resultStr,proto3" json:"result_str,omitempty"`                        // Human-readable English string describing the result
}

func (x *FailureResult) Reset() {
	*x = FailureResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_failure_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FailureResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailureResult) ProtoMessage() {}

func (x *FailureResult) ProtoReflect() protoreflect.Message {
	mi := &file_failure_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailureResult.ProtoReflect.Descriptor instead.
func (*FailureResult) Descriptor() ([]byte, []int) {
	return file_failure_proto_rawDescGZIP(), []int{2}
}

func (x *FailureResult) GetResult() FailureResult_Result {
	if x != nil {
		return x.Result
	}
	return FailureResult_RESULT_UNKNOWN
}

func (x *FailureResult) GetResultStr() string {
	if x != nil {
		return x.ResultStr
	}
	return ""
}

var File_failure_proto protoreflect.FileDescriptor

var file_failure_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x12, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x1a, 0x14, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x01, 0x0a, 0x0d, 0x49, 0x6e,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0c, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x42, 0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0x5a, 0x0a, 0x0e, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x76, 0x73,
	0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x2e, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x66, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xaa, 0x02, 0x0a, 0x0d,
	0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e,
	0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x72, 0x22, 0xb7,
	0x01, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x53,
	0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x01, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x4e, 0x4f, 0x5f, 0x53,
	0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x53, 0x55, 0x4c,
	0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55,
	0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x05, 0x12,
	0x13, 0x0a, 0x0f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c,
	0x45, 0x44, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x54,
	0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x07, 0x2a, 0xfd, 0x03, 0x0a, 0x0b, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x18, 0x46, 0x41, 0x49, 0x4c,
	0x55, 0x52, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x5f,
	0x47, 0x59, 0x52, 0x4f, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52,
	0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x41, 0x43,
	0x43, 0x45, 0x4c, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45,
	0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x4d, 0x41, 0x47,
	0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x55, 0x4e,
	0x49, 0x54, 0x5f, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x42, 0x41, 0x52, 0x4f, 0x10, 0x03,
	0x12, 0x1b, 0x0a, 0x17, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54,
	0x5f, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x47, 0x50, 0x53, 0x10, 0x04, 0x12, 0x24, 0x0a,
	0x20, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x53, 0x45,
	0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x46, 0x4c, 0x4f,
	0x57, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x55,
	0x4e, 0x49, 0x54, 0x5f, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x56, 0x49, 0x4f, 0x10, 0x06,
	0x12, 0x27, 0x0a, 0x23, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54,
	0x5f, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x44, 0x49, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45,
	0x5f, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x10, 0x07, 0x12, 0x20, 0x0a, 0x1c, 0x46, 0x41, 0x49,
	0x4c, 0x55, 0x52, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52,
	0x5f, 0x41, 0x49, 0x52, 0x53, 0x50, 0x45, 0x45, 0x44, 0x10, 0x08, 0x12, 0x1f, 0x0a, 0x1b, 0x46,
	0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x53, 0x59, 0x53, 0x54,
	0x45, 0x4d, 0x5f, 0x42, 0x41, 0x54, 0x54, 0x45, 0x52, 0x59, 0x10, 0x64, 0x12, 0x1d, 0x0a, 0x19,
	0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x53, 0x59, 0x53,
	0x54, 0x45, 0x4d, 0x5f, 0x4d, 0x4f, 0x54, 0x4f, 0x52, 0x10, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x46,
	0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x53, 0x59, 0x53, 0x54,
	0x45, 0x4d, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x4f, 0x10, 0x66, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x41,
	0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45,
	0x4d, 0x5f, 0x41, 0x56, 0x4f, 0x49, 0x44, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x67, 0x12, 0x21, 0x0a,
	0x1d, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x53, 0x59,
	0x53, 0x54, 0x45, 0x4d, 0x5f, 0x52, 0x43, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x10, 0x68,
	0x12, 0x26, 0x0a, 0x22, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54,
	0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x4d, 0x41, 0x56, 0x4c, 0x49, 0x4e, 0x4b, 0x5f,
	0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x10, 0x69, 0x2a, 0xd2, 0x01, 0x0a, 0x0b, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x41, 0x49, 0x4c,
	0x55, 0x52, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x46,
	0x46, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x55, 0x43, 0x4b, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x46,
	0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x41, 0x52, 0x42,
	0x41, 0x47, 0x45, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x52, 0x4f, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x15, 0x0a,
	0x11, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4c,
	0x4f, 0x57, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x45, 0x44, 0x10, 0x06, 0x12, 0x1d,
	0x0a, 0x19, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x07, 0x32, 0x67, 0x0a,
	0x0e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x55, 0x0a, 0x06, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x76, 0x73,
	0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x2e, 0x49,
	0x6e, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d,
	0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x2e, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x42, 0x19, 0x42, 0x0c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x09, 0x2e, 0x3b, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_failure_proto_rawDescOnce sync.Once
	file_failure_proto_rawDescData = file_failure_proto_rawDesc
)

func file_failure_proto_rawDescGZIP() []byte {
	file_failure_proto_rawDescOnce.Do(func() {
		file_failure_proto_rawDescData = protoimpl.X.CompressGZIP(file_failure_proto_rawDescData)
	})
	return file_failure_proto_rawDescData
}

var file_failure_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_failure_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_failure_proto_goTypes = []any{
	(FailureUnit)(0),          // 0: mavsdk.rpc.failure.FailureUnit
	(FailureType)(0),          // 1: mavsdk.rpc.failure.FailureType
	(FailureResult_Result)(0), // 2: mavsdk.rpc.failure.FailureResult.Result
	(*InjectRequest)(nil),     // 3: mavsdk.rpc.failure.InjectRequest
	(*InjectResponse)(nil),    // 4: mavsdk.rpc.failure.InjectResponse
	(*FailureResult)(nil),     // 5: mavsdk.rpc.failure.FailureResult
}
var file_failure_proto_depIdxs = []int32{
	0, // 0: mavsdk.rpc.failure.InjectRequest.failure_unit:type_name -> mavsdk.rpc.failure.FailureUnit
	1, // 1: mavsdk.rpc.failure.InjectRequest.failure_type:type_name -> mavsdk.rpc.failure.FailureType
	5, // 2: mavsdk.rpc.failure.InjectResponse.failure_result:type_name -> mavsdk.rpc.failure.FailureResult
	2, // 3: mavsdk.rpc.failure.FailureResult.result:type_name -> mavsdk.rpc.failure.FailureResult.Result
	3, // 4: mavsdk.rpc.failure.FailureService.Inject:input_type -> mavsdk.rpc.failure.InjectRequest
	4, // 5: mavsdk.rpc.failure.FailureService.Inject:output_type -> mavsdk.rpc.failure.InjectResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_failure_proto_init() }
func file_failure_proto_init() {
	if File_failure_proto != nil {
		return
	}
	
	if !protoimpl.UnsafeEnabled {
		file_failure_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*InjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_failure_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*InjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_failure_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*FailureResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_failure_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_failure_proto_goTypes,
		DependencyIndexes: file_failure_proto_depIdxs,
		EnumInfos:         file_failure_proto_enumTypes,
		MessageInfos:      file_failure_proto_msgTypes,
	}.Build()
	File_failure_proto = out.File
	file_failure_proto_rawDesc = nil
	file_failure_proto_goTypes = nil
	file_failure_proto_depIdxs = nil
}
