// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: failure.proto

package failure

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A failure unit.
type FailureUnit int32

const (
	FailureUnit_FAILURE_UNIT_SENSOR_GYRO            FailureUnit = 0   // Gyro
	FailureUnit_FAILURE_UNIT_SENSOR_ACCEL           FailureUnit = 1   // Accelerometer
	FailureUnit_FAILURE_UNIT_SENSOR_MAG             FailureUnit = 2   // Magnetometer
	FailureUnit_FAILURE_UNIT_SENSOR_BARO            FailureUnit = 3   // Barometer
	FailureUnit_FAILURE_UNIT_SENSOR_GPS             FailureUnit = 4   // GPS
	FailureUnit_FAILURE_UNIT_SENSOR_OPTICAL_FLOW    FailureUnit = 5   // Optical flow
	FailureUnit_FAILURE_UNIT_SENSOR_VIO             FailureUnit = 6   // Visual inertial odometry
	FailureUnit_FAILURE_UNIT_SENSOR_DISTANCE_SENSOR FailureUnit = 7   // Distance sensor
	FailureUnit_FAILURE_UNIT_SENSOR_AIRSPEED        FailureUnit = 8   // Airspeed
	FailureUnit_FAILURE_UNIT_SYSTEM_BATTERY         FailureUnit = 100 // Battery
	FailureUnit_FAILURE_UNIT_SYSTEM_MOTOR           FailureUnit = 101 // Motor
	FailureUnit_FAILURE_UNIT_SYSTEM_SERVO           FailureUnit = 102 // Servo
	FailureUnit_FAILURE_UNIT_SYSTEM_AVOIDANCE       FailureUnit = 103 // Avoidance
	FailureUnit_FAILURE_UNIT_SYSTEM_RC_SIGNAL       FailureUnit = 104 // RC signal
	FailureUnit_FAILURE_UNIT_SYSTEM_MAVLINK_SIGNAL  FailureUnit = 105 // MAVLink signal
)

// Enum value maps for FailureUnit.
var (
	FailureUnit_name = map[int32]string{
		0:   "FAILURE_UNIT_SENSOR_GYRO",
		1:   "FAILURE_UNIT_SENSOR_ACCEL",
		2:   "FAILURE_UNIT_SENSOR_MAG",
		3:   "FAILURE_UNIT_SENSOR_BARO",
		4:   "FAILURE_UNIT_SENSOR_GPS",
		5:   "FAILURE_UNIT_SENSOR_OPTICAL_FLOW",
		6:   "FAILURE_UNIT_SENSOR_VIO",
		7:   "FAILURE_UNIT_SENSOR_DISTANCE_SENSOR",
		8:   "FAILURE_UNIT_SENSOR_AIRSPEED",
		100: "FAILURE_UNIT_SYSTEM_BATTERY",
		101: "FAILURE_UNIT_SYSTEM_MOTOR",
		102: "FAILURE_UNIT_SYSTEM_SERVO",
		103: "FAILURE_UNIT_SYSTEM_AVOIDANCE",
		104: "FAILURE_UNIT_SYSTEM_RC_SIGNAL",
		105: "FAILURE_UNIT_SYSTEM_MAVLINK_SIGNAL",
	}
	FailureUnit_value = map[string]int32{
		"FAILURE_UNIT_SENSOR_GYRO":            0,
		"FAILURE_UNIT_SENSOR_ACCEL":           1,
		"FAILURE_UNIT_SENSOR_MAG":             2,
		"FAILURE_UNIT_SENSOR_BARO":            3,
		"FAILURE_UNIT_SENSOR_GPS":             4,
		"FAILURE_UNIT_SENSOR_OPTICAL_FLOW":    5,
		"FAILURE_UNIT_SENSOR_VIO":             6,
		"FAILURE_UNIT_SENSOR_DISTANCE_SENSOR": 7,
		"FAILURE_UNIT_SENSOR_AIRSPEED":        8,
		"FAILURE_UNIT_SYSTEM_BATTERY":         100,
		"FAILURE_UNIT_SYSTEM_MOTOR":           101,
		"FAILURE_UNIT_SYSTEM_SERVO":           102,
		"FAILURE_UNIT_SYSTEM_AVOIDANCE":       103,
		"FAILURE_UNIT_SYSTEM_RC_SIGNAL":       104,
		"FAILURE_UNIT_SYSTEM_MAVLINK_SIGNAL":  105,
	}
)

func (x FailureUnit) Enum() *FailureUnit {
	p := new(FailureUnit)
	*p = x
	return p
}

func (x FailureUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FailureUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_failure_proto_enumTypes[0].Descriptor()
}

func (FailureUnit) Type() protoreflect.EnumType {
	return &file_failure_proto_enumTypes[0]
}

func (x FailureUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FailureUnit.Descriptor instead.
func (FailureUnit) EnumDescriptor() ([]byte, []int) {
	return file_failure_proto_rawDescGZIP(), []int{0}
}

// A failure type
type FailureType int32

const (
	FailureType_FAILURE_TYPE_OK           FailureType = 0 // No failure injected, used to reset a previous failure
	FailureType_FAILURE_TYPE_OFF          FailureType = 1 // Sets unit off, so completely non-responsive
	FailureType_FAILURE_TYPE_STUCK        FailureType = 2 // Unit is stuck e.g. keeps reporting the same value
	FailureType_FAILURE_TYPE_GARBAGE      FailureType = 3 // Unit is reporting complete garbage
	FailureType_FAILURE_TYPE_WRONG        FailureType = 4 // Unit is consistently wrong
	FailureType_FAILURE_TYPE_SLOW         FailureType = 5 // Unit is slow, so e.g. reporting at slower than expected rate
	FailureType_FAILURE_TYPE_DELAYED      FailureType = 6 // Data of unit is delayed in time
	FailureType_FAILURE_TYPE_INTERMITTENT FailureType = 7 // Unit is sometimes working, sometimes not
)

// Enum value maps for FailureType.
var (
	FailureType_name = map[int32]string{
		0: "FAILURE_TYPE_OK",
		1: "FAILURE_TYPE_OFF",
		2: "FAILURE_TYPE_STUCK",
		3: "FAILURE_TYPE_GARBAGE",
		4: "FAILURE_TYPE_WRONG",
		5: "FAILURE_TYPE_SLOW",
		6: "FAILURE_TYPE_DELAYED",
		7: "FAILURE_TYPE_INTERMITTENT",
	}
	FailureType_value = map[string]int32{
		"FAILURE_TYPE_OK":           0,
		"FAILURE_TYPE_OFF":          1,
		"FAILURE_TYPE_STUCK":        2,
		"FAILURE_TYPE_GARBAGE":      3,
		"FAILURE_TYPE_WRONG":        4,
		"FAILURE_TYPE_SLOW":         5,
		"FAILURE_TYPE_DELAYED":      6,
		"FAILURE_TYPE_INTERMITTENT": 7,
	}
)

func (x FailureType) Enum() *FailureType {
	p := new(FailureType)
	*p = x
	return p
}

func (x FailureType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FailureType) Descriptor() protoreflect.EnumDescriptor {
	return file_failure_proto_enumTypes[1].Descriptor()
}

func (FailureType) Type() protoreflect.EnumType {
	return &file_failure_proto_enumTypes[1]
}

func (x FailureType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FailureType.Descriptor instead.
func (FailureType) EnumDescriptor() ([]byte, []int) {
	return file_failure_proto_rawDescGZIP(), []int{1}
}

// Possible results returned for failure requests.
type FailureResult_Result int32

const (
	FailureResult_RESULT_UNKNOWN          FailureResult_Result = 0 // Unknown result
	FailureResult_RESULT_SUCCESS          FailureResult_Result = 1 // Request succeeded
	FailureResult_RESULT_NO_SYSTEM        FailureResult_Result = 2 // No system is connected
	FailureResult_RESULT_CONNECTION_ERROR FailureResult_Result = 3 // Connection error
	FailureResult_RESULT_UNSUPPORTED      FailureResult_Result = 4 // Failure not supported
	FailureResult_RESULT_DENIED           FailureResult_Result = 5 // Failure injection denied
	FailureResult_RESULT_DISABLED         FailureResult_Result = 6 // Failure injection is disabled
	FailureResult_RESULT_TIMEOUT          FailureResult_Result = 7 // Request timed out
)

// Enum value maps for FailureResult_Result.
var (
	FailureResult_Result_name = map[int32]string{
		0: "RESULT_UNKNOWN",
		1: "RESULT_SUCCESS",
		2: "RESULT_NO_SYSTEM",
		3: "RESULT_CONNECTION_ERROR",
		4: "RESULT_UNSUPPORTED",
		5: "RESULT_DENIED",
		6: "RESULT_DISABLED",
		7: "RESULT_TIMEOUT",
	}
	FailureResult_Result_value = map[string]int32{
		"RESULT_UNKNOWN":          0,
		"RESULT_SUCCESS":          1,
		"RESULT_NO_SYSTEM":        2,
		"RESULT_CONNECTION_ERROR": 3,
		"RESULT_UNSUPPORTED":      4,
		"RESULT_DENIED":           5,
		"RESULT_DISABLED":         6,
		"RESULT_TIMEOUT":          7,
	}
)

func (x FailureResult_Result) Enum() *FailureResult_Result {
	p := new(FailureResult_Result)
	*p = x
	return p
}

func (x FailureResult_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FailureResult_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_failure_proto_enumTypes[2].Descriptor()
}

func (FailureResult_Result) Type() protoreflect.EnumType {
	return &file_failure_proto_enumTypes[2]
}

func (x FailureResult_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FailureResult_Result.Descriptor instead.
func (FailureResult_Result) EnumDescriptor() ([]byte, []int) {
	return file_failure_proto_rawDescGZIP(), []int{2, 0}
}

type InjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FailureUnit   FailureUnit            `protobuf:"varint,1,opt,name=failure_unit,json=failureUnit,proto3,enum=mavsdk.rpc.failure.FailureUnit" json:"failure_unit,omitempty"` // The failure unit to send
	FailureType   FailureType            `protobuf:"varint,2,opt,name=failure_type,json=failureType,proto3,enum=mavsdk.rpc.failure.FailureType" json:"failure_type,omitempty"` // The failure type to send
	Instance      int32                  `protobuf:"varint,3,opt,name=instance,proto3" json:"instance,omitempty"`                                                              // Instance to affect (0 for all)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InjectRequest) Reset() {
	*x = InjectRequest{}
	mi := &file_failure_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjectRequest) ProtoMessage() {}

func (x *InjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_failure_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjectRequest.ProtoReflect.Descriptor instead.
func (*InjectRequest) Descriptor() ([]byte, []int) {
	return file_failure_proto_rawDescGZIP(), []int{0}
}

func (x *InjectRequest) GetFailureUnit() FailureUnit {
	if x != nil {
		return x.FailureUnit
	}
	return FailureUnit_FAILURE_UNIT_SENSOR_GYRO
}

func (x *InjectRequest) GetFailureType() FailureType {
	if x != nil {
		return x.FailureType
	}
	return FailureType_FAILURE_TYPE_OK
}

func (x *InjectRequest) GetInstance() int32 {
	if x != nil {
		return x.Instance
	}
	return 0
}

type InjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FailureResult *FailureResult         `protobuf:"bytes,1,opt,name=failure_result,json=failureResult,proto3" json:"failure_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InjectResponse) Reset() {
	*x = InjectResponse{}
	mi := &file_failure_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjectResponse) ProtoMessage() {}

func (x *InjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_failure_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjectResponse.ProtoReflect.Descriptor instead.
func (*InjectResponse) Descriptor() ([]byte, []int) {
	return file_failure_proto_rawDescGZIP(), []int{1}
}

func (x *InjectResponse) GetFailureResult() *FailureResult {
	if x != nil {
		return x.FailureResult
	}
	return nil
}

type FailureResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        FailureResult_Result   `protobuf:"varint,1,opt,name=result,proto3,enum=mavsdk.rpc.failure.FailureResult_Result" json:"result,omitempty"` // Result enum value
	ResultStr     string                 `protobuf:"bytes,2,opt,name=result_str,json=resultStr,proto3" json:"result_str,omitempty"`                        // Human-readable English string describing the result
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FailureResult) Reset() {
	*x = FailureResult{}
	mi := &file_failure_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailureResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailureResult) ProtoMessage() {}

func (x *FailureResult) ProtoReflect() protoreflect.Message {
	mi := &file_failure_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailureResult.ProtoReflect.Descriptor instead.
func (*FailureResult) Descriptor() ([]byte, []int) {
	return file_failure_proto_rawDescGZIP(), []int{2}
}

func (x *FailureResult) GetResult() FailureResult_Result {
	if x != nil {
		return x.Result
	}
	return FailureResult_RESULT_UNKNOWN
}

func (x *FailureResult) GetResultStr() string {
	if x != nil {
		return x.ResultStr
	}
	return ""
}

var File_failure_proto protoreflect.FileDescriptor

const file_failure_proto_rawDesc = "" +
	"\n" +
	"\rfailure.proto\x12\x12mavsdk.rpc.failure\x1a\x14mavsdk_options.proto\"\xb3\x01\n" +
	"\rInjectRequest\x12B\n" +
	"\ffailure_unit\x18\x01 \x01(\x0e2\x1f.mavsdk.rpc.failure.FailureUnitR\vfailureUnit\x12B\n" +
	"\ffailure_type\x18\x02 \x01(\x0e2\x1f.mavsdk.rpc.failure.FailureTypeR\vfailureType\x12\x1a\n" +
	"\binstance\x18\x03 \x01(\x05R\binstance\"Z\n" +
	"\x0eInjectResponse\x12H\n" +
	"\x0efailure_result\x18\x01 \x01(\v2!.mavsdk.rpc.failure.FailureResultR\rfailureResult\"\xaa\x02\n" +
	"\rFailureResult\x12@\n" +
	"\x06result\x18\x01 \x01(\x0e2(.mavsdk.rpc.failure.FailureResult.ResultR\x06result\x12\x1d\n" +
	"\n" +
	"result_str\x18\x02 \x01(\tR\tresultStr\"\xb7\x01\n" +
	"\x06Result\x12\x12\n" +
	"\x0eRESULT_UNKNOWN\x10\x00\x12\x12\n" +
	"\x0eRESULT_SUCCESS\x10\x01\x12\x14\n" +
	"\x10RESULT_NO_SYSTEM\x10\x02\x12\x1b\n" +
	"\x17RESULT_CONNECTION_ERROR\x10\x03\x12\x16\n" +
	"\x12RESULT_UNSUPPORTED\x10\x04\x12\x11\n" +
	"\rRESULT_DENIED\x10\x05\x12\x13\n" +
	"\x0fRESULT_DISABLED\x10\x06\x12\x12\n" +
	"\x0eRESULT_TIMEOUT\x10\a*\xfd\x03\n" +
	"\vFailureUnit\x12\x1c\n" +
	"\x18FAILURE_UNIT_SENSOR_GYRO\x10\x00\x12\x1d\n" +
	"\x19FAILURE_UNIT_SENSOR_ACCEL\x10\x01\x12\x1b\n" +
	"\x17FAILURE_UNIT_SENSOR_MAG\x10\x02\x12\x1c\n" +
	"\x18FAILURE_UNIT_SENSOR_BARO\x10\x03\x12\x1b\n" +
	"\x17FAILURE_UNIT_SENSOR_GPS\x10\x04\x12$\n" +
	" FAILURE_UNIT_SENSOR_OPTICAL_FLOW\x10\x05\x12\x1b\n" +
	"\x17FAILURE_UNIT_SENSOR_VIO\x10\x06\x12'\n" +
	"#FAILURE_UNIT_SENSOR_DISTANCE_SENSOR\x10\a\x12 \n" +
	"\x1cFAILURE_UNIT_SENSOR_AIRSPEED\x10\b\x12\x1f\n" +
	"\x1bFAILURE_UNIT_SYSTEM_BATTERY\x10d\x12\x1d\n" +
	"\x19FAILURE_UNIT_SYSTEM_MOTOR\x10e\x12\x1d\n" +
	"\x19FAILURE_UNIT_SYSTEM_SERVO\x10f\x12!\n" +
	"\x1dFAILURE_UNIT_SYSTEM_AVOIDANCE\x10g\x12!\n" +
	"\x1dFAILURE_UNIT_SYSTEM_RC_SIGNAL\x10h\x12&\n" +
	"\"FAILURE_UNIT_SYSTEM_MAVLINK_SIGNAL\x10i*\xd2\x01\n" +
	"\vFailureType\x12\x13\n" +
	"\x0fFAILURE_TYPE_OK\x10\x00\x12\x14\n" +
	"\x10FAILURE_TYPE_OFF\x10\x01\x12\x16\n" +
	"\x12FAILURE_TYPE_STUCK\x10\x02\x12\x18\n" +
	"\x14FAILURE_TYPE_GARBAGE\x10\x03\x12\x16\n" +
	"\x12FAILURE_TYPE_WRONG\x10\x04\x12\x15\n" +
	"\x11FAILURE_TYPE_SLOW\x10\x05\x12\x18\n" +
	"\x14FAILURE_TYPE_DELAYED\x10\x06\x12\x1d\n" +
	"\x19FAILURE_TYPE_INTERMITTENT\x10\a2g\n" +
	"\x0eFailureService\x12U\n" +
	"\x06Inject\x12!.mavsdk.rpc.failure.InjectRequest\x1a\".mavsdk.rpc.failure.InjectResponse\"\x04\x80\xb5\x18\x01B\x19B\fFailureProtoZ\t.;failureb\x06proto3"

var (
	file_failure_proto_rawDescOnce sync.Once
	file_failure_proto_rawDescData []byte
)

func file_failure_proto_rawDescGZIP() []byte {
	file_failure_proto_rawDescOnce.Do(func() {
		file_failure_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_failure_proto_rawDesc), len(file_failure_proto_rawDesc)))
	})
	return file_failure_proto_rawDescData
}

var file_failure_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_failure_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_failure_proto_goTypes = []any{
	(FailureUnit)(0),          // 0: mavsdk.rpc.failure.FailureUnit
	(FailureType)(0),          // 1: mavsdk.rpc.failure.FailureType
	(FailureResult_Result)(0), // 2: mavsdk.rpc.failure.FailureResult.Result
	(*InjectRequest)(nil),     // 3: mavsdk.rpc.failure.InjectRequest
	(*InjectResponse)(nil),    // 4: mavsdk.rpc.failure.InjectResponse
	(*FailureResult)(nil),     // 5: mavsdk.rpc.failure.FailureResult
}
var file_failure_proto_depIdxs = []int32{
	0, // 0: mavsdk.rpc.failure.InjectRequest.failure_unit:type_name -> mavsdk.rpc.failure.FailureUnit
	1, // 1: mavsdk.rpc.failure.InjectRequest.failure_type:type_name -> mavsdk.rpc.failure.FailureType
	5, // 2: mavsdk.rpc.failure.InjectResponse.failure_result:type_name -> mavsdk.rpc.failure.FailureResult
	2, // 3: mavsdk.rpc.failure.FailureResult.result:type_name -> mavsdk.rpc.failure.FailureResult.Result
	3, // 4: mavsdk.rpc.failure.FailureService.Inject:input_type -> mavsdk.rpc.failure.InjectRequest
	4, // 5: mavsdk.rpc.failure.FailureService.Inject:output_type -> mavsdk.rpc.failure.InjectResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_failure_proto_init() }
func file_failure_proto_init() {
	if File_failure_proto != nil {
		return
	}
	file_mavsdk_options_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_failure_proto_rawDesc), len(file_failure_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_failure_proto_goTypes,
		DependencyIndexes: file_failure_proto_depIdxs,
		EnumInfos:         file_failure_proto_enumTypes,
		MessageInfos:      file_failure_proto_msgTypes,
	}.Build()
	File_failure_proto = out.File
	file_failure_proto_goTypes = nil
	file_failure_proto_depIdxs = nil
}
