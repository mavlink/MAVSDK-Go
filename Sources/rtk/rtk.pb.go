// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: rtk.proto

package rtk

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Possible results returned for rtk requests.
type RtkResult_Result int32

const (
	RtkResult_RESULT_UNKNOWN          RtkResult_Result = 0 // Unknown result
	RtkResult_RESULT_SUCCESS          RtkResult_Result = 1 // Request succeeded
	RtkResult_RESULT_TOO_LONG         RtkResult_Result = 2 // Passed data is too long
	RtkResult_RESULT_NO_SYSTEM        RtkResult_Result = 5 // No system connected
	RtkResult_RESULT_CONNECTION_ERROR RtkResult_Result = 6 // Connection error
)

// Enum value maps for RtkResult_Result.
var (
	RtkResult_Result_name = map[int32]string{
		0: "RESULT_UNKNOWN",
		1: "RESULT_SUCCESS",
		2: "RESULT_TOO_LONG",
		5: "RESULT_NO_SYSTEM",
		6: "RESULT_CONNECTION_ERROR",
	}
	RtkResult_Result_value = map[string]int32{
		"RESULT_UNKNOWN":          0,
		"RESULT_SUCCESS":          1,
		"RESULT_TOO_LONG":         2,
		"RESULT_NO_SYSTEM":        5,
		"RESULT_CONNECTION_ERROR": 6,
	}
)

func (x RtkResult_Result) Enum() *RtkResult_Result {
	p := new(RtkResult_Result)
	*p = x
	return p
}

func (x RtkResult_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RtkResult_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_rtk_proto_enumTypes[0].Descriptor()
}

func (RtkResult_Result) Type() protoreflect.EnumType {
	return &file_rtk_proto_enumTypes[0]
}

func (x RtkResult_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RtkResult_Result.Descriptor instead.
func (RtkResult_Result) EnumDescriptor() ([]byte, []int) {
	return file_rtk_proto_rawDescGZIP(), []int{3, 0}
}

// RTCM data type
type RtcmData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // The data encoded as a string
}

func (x *RtcmData) Reset() {
	*x = RtcmData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RtcmData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RtcmData) ProtoMessage() {}

func (x *RtcmData) ProtoReflect() protoreflect.Message {
	mi := &file_rtk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RtcmData.ProtoReflect.Descriptor instead.
func (*RtcmData) Descriptor() ([]byte, []int) {
	return file_rtk_proto_rawDescGZIP(), []int{0}
}

func (x *RtcmData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type SendRtcmDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RtcmData *RtcmData `protobuf:"bytes,1,opt,name=rtcm_data,json=rtcmData,proto3" json:"rtcm_data,omitempty"` // The data
}

func (x *SendRtcmDataRequest) Reset() {
	*x = SendRtcmDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtk_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRtcmDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRtcmDataRequest) ProtoMessage() {}

func (x *SendRtcmDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rtk_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRtcmDataRequest.ProtoReflect.Descriptor instead.
func (*SendRtcmDataRequest) Descriptor() ([]byte, []int) {
	return file_rtk_proto_rawDescGZIP(), []int{1}
}

func (x *SendRtcmDataRequest) GetRtcmData() *RtcmData {
	if x != nil {
		return x.RtcmData
	}
	return nil
}

type SendRtcmDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RtkResult *RtkResult `protobuf:"bytes,1,opt,name=rtk_result,json=rtkResult,proto3" json:"rtk_result,omitempty"`
}

func (x *SendRtcmDataResponse) Reset() {
	*x = SendRtcmDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtk_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRtcmDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRtcmDataResponse) ProtoMessage() {}

func (x *SendRtcmDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rtk_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRtcmDataResponse.ProtoReflect.Descriptor instead.
func (*SendRtcmDataResponse) Descriptor() ([]byte, []int) {
	return file_rtk_proto_rawDescGZIP(), []int{2}
}

func (x *SendRtcmDataResponse) GetRtkResult() *RtkResult {
	if x != nil {
		return x.RtkResult
	}
	return nil
}

type RtkResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    RtkResult_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mavsdk.rpc.rtk.RtkResult_Result" json:"result,omitempty"` // Result enum value
	ResultStr string           `protobuf:"bytes,2,opt,name=result_str,json=resultStr,proto3" json:"result_str,omitempty"`                // Human-readable English string describing the result
}

func (x *RtkResult) Reset() {
	*x = RtkResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtk_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RtkResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RtkResult) ProtoMessage() {}

func (x *RtkResult) ProtoReflect() protoreflect.Message {
	mi := &file_rtk_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RtkResult.ProtoReflect.Descriptor instead.
func (*RtkResult) Descriptor() ([]byte, []int) {
	return file_rtk_proto_rawDescGZIP(), []int{3}
}

func (x *RtkResult) GetResult() RtkResult_Result {
	if x != nil {
		return x.Result
	}
	return RtkResult_RESULT_UNKNOWN
}

func (x *RtkResult) GetResultStr() string {
	if x != nil {
		return x.ResultStr
	}
	return ""
}

var File_rtk_proto protoreflect.FileDescriptor

var file_rtk_proto_rawDesc = []byte{
	0x0a, 0x09, 0x72, 0x74, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6d, 0x61, 0x76,
	0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x72, 0x74, 0x6b, 0x1a, 0x14, 0x6d, 0x61, 0x76,
	0x73, 0x64, 0x6b, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x1e, 0x0a, 0x08, 0x52, 0x74, 0x63, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x4c, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x74, 0x63, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x72, 0x74, 0x63, 0x6d,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61,
	0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x72, 0x74, 0x6b, 0x2e, 0x52, 0x74, 0x63,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x72, 0x74, 0x63, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x50, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x74, 0x63, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x72, 0x74, 0x6b, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61,
	0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x72, 0x74, 0x6b, 0x2e, 0x52, 0x74, 0x6b,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x09, 0x72, 0x74, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xde, 0x01, 0x0a, 0x09, 0x52, 0x74, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x38, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x72, 0x74, 0x6b,
	0x2e, 0x52, 0x74, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x72, 0x22, 0x78, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54,
	0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45,
	0x53, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0x02, 0x12,
	0x14, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x4e, 0x4f, 0x5f, 0x53, 0x59, 0x53,
	0x54, 0x45, 0x4d, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f,
	0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x06, 0x32, 0x6d, 0x0a, 0x0a, 0x52, 0x74, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x5f, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x74, 0x63, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x23, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x72, 0x74,
	0x6b, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x74, 0x63, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x72, 0x74, 0x6b, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x74, 0x63, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0x80, 0xb5, 0x18,
	0x01, 0x42, 0x11, 0x42, 0x08, 0x52, 0x74, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x05, 0x2e,
	0x3b, 0x72, 0x74, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rtk_proto_rawDescOnce sync.Once
	file_rtk_proto_rawDescData = file_rtk_proto_rawDesc
)

func file_rtk_proto_rawDescGZIP() []byte {
	file_rtk_proto_rawDescOnce.Do(func() {
		file_rtk_proto_rawDescData = protoimpl.X.CompressGZIP(file_rtk_proto_rawDescData)
	})
	return file_rtk_proto_rawDescData
}

var file_rtk_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rtk_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_rtk_proto_goTypes = []any{
	(RtkResult_Result)(0),        // 0: mavsdk.rpc.rtk.RtkResult.Result
	(*RtcmData)(nil),             // 1: mavsdk.rpc.rtk.RtcmData
	(*SendRtcmDataRequest)(nil),  // 2: mavsdk.rpc.rtk.SendRtcmDataRequest
	(*SendRtcmDataResponse)(nil), // 3: mavsdk.rpc.rtk.SendRtcmDataResponse
	(*RtkResult)(nil),            // 4: mavsdk.rpc.rtk.RtkResult
}
var file_rtk_proto_depIdxs = []int32{
	1, // 0: mavsdk.rpc.rtk.SendRtcmDataRequest.rtcm_data:type_name -> mavsdk.rpc.rtk.RtcmData
	4, // 1: mavsdk.rpc.rtk.SendRtcmDataResponse.rtk_result:type_name -> mavsdk.rpc.rtk.RtkResult
	0, // 2: mavsdk.rpc.rtk.RtkResult.result:type_name -> mavsdk.rpc.rtk.RtkResult.Result
	2, // 3: mavsdk.rpc.rtk.RtkService.SendRtcmData:input_type -> mavsdk.rpc.rtk.SendRtcmDataRequest
	3, // 4: mavsdk.rpc.rtk.RtkService.SendRtcmData:output_type -> mavsdk.rpc.rtk.SendRtcmDataResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_rtk_proto_init() }
func file_rtk_proto_init() {
	if File_rtk_proto != nil {
		return
	}
	
	if !protoimpl.UnsafeEnabled {
		file_rtk_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RtcmData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rtk_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SendRtcmDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rtk_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SendRtcmDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rtk_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RtkResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rtk_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rtk_proto_goTypes,
		DependencyIndexes: file_rtk_proto_depIdxs,
		EnumInfos:         file_rtk_proto_enumTypes,
		MessageInfos:      file_rtk_proto_msgTypes,
	}.Build()
	File_rtk_proto = out.File
	file_rtk_proto_rawDesc = nil
	file_rtk_proto_goTypes = nil
	file_rtk_proto_depIdxs = nil
}
