// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: camera.proto

package camera

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Camera mode type.
type Mode int32

const (
	Mode_MODE_UNKNOWN Mode = 0 // Unknown
	Mode_MODE_PHOTO   Mode = 1 // Photo mode
	Mode_MODE_VIDEO   Mode = 2 // Video mode
)

// Enum value maps for Mode.
var (
	Mode_name = map[int32]string{
		0: "MODE_UNKNOWN",
		1: "MODE_PHOTO",
		2: "MODE_VIDEO",
	}
	Mode_value = map[string]int32{
		"MODE_UNKNOWN": 0,
		"MODE_PHOTO":   1,
		"MODE_VIDEO":   2,
	}
)

func (x Mode) Enum() *Mode {
	p := new(Mode)
	*p = x
	return p
}

func (x Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_camera_proto_enumTypes[0].Descriptor()
}

func (Mode) Type() protoreflect.EnumType {
	return &file_camera_proto_enumTypes[0]
}

func (x Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mode.Descriptor instead.
func (Mode) EnumDescriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{0}
}

// Photos range type.
type PhotosRange int32

const (
	PhotosRange_PHOTOS_RANGE_ALL              PhotosRange = 0 // All the photos present on the camera
	PhotosRange_PHOTOS_RANGE_SINCE_CONNECTION PhotosRange = 1 // Photos taken since MAVSDK got connected
)

// Enum value maps for PhotosRange.
var (
	PhotosRange_name = map[int32]string{
		0: "PHOTOS_RANGE_ALL",
		1: "PHOTOS_RANGE_SINCE_CONNECTION",
	}
	PhotosRange_value = map[string]int32{
		"PHOTOS_RANGE_ALL":              0,
		"PHOTOS_RANGE_SINCE_CONNECTION": 1,
	}
)

func (x PhotosRange) Enum() *PhotosRange {
	p := new(PhotosRange)
	*p = x
	return p
}

func (x PhotosRange) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhotosRange) Descriptor() protoreflect.EnumDescriptor {
	return file_camera_proto_enumTypes[1].Descriptor()
}

func (PhotosRange) Type() protoreflect.EnumType {
	return &file_camera_proto_enumTypes[1]
}

func (x PhotosRange) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhotosRange.Descriptor instead.
func (PhotosRange) EnumDescriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{1}
}

// Video stream status type.
type VideoStreamInfo_VideoStreamStatus int32

const (
	VideoStreamInfo_VIDEO_STREAM_STATUS_NOT_RUNNING VideoStreamInfo_VideoStreamStatus = 0 // Video stream is not running
	VideoStreamInfo_VIDEO_STREAM_STATUS_IN_PROGRESS VideoStreamInfo_VideoStreamStatus = 1 // Video stream is running
)

// Enum value maps for VideoStreamInfo_VideoStreamStatus.
var (
	VideoStreamInfo_VideoStreamStatus_name = map[int32]string{
		0: "VIDEO_STREAM_STATUS_NOT_RUNNING",
		1: "VIDEO_STREAM_STATUS_IN_PROGRESS",
	}
	VideoStreamInfo_VideoStreamStatus_value = map[string]int32{
		"VIDEO_STREAM_STATUS_NOT_RUNNING": 0,
		"VIDEO_STREAM_STATUS_IN_PROGRESS": 1,
	}
)

func (x VideoStreamInfo_VideoStreamStatus) Enum() *VideoStreamInfo_VideoStreamStatus {
	p := new(VideoStreamInfo_VideoStreamStatus)
	*p = x
	return p
}

func (x VideoStreamInfo_VideoStreamStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VideoStreamInfo_VideoStreamStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_camera_proto_enumTypes[2].Descriptor()
}

func (VideoStreamInfo_VideoStreamStatus) Type() protoreflect.EnumType {
	return &file_camera_proto_enumTypes[2]
}

func (x VideoStreamInfo_VideoStreamStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VideoStreamInfo_VideoStreamStatus.Descriptor instead.
func (VideoStreamInfo_VideoStreamStatus) EnumDescriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{4, 0}
}

// Video stream light spectrum type
type VideoStreamInfo_VideoStreamSpectrum int32

const (
	VideoStreamInfo_VIDEO_STREAM_SPECTRUM_UNKNOWN       VideoStreamInfo_VideoStreamSpectrum = 0 // Unknown
	VideoStreamInfo_VIDEO_STREAM_SPECTRUM_VISIBLE_LIGHT VideoStreamInfo_VideoStreamSpectrum = 1 // Visible light
	VideoStreamInfo_VIDEO_STREAM_SPECTRUM_INFRARED      VideoStreamInfo_VideoStreamSpectrum = 2 // Infrared
)

// Enum value maps for VideoStreamInfo_VideoStreamSpectrum.
var (
	VideoStreamInfo_VideoStreamSpectrum_name = map[int32]string{
		0: "VIDEO_STREAM_SPECTRUM_UNKNOWN",
		1: "VIDEO_STREAM_SPECTRUM_VISIBLE_LIGHT",
		2: "VIDEO_STREAM_SPECTRUM_INFRARED",
	}
	VideoStreamInfo_VideoStreamSpectrum_value = map[string]int32{
		"VIDEO_STREAM_SPECTRUM_UNKNOWN":       0,
		"VIDEO_STREAM_SPECTRUM_VISIBLE_LIGHT": 1,
		"VIDEO_STREAM_SPECTRUM_INFRARED":      2,
	}
)

func (x VideoStreamInfo_VideoStreamSpectrum) Enum() *VideoStreamInfo_VideoStreamSpectrum {
	p := new(VideoStreamInfo_VideoStreamSpectrum)
	*p = x
	return p
}

func (x VideoStreamInfo_VideoStreamSpectrum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VideoStreamInfo_VideoStreamSpectrum) Descriptor() protoreflect.EnumDescriptor {
	return file_camera_proto_enumTypes[3].Descriptor()
}

func (VideoStreamInfo_VideoStreamSpectrum) Type() protoreflect.EnumType {
	return &file_camera_proto_enumTypes[3]
}

func (x VideoStreamInfo_VideoStreamSpectrum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VideoStreamInfo_VideoStreamSpectrum.Descriptor instead.
func (VideoStreamInfo_VideoStreamSpectrum) EnumDescriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{4, 1}
}

// Storage status type.
type Storage_StorageStatus int32

const (
	Storage_STORAGE_STATUS_NOT_AVAILABLE Storage_StorageStatus = 0 // Status not available
	Storage_STORAGE_STATUS_UNFORMATTED   Storage_StorageStatus = 1 // Storage is not formatted (i.e. has no recognized file system)
	Storage_STORAGE_STATUS_FORMATTED     Storage_StorageStatus = 2 // Storage is formatted (i.e. has recognized a file system)
	Storage_STORAGE_STATUS_NOT_SUPPORTED Storage_StorageStatus = 3 // Storage status is not supported
)

// Enum value maps for Storage_StorageStatus.
var (
	Storage_StorageStatus_name = map[int32]string{
		0: "STORAGE_STATUS_NOT_AVAILABLE",
		1: "STORAGE_STATUS_UNFORMATTED",
		2: "STORAGE_STATUS_FORMATTED",
		3: "STORAGE_STATUS_NOT_SUPPORTED",
	}
	Storage_StorageStatus_value = map[string]int32{
		"STORAGE_STATUS_NOT_AVAILABLE": 0,
		"STORAGE_STATUS_UNFORMATTED":   1,
		"STORAGE_STATUS_FORMATTED":     2,
		"STORAGE_STATUS_NOT_SUPPORTED": 3,
	}
)

func (x Storage_StorageStatus) Enum() *Storage_StorageStatus {
	p := new(Storage_StorageStatus)
	*p = x
	return p
}

func (x Storage_StorageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Storage_StorageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_camera_proto_enumTypes[4].Descriptor()
}

func (Storage_StorageStatus) Type() protoreflect.EnumType {
	return &file_camera_proto_enumTypes[4]
}

func (x Storage_StorageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Storage_StorageStatus.Descriptor instead.
func (Storage_StorageStatus) EnumDescriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{33, 0}
}

// Storage type.
type Storage_StorageType int32

const (
	Storage_STORAGE_TYPE_UNKNOWN   Storage_StorageType = 0   // Storage type unknown
	Storage_STORAGE_TYPE_USB_STICK Storage_StorageType = 1   // Storage type USB stick
	Storage_STORAGE_TYPE_SD        Storage_StorageType = 2   // Storage type SD card
	Storage_STORAGE_TYPE_MICROSD   Storage_StorageType = 3   // Storage type MicroSD card
	Storage_STORAGE_TYPE_HD        Storage_StorageType = 7   // Storage type HD mass storage
	Storage_STORAGE_TYPE_OTHER     Storage_StorageType = 254 // Storage type other, not listed
)

// Enum value maps for Storage_StorageType.
var (
	Storage_StorageType_name = map[int32]string{
		0:   "STORAGE_TYPE_UNKNOWN",
		1:   "STORAGE_TYPE_USB_STICK",
		2:   "STORAGE_TYPE_SD",
		3:   "STORAGE_TYPE_MICROSD",
		7:   "STORAGE_TYPE_HD",
		254: "STORAGE_TYPE_OTHER",
	}
	Storage_StorageType_value = map[string]int32{
		"STORAGE_TYPE_UNKNOWN":   0,
		"STORAGE_TYPE_USB_STICK": 1,
		"STORAGE_TYPE_SD":        2,
		"STORAGE_TYPE_MICROSD":   3,
		"STORAGE_TYPE_HD":        7,
		"STORAGE_TYPE_OTHER":     254,
	}
)

func (x Storage_StorageType) Enum() *Storage_StorageType {
	p := new(Storage_StorageType)
	*p = x
	return p
}

func (x Storage_StorageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Storage_StorageType) Descriptor() protoreflect.EnumDescriptor {
	return file_camera_proto_enumTypes[5].Descriptor()
}

func (Storage_StorageType) Type() protoreflect.EnumType {
	return &file_camera_proto_enumTypes[5]
}

func (x Storage_StorageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Storage_StorageType.Descriptor instead.
func (Storage_StorageType) EnumDescriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{33, 1}
}

// Possible results returned for camera commands
type CameraResult_Result int32

const (
	CameraResult_RESULT_UNKNOWN              CameraResult_Result = 0  // Unknown result
	CameraResult_RESULT_SUCCESS              CameraResult_Result = 1  // Command executed successfully
	CameraResult_RESULT_IN_PROGRESS          CameraResult_Result = 2  // Command in progress
	CameraResult_RESULT_BUSY                 CameraResult_Result = 3  // Camera is busy and rejected command
	CameraResult_RESULT_DENIED               CameraResult_Result = 4  // Camera denied the command
	CameraResult_RESULT_ERROR                CameraResult_Result = 5  // An error has occurred while executing the command
	CameraResult_RESULT_TIMEOUT              CameraResult_Result = 6  // Command timed out
	CameraResult_RESULT_WRONG_ARGUMENT       CameraResult_Result = 7  // Command has wrong argument(s)
	CameraResult_RESULT_NO_SYSTEM            CameraResult_Result = 8  // No system connected
	CameraResult_RESULT_PROTOCOL_UNSUPPORTED CameraResult_Result = 9  // Definition file protocol not supported
	CameraResult_RESULT_UNAVAILABLE          CameraResult_Result = 10 // Not available (yet)
	CameraResult_RESULT_CAMERA_ID_INVALID    CameraResult_Result = 11 // Camera with camera ID not found
	CameraResult_RESULT_ACTION_UNSUPPORTED   CameraResult_Result = 12 // Camera action not supported
)

// Enum value maps for CameraResult_Result.
var (
	CameraResult_Result_name = map[int32]string{
		0:  "RESULT_UNKNOWN",
		1:  "RESULT_SUCCESS",
		2:  "RESULT_IN_PROGRESS",
		3:  "RESULT_BUSY",
		4:  "RESULT_DENIED",
		5:  "RESULT_ERROR",
		6:  "RESULT_TIMEOUT",
		7:  "RESULT_WRONG_ARGUMENT",
		8:  "RESULT_NO_SYSTEM",
		9:  "RESULT_PROTOCOL_UNSUPPORTED",
		10: "RESULT_UNAVAILABLE",
		11: "RESULT_CAMERA_ID_INVALID",
		12: "RESULT_ACTION_UNSUPPORTED",
	}
	CameraResult_Result_value = map[string]int32{
		"RESULT_UNKNOWN":              0,
		"RESULT_SUCCESS":              1,
		"RESULT_IN_PROGRESS":          2,
		"RESULT_BUSY":                 3,
		"RESULT_DENIED":               4,
		"RESULT_ERROR":                5,
		"RESULT_TIMEOUT":              6,
		"RESULT_WRONG_ARGUMENT":       7,
		"RESULT_NO_SYSTEM":            8,
		"RESULT_PROTOCOL_UNSUPPORTED": 9,
		"RESULT_UNAVAILABLE":          10,
		"RESULT_CAMERA_ID_INVALID":    11,
		"RESULT_ACTION_UNSUPPORTED":   12,
	}
)

func (x CameraResult_Result) Enum() *CameraResult_Result {
	p := new(CameraResult_Result)
	*p = x
	return p
}

func (x CameraResult_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraResult_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_camera_proto_enumTypes[6].Descriptor()
}

func (CameraResult_Result) Type() protoreflect.EnumType {
	return &file_camera_proto_enumTypes[6]
}

func (x CameraResult_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CameraResult_Result.Descriptor instead.
func (CameraResult_Result) EnumDescriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{83, 0}
}

// Type to represent a setting option.
type Option struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	OptionId          string                 `protobuf:"bytes,1,opt,name=option_id,json=optionId,proto3" json:"option_id,omitempty"`                            // Name of the option (machine readable)
	OptionDescription string                 `protobuf:"bytes,2,opt,name=option_description,json=optionDescription,proto3" json:"option_description,omitempty"` // Description of the option (human readable)
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Option) Reset() {
	*x = Option{}
	mi := &file_camera_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Option) ProtoMessage() {}

func (x *Option) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Option.ProtoReflect.Descriptor instead.
func (*Option) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{0}
}

func (x *Option) GetOptionId() string {
	if x != nil {
		return x.OptionId
	}
	return ""
}

func (x *Option) GetOptionDescription() string {
	if x != nil {
		return x.OptionDescription
	}
	return ""
}

// Type to represent a setting with a selected option.
type Setting struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SettingId          string                 `protobuf:"bytes,1,opt,name=setting_id,json=settingId,proto3" json:"setting_id,omitempty"`                            // Name of a setting (machine readable)
	SettingDescription string                 `protobuf:"bytes,2,opt,name=setting_description,json=settingDescription,proto3" json:"setting_description,omitempty"` // Description of the setting (human readable). This field is meant to be read from the drone, ignore it when setting.
	Option             *Option                `protobuf:"bytes,3,opt,name=option,proto3" json:"option,omitempty"`                                                   // Selected option
	IsRange            bool                   `protobuf:"varint,4,opt,name=is_range,json=isRange,proto3" json:"is_range,omitempty"`                                 // If option is given as a range. This field is meant to be read from the drone, ignore it when setting.
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Setting) Reset() {
	*x = Setting{}
	mi := &file_camera_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Setting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Setting) ProtoMessage() {}

func (x *Setting) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Setting.ProtoReflect.Descriptor instead.
func (*Setting) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{1}
}

func (x *Setting) GetSettingId() string {
	if x != nil {
		return x.SettingId
	}
	return ""
}

func (x *Setting) GetSettingDescription() string {
	if x != nil {
		return x.SettingDescription
	}
	return ""
}

func (x *Setting) GetOption() *Option {
	if x != nil {
		return x.Option
	}
	return nil
}

func (x *Setting) GetIsRange() bool {
	if x != nil {
		return x.IsRange
	}
	return false
}

// Type to represent a setting with a list of options to choose from.
type SettingOptions struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ComponentId        int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`                     // Component ID
	SettingId          string                 `protobuf:"bytes,2,opt,name=setting_id,json=settingId,proto3" json:"setting_id,omitempty"`                            // Name of the setting (machine readable)
	SettingDescription string                 `protobuf:"bytes,3,opt,name=setting_description,json=settingDescription,proto3" json:"setting_description,omitempty"` // Description of the setting (human readable)
	Options            []*Option              `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`                                                 // List of options or if range [min, max] or [min, max, interval]
	IsRange            bool                   `protobuf:"varint,5,opt,name=is_range,json=isRange,proto3" json:"is_range,omitempty"`                                 // If option is given as a range
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SettingOptions) Reset() {
	*x = SettingOptions{}
	mi := &file_camera_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingOptions) ProtoMessage() {}

func (x *SettingOptions) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingOptions.ProtoReflect.Descriptor instead.
func (*SettingOptions) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{2}
}

func (x *SettingOptions) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *SettingOptions) GetSettingId() string {
	if x != nil {
		return x.SettingId
	}
	return ""
}

func (x *SettingOptions) GetSettingDescription() string {
	if x != nil {
		return x.SettingDescription
	}
	return ""
}

func (x *SettingOptions) GetOptions() []*Option {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *SettingOptions) GetIsRange() bool {
	if x != nil {
		return x.IsRange
	}
	return false
}

// Type for video stream settings.
type VideoStreamSettings struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	FrameRateHz             float32                `protobuf:"fixed32,1,opt,name=frame_rate_hz,json=frameRateHz,proto3" json:"frame_rate_hz,omitempty"`                                    // Frames per second
	HorizontalResolutionPix uint32                 `protobuf:"varint,2,opt,name=horizontal_resolution_pix,json=horizontalResolutionPix,proto3" json:"horizontal_resolution_pix,omitempty"` // Horizontal resolution (in pixels)
	VerticalResolutionPix   uint32                 `protobuf:"varint,3,opt,name=vertical_resolution_pix,json=verticalResolutionPix,proto3" json:"vertical_resolution_pix,omitempty"`       // Vertical resolution (in pixels)
	BitRateBS               uint32                 `protobuf:"varint,4,opt,name=bit_rate_b_s,json=bitRateBS,proto3" json:"bit_rate_b_s,omitempty"`                                         // Bit rate (in bits per second)
	RotationDeg             uint32                 `protobuf:"varint,5,opt,name=rotation_deg,json=rotationDeg,proto3" json:"rotation_deg,omitempty"`                                       // Video image rotation (clockwise, 0-359 degrees)
	Uri                     string                 `protobuf:"bytes,6,opt,name=uri,proto3" json:"uri,omitempty"`                                                                           // Video stream URI
	HorizontalFovDeg        float32                `protobuf:"fixed32,7,opt,name=horizontal_fov_deg,json=horizontalFovDeg,proto3" json:"horizontal_fov_deg,omitempty"`                     // Horizontal fov in degrees
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *VideoStreamSettings) Reset() {
	*x = VideoStreamSettings{}
	mi := &file_camera_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoStreamSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoStreamSettings) ProtoMessage() {}

func (x *VideoStreamSettings) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoStreamSettings.ProtoReflect.Descriptor instead.
func (*VideoStreamSettings) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{3}
}

func (x *VideoStreamSettings) GetFrameRateHz() float32 {
	if x != nil {
		return x.FrameRateHz
	}
	return 0
}

func (x *VideoStreamSettings) GetHorizontalResolutionPix() uint32 {
	if x != nil {
		return x.HorizontalResolutionPix
	}
	return 0
}

func (x *VideoStreamSettings) GetVerticalResolutionPix() uint32 {
	if x != nil {
		return x.VerticalResolutionPix
	}
	return 0
}

func (x *VideoStreamSettings) GetBitRateBS() uint32 {
	if x != nil {
		return x.BitRateBS
	}
	return 0
}

func (x *VideoStreamSettings) GetRotationDeg() uint32 {
	if x != nil {
		return x.RotationDeg
	}
	return 0
}

func (x *VideoStreamSettings) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *VideoStreamSettings) GetHorizontalFovDeg() float32 {
	if x != nil {
		return x.HorizontalFovDeg
	}
	return 0
}

// Information about the video stream.
type VideoStreamInfo struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	StreamId      int32                               `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`                                            // Stream ID
	Settings      *VideoStreamSettings                `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`                                                             // Video stream settings
	Status        VideoStreamInfo_VideoStreamStatus   `protobuf:"varint,3,opt,name=status,proto3,enum=mavsdk.rpc.camera.VideoStreamInfo_VideoStreamStatus" json:"status,omitempty"`       // Current status of video streaming
	Spectrum      VideoStreamInfo_VideoStreamSpectrum `protobuf:"varint,4,opt,name=spectrum,proto3,enum=mavsdk.rpc.camera.VideoStreamInfo_VideoStreamSpectrum" json:"spectrum,omitempty"` // Light-spectrum of the video stream
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VideoStreamInfo) Reset() {
	*x = VideoStreamInfo{}
	mi := &file_camera_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoStreamInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoStreamInfo) ProtoMessage() {}

func (x *VideoStreamInfo) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoStreamInfo.ProtoReflect.Descriptor instead.
func (*VideoStreamInfo) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{4}
}

func (x *VideoStreamInfo) GetStreamId() int32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *VideoStreamInfo) GetSettings() *VideoStreamSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *VideoStreamInfo) GetStatus() VideoStreamInfo_VideoStreamStatus {
	if x != nil {
		return x.Status
	}
	return VideoStreamInfo_VIDEO_STREAM_STATUS_NOT_RUNNING
}

func (x *VideoStreamInfo) GetSpectrum() VideoStreamInfo_VideoStreamSpectrum {
	if x != nil {
		return x.Spectrum
	}
	return VideoStreamInfo_VIDEO_STREAM_SPECTRUM_UNKNOWN
}

type TakePhotoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TakePhotoRequest) Reset() {
	*x = TakePhotoRequest{}
	mi := &file_camera_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TakePhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakePhotoRequest) ProtoMessage() {}

func (x *TakePhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakePhotoRequest.ProtoReflect.Descriptor instead.
func (*TakePhotoRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{5}
}

func (x *TakePhotoRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

type TakePhotoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TakePhotoResponse) Reset() {
	*x = TakePhotoResponse{}
	mi := &file_camera_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TakePhotoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakePhotoResponse) ProtoMessage() {}

func (x *TakePhotoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakePhotoResponse.ProtoReflect.Descriptor instead.
func (*TakePhotoResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{6}
}

func (x *TakePhotoResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type StartPhotoIntervalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	IntervalS     float32                `protobuf:"fixed32,2,opt,name=interval_s,json=intervalS,proto3" json:"interval_s,omitempty"`      // Interval between photos (in seconds)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartPhotoIntervalRequest) Reset() {
	*x = StartPhotoIntervalRequest{}
	mi := &file_camera_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartPhotoIntervalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPhotoIntervalRequest) ProtoMessage() {}

func (x *StartPhotoIntervalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPhotoIntervalRequest.ProtoReflect.Descriptor instead.
func (*StartPhotoIntervalRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{7}
}

func (x *StartPhotoIntervalRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *StartPhotoIntervalRequest) GetIntervalS() float32 {
	if x != nil {
		return x.IntervalS
	}
	return 0
}

type StartPhotoIntervalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartPhotoIntervalResponse) Reset() {
	*x = StartPhotoIntervalResponse{}
	mi := &file_camera_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartPhotoIntervalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPhotoIntervalResponse) ProtoMessage() {}

func (x *StartPhotoIntervalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPhotoIntervalResponse.ProtoReflect.Descriptor instead.
func (*StartPhotoIntervalResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{8}
}

func (x *StartPhotoIntervalResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type StopPhotoIntervalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopPhotoIntervalRequest) Reset() {
	*x = StopPhotoIntervalRequest{}
	mi := &file_camera_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopPhotoIntervalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPhotoIntervalRequest) ProtoMessage() {}

func (x *StopPhotoIntervalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPhotoIntervalRequest.ProtoReflect.Descriptor instead.
func (*StopPhotoIntervalRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{9}
}

func (x *StopPhotoIntervalRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

type StopPhotoIntervalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopPhotoIntervalResponse) Reset() {
	*x = StopPhotoIntervalResponse{}
	mi := &file_camera_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopPhotoIntervalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPhotoIntervalResponse) ProtoMessage() {}

func (x *StopPhotoIntervalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPhotoIntervalResponse.ProtoReflect.Descriptor instead.
func (*StopPhotoIntervalResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{10}
}

func (x *StopPhotoIntervalResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type StartVideoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartVideoRequest) Reset() {
	*x = StartVideoRequest{}
	mi := &file_camera_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVideoRequest) ProtoMessage() {}

func (x *StartVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartVideoRequest.ProtoReflect.Descriptor instead.
func (*StartVideoRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{11}
}

func (x *StartVideoRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

type StartVideoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartVideoResponse) Reset() {
	*x = StartVideoResponse{}
	mi := &file_camera_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVideoResponse) ProtoMessage() {}

func (x *StartVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartVideoResponse.ProtoReflect.Descriptor instead.
func (*StartVideoResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{12}
}

func (x *StartVideoResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type StopVideoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopVideoRequest) Reset() {
	*x = StopVideoRequest{}
	mi := &file_camera_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopVideoRequest) ProtoMessage() {}

func (x *StopVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopVideoRequest.ProtoReflect.Descriptor instead.
func (*StopVideoRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{13}
}

func (x *StopVideoRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

type StopVideoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopVideoResponse) Reset() {
	*x = StopVideoResponse{}
	mi := &file_camera_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopVideoResponse) ProtoMessage() {}

func (x *StopVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopVideoResponse.ProtoReflect.Descriptor instead.
func (*StopVideoResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{14}
}

func (x *StopVideoResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type StartVideoStreamingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	StreamId      int32                  `protobuf:"varint,2,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`          // video stream id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartVideoStreamingRequest) Reset() {
	*x = StartVideoStreamingRequest{}
	mi := &file_camera_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartVideoStreamingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVideoStreamingRequest) ProtoMessage() {}

func (x *StartVideoStreamingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartVideoStreamingRequest.ProtoReflect.Descriptor instead.
func (*StartVideoStreamingRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{15}
}

func (x *StartVideoStreamingRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *StartVideoStreamingRequest) GetStreamId() int32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

type StartVideoStreamingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartVideoStreamingResponse) Reset() {
	*x = StartVideoStreamingResponse{}
	mi := &file_camera_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartVideoStreamingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVideoStreamingResponse) ProtoMessage() {}

func (x *StartVideoStreamingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartVideoStreamingResponse.ProtoReflect.Descriptor instead.
func (*StartVideoStreamingResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{16}
}

func (x *StartVideoStreamingResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type StopVideoStreamingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	StreamId      int32                  `protobuf:"varint,2,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`          // video stream id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopVideoStreamingRequest) Reset() {
	*x = StopVideoStreamingRequest{}
	mi := &file_camera_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopVideoStreamingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopVideoStreamingRequest) ProtoMessage() {}

func (x *StopVideoStreamingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopVideoStreamingRequest.ProtoReflect.Descriptor instead.
func (*StopVideoStreamingRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{17}
}

func (x *StopVideoStreamingRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *StopVideoStreamingRequest) GetStreamId() int32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

type StopVideoStreamingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopVideoStreamingResponse) Reset() {
	*x = StopVideoStreamingResponse{}
	mi := &file_camera_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopVideoStreamingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopVideoStreamingResponse) ProtoMessage() {}

func (x *StopVideoStreamingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopVideoStreamingResponse.ProtoReflect.Descriptor instead.
func (*StopVideoStreamingResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{18}
}

func (x *StopVideoStreamingResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type SetModeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	Mode          Mode                   `protobuf:"varint,2,opt,name=mode,proto3,enum=mavsdk.rpc.camera.Mode" json:"mode,omitempty"`      // Camera mode to set
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetModeRequest) Reset() {
	*x = SetModeRequest{}
	mi := &file_camera_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetModeRequest) ProtoMessage() {}

func (x *SetModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetModeRequest.ProtoReflect.Descriptor instead.
func (*SetModeRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{19}
}

func (x *SetModeRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *SetModeRequest) GetMode() Mode {
	if x != nil {
		return x.Mode
	}
	return Mode_MODE_UNKNOWN
}

type SetModeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetModeResponse) Reset() {
	*x = SetModeResponse{}
	mi := &file_camera_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetModeResponse) ProtoMessage() {}

func (x *SetModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetModeResponse.ProtoReflect.Descriptor instead.
func (*SetModeResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{20}
}

func (x *SetModeResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type ListPhotosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`                                    // Component ID
	PhotosRange   PhotosRange            `protobuf:"varint,2,opt,name=photos_range,json=photosRange,proto3,enum=mavsdk.rpc.camera.PhotosRange" json:"photos_range,omitempty"` // Which photos should be listed (all or since connection)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPhotosRequest) Reset() {
	*x = ListPhotosRequest{}
	mi := &file_camera_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPhotosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPhotosRequest) ProtoMessage() {}

func (x *ListPhotosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPhotosRequest.ProtoReflect.Descriptor instead.
func (*ListPhotosRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{21}
}

func (x *ListPhotosRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *ListPhotosRequest) GetPhotosRange() PhotosRange {
	if x != nil {
		return x.PhotosRange
	}
	return PhotosRange_PHOTOS_RANGE_ALL
}

type ListPhotosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	CaptureInfos  []*CaptureInfo         `protobuf:"bytes,2,rep,name=capture_infos,json=captureInfos,proto3" json:"capture_infos,omitempty"` // List of capture infos (representing the photos)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPhotosResponse) Reset() {
	*x = ListPhotosResponse{}
	mi := &file_camera_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPhotosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPhotosResponse) ProtoMessage() {}

func (x *ListPhotosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPhotosResponse.ProtoReflect.Descriptor instead.
func (*ListPhotosResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{22}
}

func (x *ListPhotosResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

func (x *ListPhotosResponse) GetCaptureInfos() []*CaptureInfo {
	if x != nil {
		return x.CaptureInfos
	}
	return nil
}

type SubscribeCameraListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeCameraListRequest) Reset() {
	*x = SubscribeCameraListRequest{}
	mi := &file_camera_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeCameraListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeCameraListRequest) ProtoMessage() {}

func (x *SubscribeCameraListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeCameraListRequest.ProtoReflect.Descriptor instead.
func (*SubscribeCameraListRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{23}
}

type CameraListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraList    *CameraList            `protobuf:"bytes,1,opt,name=camera_list,json=cameraList,proto3" json:"camera_list,omitempty"` // Camera list
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CameraListResponse) Reset() {
	*x = CameraListResponse{}
	mi := &file_camera_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CameraListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CameraListResponse) ProtoMessage() {}

func (x *CameraListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CameraListResponse.ProtoReflect.Descriptor instead.
func (*CameraListResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{24}
}

func (x *CameraListResponse) GetCameraList() *CameraList {
	if x != nil {
		return x.CameraList
	}
	return nil
}

// An update about the current mode
type ModeUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	Mode          Mode                   `protobuf:"varint,2,opt,name=mode,proto3,enum=mavsdk.rpc.camera.Mode" json:"mode,omitempty"`      // Camera mode
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModeUpdate) Reset() {
	*x = ModeUpdate{}
	mi := &file_camera_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModeUpdate) ProtoMessage() {}

func (x *ModeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModeUpdate.ProtoReflect.Descriptor instead.
func (*ModeUpdate) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{25}
}

func (x *ModeUpdate) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *ModeUpdate) GetMode() Mode {
	if x != nil {
		return x.Mode
	}
	return Mode_MODE_UNKNOWN
}

type SubscribeModeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeModeRequest) Reset() {
	*x = SubscribeModeRequest{}
	mi := &file_camera_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeModeRequest) ProtoMessage() {}

func (x *SubscribeModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeModeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeModeRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{26}
}

type ModeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Update        *ModeUpdate            `protobuf:"bytes,1,opt,name=update,proto3" json:"update,omitempty"` // Mode update for camera
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModeResponse) Reset() {
	*x = ModeResponse{}
	mi := &file_camera_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModeResponse) ProtoMessage() {}

func (x *ModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModeResponse.ProtoReflect.Descriptor instead.
func (*ModeResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{27}
}

func (x *ModeResponse) GetUpdate() *ModeUpdate {
	if x != nil {
		return x.Update
	}
	return nil
}

// An update about a video stream
type VideoStreamUpdate struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ComponentId     int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`              // Component ID
	VideoStreamInfo *VideoStreamInfo       `protobuf:"bytes,2,opt,name=video_stream_info,json=videoStreamInfo,proto3" json:"video_stream_info,omitempty"` // Video stream info
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *VideoStreamUpdate) Reset() {
	*x = VideoStreamUpdate{}
	mi := &file_camera_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoStreamUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoStreamUpdate) ProtoMessage() {}

func (x *VideoStreamUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoStreamUpdate.ProtoReflect.Descriptor instead.
func (*VideoStreamUpdate) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{28}
}

func (x *VideoStreamUpdate) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *VideoStreamUpdate) GetVideoStreamInfo() *VideoStreamInfo {
	if x != nil {
		return x.VideoStreamInfo
	}
	return nil
}

type SubscribeVideoStreamInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeVideoStreamInfoRequest) Reset() {
	*x = SubscribeVideoStreamInfoRequest{}
	mi := &file_camera_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeVideoStreamInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeVideoStreamInfoRequest) ProtoMessage() {}

func (x *SubscribeVideoStreamInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeVideoStreamInfoRequest.ProtoReflect.Descriptor instead.
func (*SubscribeVideoStreamInfoRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{29}
}

type VideoStreamInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Update        *VideoStreamUpdate     `protobuf:"bytes,1,opt,name=update,proto3" json:"update,omitempty"` // Video stream update for camera
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VideoStreamInfoResponse) Reset() {
	*x = VideoStreamInfoResponse{}
	mi := &file_camera_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoStreamInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoStreamInfoResponse) ProtoMessage() {}

func (x *VideoStreamInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoStreamInfoResponse.ProtoReflect.Descriptor instead.
func (*VideoStreamInfoResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{30}
}

func (x *VideoStreamInfoResponse) GetUpdate() *VideoStreamUpdate {
	if x != nil {
		return x.Update
	}
	return nil
}

type SubscribeCaptureInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeCaptureInfoRequest) Reset() {
	*x = SubscribeCaptureInfoRequest{}
	mi := &file_camera_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeCaptureInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeCaptureInfoRequest) ProtoMessage() {}

func (x *SubscribeCaptureInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeCaptureInfoRequest.ProtoReflect.Descriptor instead.
func (*SubscribeCaptureInfoRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{31}
}

type CaptureInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CaptureInfo   *CaptureInfo           `protobuf:"bytes,1,opt,name=capture_info,json=captureInfo,proto3" json:"capture_info,omitempty"` // Capture info
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CaptureInfoResponse) Reset() {
	*x = CaptureInfoResponse{}
	mi := &file_camera_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CaptureInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptureInfoResponse) ProtoMessage() {}

func (x *CaptureInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptureInfoResponse.ProtoReflect.Descriptor instead.
func (*CaptureInfoResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{32}
}

func (x *CaptureInfoResponse) GetCaptureInfo() *CaptureInfo {
	if x != nil {
		return x.CaptureInfo
	}
	return nil
}

// Information about the camera's storage status.
type Storage struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ComponentId         int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`                                                    // Component ID
	VideoOn             bool                   `protobuf:"varint,2,opt,name=video_on,json=videoOn,proto3" json:"video_on,omitempty"`                                                                // Whether video recording is currently in process
	PhotoIntervalOn     bool                   `protobuf:"varint,3,opt,name=photo_interval_on,json=photoIntervalOn,proto3" json:"photo_interval_on,omitempty"`                                      // Whether a photo interval is currently in process
	UsedStorageMib      float32                `protobuf:"fixed32,4,opt,name=used_storage_mib,json=usedStorageMib,proto3" json:"used_storage_mib,omitempty"`                                        // Used storage (in MiB)
	AvailableStorageMib float32                `protobuf:"fixed32,5,opt,name=available_storage_mib,json=availableStorageMib,proto3" json:"available_storage_mib,omitempty"`                         // Available storage (in MiB)
	TotalStorageMib     float32                `protobuf:"fixed32,6,opt,name=total_storage_mib,json=totalStorageMib,proto3" json:"total_storage_mib,omitempty"`                                     // Total storage (in MiB)
	RecordingTimeS      float32                `protobuf:"fixed32,7,opt,name=recording_time_s,json=recordingTimeS,proto3" json:"recording_time_s,omitempty"`                                        // Elapsed time since starting the video recording (in seconds)
	MediaFolderName     string                 `protobuf:"bytes,8,opt,name=media_folder_name,json=mediaFolderName,proto3" json:"media_folder_name,omitempty"`                                       // Current folder name where media are saved
	StorageStatus       Storage_StorageStatus  `protobuf:"varint,9,opt,name=storage_status,json=storageStatus,proto3,enum=mavsdk.rpc.camera.Storage_StorageStatus" json:"storage_status,omitempty"` // Storage status
	StorageId           uint32                 `protobuf:"varint,10,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`                                                         // Storage ID starting at 1
	StorageType         Storage_StorageType    `protobuf:"varint,11,opt,name=storage_type,json=storageType,proto3,enum=mavsdk.rpc.camera.Storage_StorageType" json:"storage_type,omitempty"`        // Storage type
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Storage) Reset() {
	*x = Storage{}
	mi := &file_camera_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Storage) ProtoMessage() {}

func (x *Storage) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Storage.ProtoReflect.Descriptor instead.
func (*Storage) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{33}
}

func (x *Storage) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *Storage) GetVideoOn() bool {
	if x != nil {
		return x.VideoOn
	}
	return false
}

func (x *Storage) GetPhotoIntervalOn() bool {
	if x != nil {
		return x.PhotoIntervalOn
	}
	return false
}

func (x *Storage) GetUsedStorageMib() float32 {
	if x != nil {
		return x.UsedStorageMib
	}
	return 0
}

func (x *Storage) GetAvailableStorageMib() float32 {
	if x != nil {
		return x.AvailableStorageMib
	}
	return 0
}

func (x *Storage) GetTotalStorageMib() float32 {
	if x != nil {
		return x.TotalStorageMib
	}
	return 0
}

func (x *Storage) GetRecordingTimeS() float32 {
	if x != nil {
		return x.RecordingTimeS
	}
	return 0
}

func (x *Storage) GetMediaFolderName() string {
	if x != nil {
		return x.MediaFolderName
	}
	return ""
}

func (x *Storage) GetStorageStatus() Storage_StorageStatus {
	if x != nil {
		return x.StorageStatus
	}
	return Storage_STORAGE_STATUS_NOT_AVAILABLE
}

func (x *Storage) GetStorageId() uint32 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

func (x *Storage) GetStorageType() Storage_StorageType {
	if x != nil {
		return x.StorageType
	}
	return Storage_STORAGE_TYPE_UNKNOWN
}

// An update about storage
type StorageUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	Storage       *Storage               `protobuf:"bytes,2,opt,name=storage,proto3" json:"storage,omitempty"`                             // Storage
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageUpdate) Reset() {
	*x = StorageUpdate{}
	mi := &file_camera_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageUpdate) ProtoMessage() {}

func (x *StorageUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageUpdate.ProtoReflect.Descriptor instead.
func (*StorageUpdate) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{34}
}

func (x *StorageUpdate) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *StorageUpdate) GetStorage() *Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

type SubscribeStorageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeStorageRequest) Reset() {
	*x = SubscribeStorageRequest{}
	mi := &file_camera_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeStorageRequest) ProtoMessage() {}

func (x *SubscribeStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeStorageRequest.ProtoReflect.Descriptor instead.
func (*SubscribeStorageRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{35}
}

type StorageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Update        *StorageUpdate         `protobuf:"bytes,1,opt,name=update,proto3" json:"update,omitempty"` // Camera's storage status
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageResponse) Reset() {
	*x = StorageResponse{}
	mi := &file_camera_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageResponse) ProtoMessage() {}

func (x *StorageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageResponse.ProtoReflect.Descriptor instead.
func (*StorageResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{36}
}

func (x *StorageResponse) GetUpdate() *StorageUpdate {
	if x != nil {
		return x.Update
	}
	return nil
}

// An update about a current setting
type CurrentSettingsUpdate struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ComponentId     int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`            // Component ID
	CurrentSettings []*Setting             `protobuf:"bytes,2,rep,name=current_settings,json=currentSettings,proto3" json:"current_settings,omitempty"` // List of current settings
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CurrentSettingsUpdate) Reset() {
	*x = CurrentSettingsUpdate{}
	mi := &file_camera_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentSettingsUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentSettingsUpdate) ProtoMessage() {}

func (x *CurrentSettingsUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentSettingsUpdate.ProtoReflect.Descriptor instead.
func (*CurrentSettingsUpdate) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{37}
}

func (x *CurrentSettingsUpdate) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *CurrentSettingsUpdate) GetCurrentSettings() []*Setting {
	if x != nil {
		return x.CurrentSettings
	}
	return nil
}

type SubscribeCurrentSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeCurrentSettingsRequest) Reset() {
	*x = SubscribeCurrentSettingsRequest{}
	mi := &file_camera_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeCurrentSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeCurrentSettingsRequest) ProtoMessage() {}

func (x *SubscribeCurrentSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeCurrentSettingsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeCurrentSettingsRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{38}
}

type CurrentSettingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Update        *CurrentSettingsUpdate `protobuf:"bytes,1,opt,name=update,proto3" json:"update,omitempty"` // Current setting update per camera
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CurrentSettingsResponse) Reset() {
	*x = CurrentSettingsResponse{}
	mi := &file_camera_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentSettingsResponse) ProtoMessage() {}

func (x *CurrentSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentSettingsResponse.ProtoReflect.Descriptor instead.
func (*CurrentSettingsResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{39}
}

func (x *CurrentSettingsResponse) GetUpdate() *CurrentSettingsUpdate {
	if x != nil {
		return x.Update
	}
	return nil
}

// An update about possible setting options
type PossibleSettingOptionsUpdate struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ComponentId    int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`         // Component ID
	SettingOptions []*SettingOptions      `protobuf:"bytes,2,rep,name=setting_options,json=settingOptions,proto3" json:"setting_options,omitempty"` // List of settings that can be changed
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PossibleSettingOptionsUpdate) Reset() {
	*x = PossibleSettingOptionsUpdate{}
	mi := &file_camera_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PossibleSettingOptionsUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PossibleSettingOptionsUpdate) ProtoMessage() {}

func (x *PossibleSettingOptionsUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PossibleSettingOptionsUpdate.ProtoReflect.Descriptor instead.
func (*PossibleSettingOptionsUpdate) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{40}
}

func (x *PossibleSettingOptionsUpdate) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *PossibleSettingOptionsUpdate) GetSettingOptions() []*SettingOptions {
	if x != nil {
		return x.SettingOptions
	}
	return nil
}

type SubscribePossibleSettingOptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribePossibleSettingOptionsRequest) Reset() {
	*x = SubscribePossibleSettingOptionsRequest{}
	mi := &file_camera_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribePossibleSettingOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribePossibleSettingOptionsRequest) ProtoMessage() {}

func (x *SubscribePossibleSettingOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribePossibleSettingOptionsRequest.ProtoReflect.Descriptor instead.
func (*SubscribePossibleSettingOptionsRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{41}
}

type PossibleSettingOptionsResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Update        *PossibleSettingOptionsUpdate `protobuf:"bytes,1,opt,name=update,proto3" json:"update,omitempty"` // Possible setting update per camera
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PossibleSettingOptionsResponse) Reset() {
	*x = PossibleSettingOptionsResponse{}
	mi := &file_camera_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PossibleSettingOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PossibleSettingOptionsResponse) ProtoMessage() {}

func (x *PossibleSettingOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PossibleSettingOptionsResponse.ProtoReflect.Descriptor instead.
func (*PossibleSettingOptionsResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{42}
}

func (x *PossibleSettingOptionsResponse) GetUpdate() *PossibleSettingOptionsUpdate {
	if x != nil {
		return x.Update
	}
	return nil
}

type SetSettingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	Setting       *Setting               `protobuf:"bytes,2,opt,name=setting,proto3" json:"setting,omitempty"`                             // Desired setting
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSettingRequest) Reset() {
	*x = SetSettingRequest{}
	mi := &file_camera_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSettingRequest) ProtoMessage() {}

func (x *SetSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSettingRequest.ProtoReflect.Descriptor instead.
func (*SetSettingRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{43}
}

func (x *SetSettingRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *SetSettingRequest) GetSetting() *Setting {
	if x != nil {
		return x.Setting
	}
	return nil
}

type SetSettingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSettingResponse) Reset() {
	*x = SetSettingResponse{}
	mi := &file_camera_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSettingResponse) ProtoMessage() {}

func (x *SetSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSettingResponse.ProtoReflect.Descriptor instead.
func (*SetSettingResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{44}
}

func (x *SetSettingResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type GetModeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetModeRequest) Reset() {
	*x = GetModeRequest{}
	mi := &file_camera_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModeRequest) ProtoMessage() {}

func (x *GetModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModeRequest.ProtoReflect.Descriptor instead.
func (*GetModeRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{45}
}

func (x *GetModeRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

type GetModeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	Mode          Mode                   `protobuf:"varint,2,opt,name=mode,proto3,enum=mavsdk.rpc.camera.Mode" json:"mode,omitempty"` // Mode
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetModeResponse) Reset() {
	*x = GetModeResponse{}
	mi := &file_camera_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModeResponse) ProtoMessage() {}

func (x *GetModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModeResponse.ProtoReflect.Descriptor instead.
func (*GetModeResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{46}
}

func (x *GetModeResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

func (x *GetModeResponse) GetMode() Mode {
	if x != nil {
		return x.Mode
	}
	return Mode_MODE_UNKNOWN
}

type GetVideoStreamInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideoStreamInfoRequest) Reset() {
	*x = GetVideoStreamInfoRequest{}
	mi := &file_camera_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideoStreamInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoStreamInfoRequest) ProtoMessage() {}

func (x *GetVideoStreamInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoStreamInfoRequest.ProtoReflect.Descriptor instead.
func (*GetVideoStreamInfoRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{47}
}

func (x *GetVideoStreamInfoRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

type GetVideoStreamInfoResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CameraResult    *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	VideoStreamInfo *VideoStreamInfo       `protobuf:"bytes,2,opt,name=video_stream_info,json=videoStreamInfo,proto3" json:"video_stream_info,omitempty"` // Video stream info
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetVideoStreamInfoResponse) Reset() {
	*x = GetVideoStreamInfoResponse{}
	mi := &file_camera_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideoStreamInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoStreamInfoResponse) ProtoMessage() {}

func (x *GetVideoStreamInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoStreamInfoResponse.ProtoReflect.Descriptor instead.
func (*GetVideoStreamInfoResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{48}
}

func (x *GetVideoStreamInfoResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

func (x *GetVideoStreamInfoResponse) GetVideoStreamInfo() *VideoStreamInfo {
	if x != nil {
		return x.VideoStreamInfo
	}
	return nil
}

type GetStorageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStorageRequest) Reset() {
	*x = GetStorageRequest{}
	mi := &file_camera_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageRequest) ProtoMessage() {}

func (x *GetStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageRequest.ProtoReflect.Descriptor instead.
func (*GetStorageRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{49}
}

func (x *GetStorageRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

type GetStorageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	Storage       *Storage               `protobuf:"bytes,2,opt,name=storage,proto3" json:"storage,omitempty"` // Camera's storage status
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStorageResponse) Reset() {
	*x = GetStorageResponse{}
	mi := &file_camera_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStorageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageResponse) ProtoMessage() {}

func (x *GetStorageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageResponse.ProtoReflect.Descriptor instead.
func (*GetStorageResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{50}
}

func (x *GetStorageResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

func (x *GetStorageResponse) GetStorage() *Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

type GetCurrentSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentSettingsRequest) Reset() {
	*x = GetCurrentSettingsRequest{}
	mi := &file_camera_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentSettingsRequest) ProtoMessage() {}

func (x *GetCurrentSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentSettingsRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{51}
}

func (x *GetCurrentSettingsRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

type GetCurrentSettingsResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CameraResult    *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	CurrentSettings []*Setting             `protobuf:"bytes,2,rep,name=current_settings,json=currentSettings,proto3" json:"current_settings,omitempty"` // List of current settings
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetCurrentSettingsResponse) Reset() {
	*x = GetCurrentSettingsResponse{}
	mi := &file_camera_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentSettingsResponse) ProtoMessage() {}

func (x *GetCurrentSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentSettingsResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{52}
}

func (x *GetCurrentSettingsResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

func (x *GetCurrentSettingsResponse) GetCurrentSettings() []*Setting {
	if x != nil {
		return x.CurrentSettings
	}
	return nil
}

type GetPossibleSettingOptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPossibleSettingOptionsRequest) Reset() {
	*x = GetPossibleSettingOptionsRequest{}
	mi := &file_camera_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPossibleSettingOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPossibleSettingOptionsRequest) ProtoMessage() {}

func (x *GetPossibleSettingOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPossibleSettingOptionsRequest.ProtoReflect.Descriptor instead.
func (*GetPossibleSettingOptionsRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{53}
}

func (x *GetPossibleSettingOptionsRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

type GetPossibleSettingOptionsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CameraResult   *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	SettingOptions []*SettingOptions      `protobuf:"bytes,2,rep,name=setting_options,json=settingOptions,proto3" json:"setting_options,omitempty"` // List of settings that can be changed
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetPossibleSettingOptionsResponse) Reset() {
	*x = GetPossibleSettingOptionsResponse{}
	mi := &file_camera_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPossibleSettingOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPossibleSettingOptionsResponse) ProtoMessage() {}

func (x *GetPossibleSettingOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPossibleSettingOptionsResponse.ProtoReflect.Descriptor instead.
func (*GetPossibleSettingOptionsResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{54}
}

func (x *GetPossibleSettingOptionsResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

func (x *GetPossibleSettingOptionsResponse) GetSettingOptions() []*SettingOptions {
	if x != nil {
		return x.SettingOptions
	}
	return nil
}

type GetSettingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID (0/all not available)
	Setting       *Setting               `protobuf:"bytes,2,opt,name=setting,proto3" json:"setting,omitempty"`                             // Requested setting
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSettingRequest) Reset() {
	*x = GetSettingRequest{}
	mi := &file_camera_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSettingRequest) ProtoMessage() {}

func (x *GetSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSettingRequest.ProtoReflect.Descriptor instead.
func (*GetSettingRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{55}
}

func (x *GetSettingRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *GetSettingRequest) GetSetting() *Setting {
	if x != nil {
		return x.Setting
	}
	return nil
}

type GetSettingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	Setting       *Setting               `protobuf:"bytes,2,opt,name=setting,proto3" json:"setting,omitempty"` // Setting
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSettingResponse) Reset() {
	*x = GetSettingResponse{}
	mi := &file_camera_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSettingResponse) ProtoMessage() {}

func (x *GetSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSettingResponse.ProtoReflect.Descriptor instead.
func (*GetSettingResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{56}
}

func (x *GetSettingResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

func (x *GetSettingResponse) GetSetting() *Setting {
	if x != nil {
		return x.Setting
	}
	return nil
}

type FormatStorageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	StorageId     int32                  `protobuf:"varint,2,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`       //Storage identify to be format
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FormatStorageRequest) Reset() {
	*x = FormatStorageRequest{}
	mi := &file_camera_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FormatStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatStorageRequest) ProtoMessage() {}

func (x *FormatStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatStorageRequest.ProtoReflect.Descriptor instead.
func (*FormatStorageRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{57}
}

func (x *FormatStorageRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *FormatStorageRequest) GetStorageId() int32 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

type FormatStorageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FormatStorageResponse) Reset() {
	*x = FormatStorageResponse{}
	mi := &file_camera_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FormatStorageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatStorageResponse) ProtoMessage() {}

func (x *FormatStorageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatStorageResponse.ProtoReflect.Descriptor instead.
func (*FormatStorageResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{58}
}

func (x *FormatStorageResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type ResetSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetSettingsRequest) Reset() {
	*x = ResetSettingsRequest{}
	mi := &file_camera_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetSettingsRequest) ProtoMessage() {}

func (x *ResetSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetSettingsRequest.ProtoReflect.Descriptor instead.
func (*ResetSettingsRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{59}
}

func (x *ResetSettingsRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

type ResetSettingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetSettingsResponse) Reset() {
	*x = ResetSettingsResponse{}
	mi := &file_camera_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetSettingsResponse) ProtoMessage() {}

func (x *ResetSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetSettingsResponse.ProtoReflect.Descriptor instead.
func (*ResetSettingsResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{60}
}

func (x *ResetSettingsResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type ZoomInStartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoomInStartRequest) Reset() {
	*x = ZoomInStartRequest{}
	mi := &file_camera_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoomInStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoomInStartRequest) ProtoMessage() {}

func (x *ZoomInStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoomInStartRequest.ProtoReflect.Descriptor instead.
func (*ZoomInStartRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{61}
}

func (x *ZoomInStartRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

type ZoomInStartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoomInStartResponse) Reset() {
	*x = ZoomInStartResponse{}
	mi := &file_camera_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoomInStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoomInStartResponse) ProtoMessage() {}

func (x *ZoomInStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoomInStartResponse.ProtoReflect.Descriptor instead.
func (*ZoomInStartResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{62}
}

func (x *ZoomInStartResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type ZoomOutStartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoomOutStartRequest) Reset() {
	*x = ZoomOutStartRequest{}
	mi := &file_camera_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoomOutStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoomOutStartRequest) ProtoMessage() {}

func (x *ZoomOutStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoomOutStartRequest.ProtoReflect.Descriptor instead.
func (*ZoomOutStartRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{63}
}

func (x *ZoomOutStartRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

type ZoomOutStartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoomOutStartResponse) Reset() {
	*x = ZoomOutStartResponse{}
	mi := &file_camera_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoomOutStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoomOutStartResponse) ProtoMessage() {}

func (x *ZoomOutStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoomOutStartResponse.ProtoReflect.Descriptor instead.
func (*ZoomOutStartResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{64}
}

func (x *ZoomOutStartResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type ZoomStopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoomStopRequest) Reset() {
	*x = ZoomStopRequest{}
	mi := &file_camera_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoomStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoomStopRequest) ProtoMessage() {}

func (x *ZoomStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoomStopRequest.ProtoReflect.Descriptor instead.
func (*ZoomStopRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{65}
}

func (x *ZoomStopRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

type ZoomStopResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoomStopResponse) Reset() {
	*x = ZoomStopResponse{}
	mi := &file_camera_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoomStopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoomStopResponse) ProtoMessage() {}

func (x *ZoomStopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoomStopResponse.ProtoReflect.Descriptor instead.
func (*ZoomStopResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{66}
}

func (x *ZoomStopResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type ZoomRangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	Range         float32                `protobuf:"fixed32,2,opt,name=range,proto3" json:"range,omitempty"`                               // Range must be between 0.0 and 100.0
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoomRangeRequest) Reset() {
	*x = ZoomRangeRequest{}
	mi := &file_camera_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoomRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoomRangeRequest) ProtoMessage() {}

func (x *ZoomRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoomRangeRequest.ProtoReflect.Descriptor instead.
func (*ZoomRangeRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{67}
}

func (x *ZoomRangeRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *ZoomRangeRequest) GetRange() float32 {
	if x != nil {
		return x.Range
	}
	return 0
}

type ZoomRangeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoomRangeResponse) Reset() {
	*x = ZoomRangeResponse{}
	mi := &file_camera_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoomRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoomRangeResponse) ProtoMessage() {}

func (x *ZoomRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoomRangeResponse.ProtoReflect.Descriptor instead.
func (*ZoomRangeResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{68}
}

func (x *ZoomRangeResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type TrackPointRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	PointX        float32                `protobuf:"fixed32,2,opt,name=point_x,json=pointX,proto3" json:"point_x,omitempty"`               // Point in X axis (0..1, 0 is left, 1 is right)
	PointY        float32                `protobuf:"fixed32,3,opt,name=point_y,json=pointY,proto3" json:"point_y,omitempty"`               // Point in Y axis (0..1, 0 is top, 1 is bottom)
	Radius        float32                `protobuf:"fixed32,4,opt,name=radius,proto3" json:"radius,omitempty"`                             // Radius (0 is one pixel, 1 is full image width)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackPointRequest) Reset() {
	*x = TrackPointRequest{}
	mi := &file_camera_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackPointRequest) ProtoMessage() {}

func (x *TrackPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackPointRequest.ProtoReflect.Descriptor instead.
func (*TrackPointRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{69}
}

func (x *TrackPointRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *TrackPointRequest) GetPointX() float32 {
	if x != nil {
		return x.PointX
	}
	return 0
}

func (x *TrackPointRequest) GetPointY() float32 {
	if x != nil {
		return x.PointY
	}
	return 0
}

func (x *TrackPointRequest) GetRadius() float32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

type TrackPointResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackPointResponse) Reset() {
	*x = TrackPointResponse{}
	mi := &file_camera_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackPointResponse) ProtoMessage() {}

func (x *TrackPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackPointResponse.ProtoReflect.Descriptor instead.
func (*TrackPointResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{70}
}

func (x *TrackPointResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type TrackRectangleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`       // Component ID
	TopLeftX      float32                `protobuf:"fixed32,2,opt,name=top_left_x,json=topLeftX,proto3" json:"top_left_x,omitempty"`             // Top left corner of rectangle x value (normalized 0..1, 0 is left, 1 is right)
	TopLeftY      float32                `protobuf:"fixed32,3,opt,name=top_left_y,json=topLeftY,proto3" json:"top_left_y,omitempty"`             // Top left corner of rectangle y value (normalized 0..1, 0 is top, 1 is bottom)
	BottomRightX  float32                `protobuf:"fixed32,4,opt,name=bottom_right_x,json=bottomRightX,proto3" json:"bottom_right_x,omitempty"` // Bottom right corner of rectangle x value (normalized 0..1, 0 is left, 1 is right)
	BottomRightY  float32                `protobuf:"fixed32,5,opt,name=bottom_right_y,json=bottomRightY,proto3" json:"bottom_right_y,omitempty"` // Bottom right corner of rectangle y value (normalized 0..1, 0 is top, 1 is bottom)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackRectangleRequest) Reset() {
	*x = TrackRectangleRequest{}
	mi := &file_camera_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackRectangleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackRectangleRequest) ProtoMessage() {}

func (x *TrackRectangleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackRectangleRequest.ProtoReflect.Descriptor instead.
func (*TrackRectangleRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{71}
}

func (x *TrackRectangleRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *TrackRectangleRequest) GetTopLeftX() float32 {
	if x != nil {
		return x.TopLeftX
	}
	return 0
}

func (x *TrackRectangleRequest) GetTopLeftY() float32 {
	if x != nil {
		return x.TopLeftY
	}
	return 0
}

func (x *TrackRectangleRequest) GetBottomRightX() float32 {
	if x != nil {
		return x.BottomRightX
	}
	return 0
}

func (x *TrackRectangleRequest) GetBottomRightY() float32 {
	if x != nil {
		return x.BottomRightY
	}
	return 0
}

type TrackRectangleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackRectangleResponse) Reset() {
	*x = TrackRectangleResponse{}
	mi := &file_camera_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackRectangleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackRectangleResponse) ProtoMessage() {}

func (x *TrackRectangleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackRectangleResponse.ProtoReflect.Descriptor instead.
func (*TrackRectangleResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{72}
}

func (x *TrackRectangleResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type TrackStopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackStopRequest) Reset() {
	*x = TrackStopRequest{}
	mi := &file_camera_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackStopRequest) ProtoMessage() {}

func (x *TrackStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackStopRequest.ProtoReflect.Descriptor instead.
func (*TrackStopRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{73}
}

func (x *TrackStopRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

type TrackStopResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackStopResponse) Reset() {
	*x = TrackStopResponse{}
	mi := &file_camera_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackStopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackStopResponse) ProtoMessage() {}

func (x *TrackStopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackStopResponse.ProtoReflect.Descriptor instead.
func (*TrackStopResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{74}
}

func (x *TrackStopResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type FocusInStartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FocusInStartRequest) Reset() {
	*x = FocusInStartRequest{}
	mi := &file_camera_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FocusInStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusInStartRequest) ProtoMessage() {}

func (x *FocusInStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusInStartRequest.ProtoReflect.Descriptor instead.
func (*FocusInStartRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{75}
}

func (x *FocusInStartRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

type FocusInStartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FocusInStartResponse) Reset() {
	*x = FocusInStartResponse{}
	mi := &file_camera_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FocusInStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusInStartResponse) ProtoMessage() {}

func (x *FocusInStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusInStartResponse.ProtoReflect.Descriptor instead.
func (*FocusInStartResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{76}
}

func (x *FocusInStartResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type FocusOutStartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FocusOutStartRequest) Reset() {
	*x = FocusOutStartRequest{}
	mi := &file_camera_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FocusOutStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusOutStartRequest) ProtoMessage() {}

func (x *FocusOutStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusOutStartRequest.ProtoReflect.Descriptor instead.
func (*FocusOutStartRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{77}
}

func (x *FocusOutStartRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

type FocusOutStartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FocusOutStartResponse) Reset() {
	*x = FocusOutStartResponse{}
	mi := &file_camera_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FocusOutStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusOutStartResponse) ProtoMessage() {}

func (x *FocusOutStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusOutStartResponse.ProtoReflect.Descriptor instead.
func (*FocusOutStartResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{78}
}

func (x *FocusOutStartResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type FocusStopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FocusStopRequest) Reset() {
	*x = FocusStopRequest{}
	mi := &file_camera_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FocusStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusStopRequest) ProtoMessage() {}

func (x *FocusStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusStopRequest.ProtoReflect.Descriptor instead.
func (*FocusStopRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{79}
}

func (x *FocusStopRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

type FocusStopResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FocusStopResponse) Reset() {
	*x = FocusStopResponse{}
	mi := &file_camera_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FocusStopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusStopResponse) ProtoMessage() {}

func (x *FocusStopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusStopResponse.ProtoReflect.Descriptor instead.
func (*FocusStopResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{80}
}

func (x *FocusStopResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

type FocusRangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentId   int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Component ID
	Range         float32                `protobuf:"fixed32,2,opt,name=range,proto3" json:"range,omitempty"`                               // Range must be between 0.0 - 100.0
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FocusRangeRequest) Reset() {
	*x = FocusRangeRequest{}
	mi := &file_camera_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FocusRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusRangeRequest) ProtoMessage() {}

func (x *FocusRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusRangeRequest.ProtoReflect.Descriptor instead.
func (*FocusRangeRequest) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{81}
}

func (x *FocusRangeRequest) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *FocusRangeRequest) GetRange() float32 {
	if x != nil {
		return x.Range
	}
	return 0
}

type FocusRangeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraResult  *CameraResult          `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FocusRangeResponse) Reset() {
	*x = FocusRangeResponse{}
	mi := &file_camera_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FocusRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusRangeResponse) ProtoMessage() {}

func (x *FocusRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusRangeResponse.ProtoReflect.Descriptor instead.
func (*FocusRangeResponse) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{82}
}

func (x *FocusRangeResponse) GetCameraResult() *CameraResult {
	if x != nil {
		return x.CameraResult
	}
	return nil
}

// Result type.
type CameraResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        CameraResult_Result    `protobuf:"varint,1,opt,name=result,proto3,enum=mavsdk.rpc.camera.CameraResult_Result" json:"result,omitempty"` // Result enum value
	ResultStr     string                 `protobuf:"bytes,2,opt,name=result_str,json=resultStr,proto3" json:"result_str,omitempty"`                      // Human-readable English string describing the result
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CameraResult) Reset() {
	*x = CameraResult{}
	mi := &file_camera_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CameraResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CameraResult) ProtoMessage() {}

func (x *CameraResult) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CameraResult.ProtoReflect.Descriptor instead.
func (*CameraResult) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{83}
}

func (x *CameraResult) GetResult() CameraResult_Result {
	if x != nil {
		return x.Result
	}
	return CameraResult_RESULT_UNKNOWN
}

func (x *CameraResult) GetResultStr() string {
	if x != nil {
		return x.ResultStr
	}
	return ""
}

// Position type in global coordinates.
type Position struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	LatitudeDeg       float64                `protobuf:"fixed64,1,opt,name=latitude_deg,json=latitudeDeg,proto3" json:"latitude_deg,omitempty"`                     // Latitude in degrees (range: -90 to +90)
	LongitudeDeg      float64                `protobuf:"fixed64,2,opt,name=longitude_deg,json=longitudeDeg,proto3" json:"longitude_deg,omitempty"`                  // Longitude in degrees (range: -180 to +180)
	AbsoluteAltitudeM float32                `protobuf:"fixed32,3,opt,name=absolute_altitude_m,json=absoluteAltitudeM,proto3" json:"absolute_altitude_m,omitempty"` // Altitude AMSL (above mean sea level) in metres
	RelativeAltitudeM float32                `protobuf:"fixed32,4,opt,name=relative_altitude_m,json=relativeAltitudeM,proto3" json:"relative_altitude_m,omitempty"` // Altitude relative to takeoff altitude in metres
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Position) Reset() {
	*x = Position{}
	mi := &file_camera_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{84}
}

func (x *Position) GetLatitudeDeg() float64 {
	if x != nil {
		return x.LatitudeDeg
	}
	return 0
}

func (x *Position) GetLongitudeDeg() float64 {
	if x != nil {
		return x.LongitudeDeg
	}
	return 0
}

func (x *Position) GetAbsoluteAltitudeM() float32 {
	if x != nil {
		return x.AbsoluteAltitudeM
	}
	return 0
}

func (x *Position) GetRelativeAltitudeM() float32 {
	if x != nil {
		return x.RelativeAltitudeM
	}
	return 0
}

// Quaternion type.
//
// All rotations and axis systems follow the right-hand rule.
// The Hamilton quaternion product definition is used.
// A zero-rotation quaternion is represented by (1,0,0,0).
// The quaternion could also be written as w + xi + yj + zk.
//
// For more info see: https://en.wikipedia.org/wiki/Quaternion
type Quaternion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	W             float32                `protobuf:"fixed32,1,opt,name=w,proto3" json:"w,omitempty"` // Quaternion entry 0, also denoted as a
	X             float32                `protobuf:"fixed32,2,opt,name=x,proto3" json:"x,omitempty"` // Quaternion entry 1, also denoted as b
	Y             float32                `protobuf:"fixed32,3,opt,name=y,proto3" json:"y,omitempty"` // Quaternion entry 2, also denoted as c
	Z             float32                `protobuf:"fixed32,4,opt,name=z,proto3" json:"z,omitempty"` // Quaternion entry 3, also denoted as d
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Quaternion) Reset() {
	*x = Quaternion{}
	mi := &file_camera_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Quaternion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quaternion) ProtoMessage() {}

func (x *Quaternion) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quaternion.ProtoReflect.Descriptor instead.
func (*Quaternion) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{85}
}

func (x *Quaternion) GetW() float32 {
	if x != nil {
		return x.W
	}
	return 0
}

func (x *Quaternion) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Quaternion) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Quaternion) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

// Euler angle type.
//
// All rotations and axis systems follow the right-hand rule.
// The Euler angles follow the convention of a 3-2-1 intrinsic Tait-Bryan rotation sequence.
//
// For more info see https://en.wikipedia.org/wiki/Euler_angles
type EulerAngle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RollDeg       float32                `protobuf:"fixed32,1,opt,name=roll_deg,json=rollDeg,proto3" json:"roll_deg,omitempty"`    // Roll angle in degrees, positive is banking to the right
	PitchDeg      float32                `protobuf:"fixed32,2,opt,name=pitch_deg,json=pitchDeg,proto3" json:"pitch_deg,omitempty"` // Pitch angle in degrees, positive is pitching nose up
	YawDeg        float32                `protobuf:"fixed32,3,opt,name=yaw_deg,json=yawDeg,proto3" json:"yaw_deg,omitempty"`       // Yaw angle in degrees, positive is clock-wise seen from above
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EulerAngle) Reset() {
	*x = EulerAngle{}
	mi := &file_camera_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EulerAngle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EulerAngle) ProtoMessage() {}

func (x *EulerAngle) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EulerAngle.ProtoReflect.Descriptor instead.
func (*EulerAngle) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{86}
}

func (x *EulerAngle) GetRollDeg() float32 {
	if x != nil {
		return x.RollDeg
	}
	return 0
}

func (x *EulerAngle) GetPitchDeg() float32 {
	if x != nil {
		return x.PitchDeg
	}
	return 0
}

func (x *EulerAngle) GetYawDeg() float32 {
	if x != nil {
		return x.YawDeg
	}
	return 0
}

// Information about a picture just captured.
type CaptureInfo struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ComponentId        int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`                       // Component ID
	Position           *Position              `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`                                                 // Location where the picture was taken
	AttitudeQuaternion *Quaternion            `protobuf:"bytes,3,opt,name=attitude_quaternion,json=attitudeQuaternion,proto3" json:"attitude_quaternion,omitempty"`   // Attitude of the camera when the picture was taken (quaternion)
	AttitudeEulerAngle *EulerAngle            `protobuf:"bytes,4,opt,name=attitude_euler_angle,json=attitudeEulerAngle,proto3" json:"attitude_euler_angle,omitempty"` // Attitude of the camera when the picture was taken (euler angle)
	TimeUtcUs          uint64                 `protobuf:"varint,5,opt,name=time_utc_us,json=timeUtcUs,proto3" json:"time_utc_us,omitempty"`                           // Timestamp in UTC (since UNIX epoch) in microseconds
	IsSuccess          bool                   `protobuf:"varint,6,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`                             // True if the capture was successful
	Index              int32                  `protobuf:"varint,7,opt,name=index,proto3" json:"index,omitempty"`                                                      // Zero-based index of this image since vehicle was armed
	FileUrl            string                 `protobuf:"bytes,8,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`                                    // Download URL of this image
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CaptureInfo) Reset() {
	*x = CaptureInfo{}
	mi := &file_camera_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CaptureInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptureInfo) ProtoMessage() {}

func (x *CaptureInfo) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptureInfo.ProtoReflect.Descriptor instead.
func (*CaptureInfo) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{87}
}

func (x *CaptureInfo) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *CaptureInfo) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *CaptureInfo) GetAttitudeQuaternion() *Quaternion {
	if x != nil {
		return x.AttitudeQuaternion
	}
	return nil
}

func (x *CaptureInfo) GetAttitudeEulerAngle() *EulerAngle {
	if x != nil {
		return x.AttitudeEulerAngle
	}
	return nil
}

func (x *CaptureInfo) GetTimeUtcUs() uint64 {
	if x != nil {
		return x.TimeUtcUs
	}
	return 0
}

func (x *CaptureInfo) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *CaptureInfo) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CaptureInfo) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

// Type to represent a camera information.
type Information struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	ComponentId            int32                  `protobuf:"varint,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`                                       // Component ID
	VendorName             string                 `protobuf:"bytes,2,opt,name=vendor_name,json=vendorName,proto3" json:"vendor_name,omitempty"`                                           // Name of the camera vendor
	ModelName              string                 `protobuf:"bytes,3,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`                                              // Name of the camera model
	FocalLengthMm          float32                `protobuf:"fixed32,4,opt,name=focal_length_mm,json=focalLengthMm,proto3" json:"focal_length_mm,omitempty"`                              // Focal length
	HorizontalSensorSizeMm float32                `protobuf:"fixed32,5,opt,name=horizontal_sensor_size_mm,json=horizontalSensorSizeMm,proto3" json:"horizontal_sensor_size_mm,omitempty"` // Horizontal sensor size
	VerticalSensorSizeMm   float32                `protobuf:"fixed32,6,opt,name=vertical_sensor_size_mm,json=verticalSensorSizeMm,proto3" json:"vertical_sensor_size_mm,omitempty"`       // Vertical sensor size
	HorizontalResolutionPx uint32                 `protobuf:"varint,7,opt,name=horizontal_resolution_px,json=horizontalResolutionPx,proto3" json:"horizontal_resolution_px,omitempty"`    // Horizontal image resolution in pixels
	VerticalResolutionPx   uint32                 `protobuf:"varint,8,opt,name=vertical_resolution_px,json=verticalResolutionPx,proto3" json:"vertical_resolution_px,omitempty"`          // Vertical image resolution in pixels
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Information) Reset() {
	*x = Information{}
	mi := &file_camera_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Information) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Information) ProtoMessage() {}

func (x *Information) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Information.ProtoReflect.Descriptor instead.
func (*Information) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{88}
}

func (x *Information) GetComponentId() int32 {
	if x != nil {
		return x.ComponentId
	}
	return 0
}

func (x *Information) GetVendorName() string {
	if x != nil {
		return x.VendorName
	}
	return ""
}

func (x *Information) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *Information) GetFocalLengthMm() float32 {
	if x != nil {
		return x.FocalLengthMm
	}
	return 0
}

func (x *Information) GetHorizontalSensorSizeMm() float32 {
	if x != nil {
		return x.HorizontalSensorSizeMm
	}
	return 0
}

func (x *Information) GetVerticalSensorSizeMm() float32 {
	if x != nil {
		return x.VerticalSensorSizeMm
	}
	return 0
}

func (x *Information) GetHorizontalResolutionPx() uint32 {
	if x != nil {
		return x.HorizontalResolutionPx
	}
	return 0
}

func (x *Information) GetVerticalResolutionPx() uint32 {
	if x != nil {
		return x.VerticalResolutionPx
	}
	return 0
}

// Camera list
type CameraList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cameras       []*Information         `protobuf:"bytes,1,rep,name=cameras,proto3" json:"cameras,omitempty"` // Camera items.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CameraList) Reset() {
	*x = CameraList{}
	mi := &file_camera_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CameraList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CameraList) ProtoMessage() {}

func (x *CameraList) ProtoReflect() protoreflect.Message {
	mi := &file_camera_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CameraList.ProtoReflect.Descriptor instead.
func (*CameraList) Descriptor() ([]byte, []int) {
	return file_camera_proto_rawDescGZIP(), []int{89}
}

func (x *CameraList) GetCameras() []*Information {
	if x != nil {
		return x.Cameras
	}
	return nil
}

var File_camera_proto protoreflect.FileDescriptor

const file_camera_proto_rawDesc = "" +
	"\n" +
	"\fcamera.proto\x12\x11mavsdk.rpc.camera\x1a\x14mavsdk_options.proto\"T\n" +
	"\x06Option\x12\x1b\n" +
	"\toption_id\x18\x01 \x01(\tR\boptionId\x12-\n" +
	"\x12option_description\x18\x02 \x01(\tR\x11optionDescription\"\xa7\x01\n" +
	"\aSetting\x12\x1d\n" +
	"\n" +
	"setting_id\x18\x01 \x01(\tR\tsettingId\x12/\n" +
	"\x13setting_description\x18\x02 \x01(\tR\x12settingDescription\x121\n" +
	"\x06option\x18\x03 \x01(\v2\x19.mavsdk.rpc.camera.OptionR\x06option\x12\x19\n" +
	"\bis_range\x18\x04 \x01(\bR\aisRange\"\xd3\x01\n" +
	"\x0eSettingOptions\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x12\x1d\n" +
	"\n" +
	"setting_id\x18\x02 \x01(\tR\tsettingId\x12/\n" +
	"\x13setting_description\x18\x03 \x01(\tR\x12settingDescription\x123\n" +
	"\aoptions\x18\x04 \x03(\v2\x19.mavsdk.rpc.camera.OptionR\aoptions\x12\x19\n" +
	"\bis_range\x18\x05 \x01(\bR\aisRange\"\xb1\x02\n" +
	"\x13VideoStreamSettings\x12\"\n" +
	"\rframe_rate_hz\x18\x01 \x01(\x02R\vframeRateHz\x12:\n" +
	"\x19horizontal_resolution_pix\x18\x02 \x01(\rR\x17horizontalResolutionPix\x126\n" +
	"\x17vertical_resolution_pix\x18\x03 \x01(\rR\x15verticalResolutionPix\x12\x1f\n" +
	"\fbit_rate_b_s\x18\x04 \x01(\rR\tbitRateBS\x12!\n" +
	"\frotation_deg\x18\x05 \x01(\rR\vrotationDeg\x12\x10\n" +
	"\x03uri\x18\x06 \x01(\tR\x03uri\x12,\n" +
	"\x12horizontal_fov_deg\x18\a \x01(\x02R\x10horizontalFovDeg\"\xfb\x03\n" +
	"\x0fVideoStreamInfo\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\x05R\bstreamId\x12B\n" +
	"\bsettings\x18\x02 \x01(\v2&.mavsdk.rpc.camera.VideoStreamSettingsR\bsettings\x12L\n" +
	"\x06status\x18\x03 \x01(\x0e24.mavsdk.rpc.camera.VideoStreamInfo.VideoStreamStatusR\x06status\x12R\n" +
	"\bspectrum\x18\x04 \x01(\x0e26.mavsdk.rpc.camera.VideoStreamInfo.VideoStreamSpectrumR\bspectrum\"]\n" +
	"\x11VideoStreamStatus\x12#\n" +
	"\x1fVIDEO_STREAM_STATUS_NOT_RUNNING\x10\x00\x12#\n" +
	"\x1fVIDEO_STREAM_STATUS_IN_PROGRESS\x10\x01\"\x85\x01\n" +
	"\x13VideoStreamSpectrum\x12!\n" +
	"\x1dVIDEO_STREAM_SPECTRUM_UNKNOWN\x10\x00\x12'\n" +
	"#VIDEO_STREAM_SPECTRUM_VISIBLE_LIGHT\x10\x01\x12\"\n" +
	"\x1eVIDEO_STREAM_SPECTRUM_INFRARED\x10\x02\"5\n" +
	"\x10TakePhotoRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\"Y\n" +
	"\x11TakePhotoResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"]\n" +
	"\x19StartPhotoIntervalRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x12\x1d\n" +
	"\n" +
	"interval_s\x18\x02 \x01(\x02R\tintervalS\"b\n" +
	"\x1aStartPhotoIntervalResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"=\n" +
	"\x18StopPhotoIntervalRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\"a\n" +
	"\x19StopPhotoIntervalResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"6\n" +
	"\x11StartVideoRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\"Z\n" +
	"\x12StartVideoResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"5\n" +
	"\x10StopVideoRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\"Y\n" +
	"\x11StopVideoResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"\\\n" +
	"\x1aStartVideoStreamingRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x12\x1b\n" +
	"\tstream_id\x18\x02 \x01(\x05R\bstreamId\"c\n" +
	"\x1bStartVideoStreamingResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"[\n" +
	"\x19StopVideoStreamingRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x12\x1b\n" +
	"\tstream_id\x18\x02 \x01(\x05R\bstreamId\"b\n" +
	"\x1aStopVideoStreamingResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"`\n" +
	"\x0eSetModeRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x12+\n" +
	"\x04mode\x18\x02 \x01(\x0e2\x17.mavsdk.rpc.camera.ModeR\x04mode\"W\n" +
	"\x0fSetModeResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"y\n" +
	"\x11ListPhotosRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x12A\n" +
	"\fphotos_range\x18\x02 \x01(\x0e2\x1e.mavsdk.rpc.camera.PhotosRangeR\vphotosRange\"\x9f\x01\n" +
	"\x12ListPhotosResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\x12C\n" +
	"\rcapture_infos\x18\x02 \x03(\v2\x1e.mavsdk.rpc.camera.CaptureInfoR\fcaptureInfos\"\x1c\n" +
	"\x1aSubscribeCameraListRequest\"T\n" +
	"\x12CameraListResponse\x12>\n" +
	"\vcamera_list\x18\x01 \x01(\v2\x1d.mavsdk.rpc.camera.CameraListR\n" +
	"cameraList\"\\\n" +
	"\n" +
	"ModeUpdate\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x12+\n" +
	"\x04mode\x18\x02 \x01(\x0e2\x17.mavsdk.rpc.camera.ModeR\x04mode\"\x16\n" +
	"\x14SubscribeModeRequest\"E\n" +
	"\fModeResponse\x125\n" +
	"\x06update\x18\x01 \x01(\v2\x1d.mavsdk.rpc.camera.ModeUpdateR\x06update\"\x86\x01\n" +
	"\x11VideoStreamUpdate\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x12N\n" +
	"\x11video_stream_info\x18\x02 \x01(\v2\".mavsdk.rpc.camera.VideoStreamInfoR\x0fvideoStreamInfo\"!\n" +
	"\x1fSubscribeVideoStreamInfoRequest\"W\n" +
	"\x17VideoStreamInfoResponse\x12<\n" +
	"\x06update\x18\x01 \x01(\v2$.mavsdk.rpc.camera.VideoStreamUpdateR\x06update\"\x1d\n" +
	"\x1bSubscribeCaptureInfoRequest\"X\n" +
	"\x13CaptureInfoResponse\x12A\n" +
	"\fcapture_info\x18\x01 \x01(\v2\x1e.mavsdk.rpc.camera.CaptureInfoR\vcaptureInfo\"\xc5\x06\n" +
	"\aStorage\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x12\x19\n" +
	"\bvideo_on\x18\x02 \x01(\bR\avideoOn\x12*\n" +
	"\x11photo_interval_on\x18\x03 \x01(\bR\x0fphotoIntervalOn\x12(\n" +
	"\x10used_storage_mib\x18\x04 \x01(\x02R\x0eusedStorageMib\x122\n" +
	"\x15available_storage_mib\x18\x05 \x01(\x02R\x13availableStorageMib\x12*\n" +
	"\x11total_storage_mib\x18\x06 \x01(\x02R\x0ftotalStorageMib\x12(\n" +
	"\x10recording_time_s\x18\a \x01(\x02R\x0erecordingTimeS\x12*\n" +
	"\x11media_folder_name\x18\b \x01(\tR\x0fmediaFolderName\x12O\n" +
	"\x0estorage_status\x18\t \x01(\x0e2(.mavsdk.rpc.camera.Storage.StorageStatusR\rstorageStatus\x12\x1d\n" +
	"\n" +
	"storage_id\x18\n" +
	" \x01(\rR\tstorageId\x12I\n" +
	"\fstorage_type\x18\v \x01(\x0e2&.mavsdk.rpc.camera.Storage.StorageTypeR\vstorageType\"\x91\x01\n" +
	"\rStorageStatus\x12 \n" +
	"\x1cSTORAGE_STATUS_NOT_AVAILABLE\x10\x00\x12\x1e\n" +
	"\x1aSTORAGE_STATUS_UNFORMATTED\x10\x01\x12\x1c\n" +
	"\x18STORAGE_STATUS_FORMATTED\x10\x02\x12 \n" +
	"\x1cSTORAGE_STATUS_NOT_SUPPORTED\x10\x03\"\xa0\x01\n" +
	"\vStorageType\x12\x18\n" +
	"\x14STORAGE_TYPE_UNKNOWN\x10\x00\x12\x1a\n" +
	"\x16STORAGE_TYPE_USB_STICK\x10\x01\x12\x13\n" +
	"\x0fSTORAGE_TYPE_SD\x10\x02\x12\x18\n" +
	"\x14STORAGE_TYPE_MICROSD\x10\x03\x12\x13\n" +
	"\x0fSTORAGE_TYPE_HD\x10\a\x12\x17\n" +
	"\x12STORAGE_TYPE_OTHER\x10\xfe\x01\"h\n" +
	"\rStorageUpdate\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x124\n" +
	"\astorage\x18\x02 \x01(\v2\x1a.mavsdk.rpc.camera.StorageR\astorage\"\x19\n" +
	"\x17SubscribeStorageRequest\"K\n" +
	"\x0fStorageResponse\x128\n" +
	"\x06update\x18\x01 \x01(\v2 .mavsdk.rpc.camera.StorageUpdateR\x06update\"\x81\x01\n" +
	"\x15CurrentSettingsUpdate\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x12E\n" +
	"\x10current_settings\x18\x02 \x03(\v2\x1a.mavsdk.rpc.camera.SettingR\x0fcurrentSettings\"!\n" +
	"\x1fSubscribeCurrentSettingsRequest\"[\n" +
	"\x17CurrentSettingsResponse\x12@\n" +
	"\x06update\x18\x01 \x01(\v2(.mavsdk.rpc.camera.CurrentSettingsUpdateR\x06update\"\x8d\x01\n" +
	"\x1cPossibleSettingOptionsUpdate\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x12J\n" +
	"\x0fsetting_options\x18\x02 \x03(\v2!.mavsdk.rpc.camera.SettingOptionsR\x0esettingOptions\"(\n" +
	"&SubscribePossibleSettingOptionsRequest\"i\n" +
	"\x1ePossibleSettingOptionsResponse\x12G\n" +
	"\x06update\x18\x01 \x01(\v2/.mavsdk.rpc.camera.PossibleSettingOptionsUpdateR\x06update\"l\n" +
	"\x11SetSettingRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x124\n" +
	"\asetting\x18\x02 \x01(\v2\x1a.mavsdk.rpc.camera.SettingR\asetting\"Z\n" +
	"\x12SetSettingResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"3\n" +
	"\x0eGetModeRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\"\x84\x01\n" +
	"\x0fGetModeResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\x12+\n" +
	"\x04mode\x18\x02 \x01(\x0e2\x17.mavsdk.rpc.camera.ModeR\x04mode\">\n" +
	"\x19GetVideoStreamInfoRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\"\xb2\x01\n" +
	"\x1aGetVideoStreamInfoResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\x12N\n" +
	"\x11video_stream_info\x18\x02 \x01(\v2\".mavsdk.rpc.camera.VideoStreamInfoR\x0fvideoStreamInfo\"6\n" +
	"\x11GetStorageRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\"\x90\x01\n" +
	"\x12GetStorageResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\x124\n" +
	"\astorage\x18\x02 \x01(\v2\x1a.mavsdk.rpc.camera.StorageR\astorage\">\n" +
	"\x19GetCurrentSettingsRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\"\xa9\x01\n" +
	"\x1aGetCurrentSettingsResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\x12E\n" +
	"\x10current_settings\x18\x02 \x03(\v2\x1a.mavsdk.rpc.camera.SettingR\x0fcurrentSettings\"E\n" +
	" GetPossibleSettingOptionsRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\"\xb5\x01\n" +
	"!GetPossibleSettingOptionsResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\x12J\n" +
	"\x0fsetting_options\x18\x02 \x03(\v2!.mavsdk.rpc.camera.SettingOptionsR\x0esettingOptions\"l\n" +
	"\x11GetSettingRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x124\n" +
	"\asetting\x18\x02 \x01(\v2\x1a.mavsdk.rpc.camera.SettingR\asetting\"\x90\x01\n" +
	"\x12GetSettingResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\x124\n" +
	"\asetting\x18\x02 \x01(\v2\x1a.mavsdk.rpc.camera.SettingR\asetting\"X\n" +
	"\x14FormatStorageRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x12\x1d\n" +
	"\n" +
	"storage_id\x18\x02 \x01(\x05R\tstorageId\"]\n" +
	"\x15FormatStorageResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"9\n" +
	"\x14ResetSettingsRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\"]\n" +
	"\x15ResetSettingsResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"7\n" +
	"\x12ZoomInStartRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\"[\n" +
	"\x13ZoomInStartResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"8\n" +
	"\x13ZoomOutStartRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\"\\\n" +
	"\x14ZoomOutStartResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"4\n" +
	"\x0fZoomStopRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\"X\n" +
	"\x10ZoomStopResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"K\n" +
	"\x10ZoomRangeRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x12\x14\n" +
	"\x05range\x18\x02 \x01(\x02R\x05range\"Y\n" +
	"\x11ZoomRangeResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"\x80\x01\n" +
	"\x11TrackPointRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x12\x17\n" +
	"\apoint_x\x18\x02 \x01(\x02R\x06pointX\x12\x17\n" +
	"\apoint_y\x18\x03 \x01(\x02R\x06pointY\x12\x16\n" +
	"\x06radius\x18\x04 \x01(\x02R\x06radius\"Z\n" +
	"\x12TrackPointResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"\xc2\x01\n" +
	"\x15TrackRectangleRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x12\x1c\n" +
	"\n" +
	"top_left_x\x18\x02 \x01(\x02R\btopLeftX\x12\x1c\n" +
	"\n" +
	"top_left_y\x18\x03 \x01(\x02R\btopLeftY\x12$\n" +
	"\x0ebottom_right_x\x18\x04 \x01(\x02R\fbottomRightX\x12$\n" +
	"\x0ebottom_right_y\x18\x05 \x01(\x02R\fbottomRightY\"^\n" +
	"\x16TrackRectangleResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"5\n" +
	"\x10TrackStopRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\"Y\n" +
	"\x11TrackStopResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"8\n" +
	"\x13FocusInStartRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\"\\\n" +
	"\x14FocusInStartResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"9\n" +
	"\x14FocusOutStartRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\"]\n" +
	"\x15FocusOutStartResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"5\n" +
	"\x10FocusStopRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\"Y\n" +
	"\x11FocusStopResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"L\n" +
	"\x11FocusRangeRequest\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x12\x14\n" +
	"\x05range\x18\x02 \x01(\x02R\x05range\"Z\n" +
	"\x12FocusRangeResponse\x12D\n" +
	"\rcamera_result\x18\x01 \x01(\v2\x1f.mavsdk.rpc.camera.CameraResultR\fcameraResult\"\xa9\x03\n" +
	"\fCameraResult\x12>\n" +
	"\x06result\x18\x01 \x01(\x0e2&.mavsdk.rpc.camera.CameraResult.ResultR\x06result\x12\x1d\n" +
	"\n" +
	"result_str\x18\x02 \x01(\tR\tresultStr\"\xb9\x02\n" +
	"\x06Result\x12\x12\n" +
	"\x0eRESULT_UNKNOWN\x10\x00\x12\x12\n" +
	"\x0eRESULT_SUCCESS\x10\x01\x12\x16\n" +
	"\x12RESULT_IN_PROGRESS\x10\x02\x12\x0f\n" +
	"\vRESULT_BUSY\x10\x03\x12\x11\n" +
	"\rRESULT_DENIED\x10\x04\x12\x10\n" +
	"\fRESULT_ERROR\x10\x05\x12\x12\n" +
	"\x0eRESULT_TIMEOUT\x10\x06\x12\x19\n" +
	"\x15RESULT_WRONG_ARGUMENT\x10\a\x12\x14\n" +
	"\x10RESULT_NO_SYSTEM\x10\b\x12\x1f\n" +
	"\x1bRESULT_PROTOCOL_UNSUPPORTED\x10\t\x12\x16\n" +
	"\x12RESULT_UNAVAILABLE\x10\n" +
	"\x12\x1c\n" +
	"\x18RESULT_CAMERA_ID_INVALID\x10\v\x12\x1d\n" +
	"\x19RESULT_ACTION_UNSUPPORTED\x10\f\"\xb2\x01\n" +
	"\bPosition\x12!\n" +
	"\flatitude_deg\x18\x01 \x01(\x01R\vlatitudeDeg\x12#\n" +
	"\rlongitude_deg\x18\x02 \x01(\x01R\flongitudeDeg\x12.\n" +
	"\x13absolute_altitude_m\x18\x03 \x01(\x02R\x11absoluteAltitudeM\x12.\n" +
	"\x13relative_altitude_m\x18\x04 \x01(\x02R\x11relativeAltitudeM\"D\n" +
	"\n" +
	"Quaternion\x12\f\n" +
	"\x01w\x18\x01 \x01(\x02R\x01w\x12\f\n" +
	"\x01x\x18\x02 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x02R\x01y\x12\f\n" +
	"\x01z\x18\x04 \x01(\x02R\x01z\"]\n" +
	"\n" +
	"EulerAngle\x12\x19\n" +
	"\broll_deg\x18\x01 \x01(\x02R\arollDeg\x12\x1b\n" +
	"\tpitch_deg\x18\x02 \x01(\x02R\bpitchDeg\x12\x17\n" +
	"\ayaw_deg\x18\x03 \x01(\x02R\x06yawDeg\"\xfa\x02\n" +
	"\vCaptureInfo\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x127\n" +
	"\bposition\x18\x02 \x01(\v2\x1b.mavsdk.rpc.camera.PositionR\bposition\x12N\n" +
	"\x13attitude_quaternion\x18\x03 \x01(\v2\x1d.mavsdk.rpc.camera.QuaternionR\x12attitudeQuaternion\x12O\n" +
	"\x14attitude_euler_angle\x18\x04 \x01(\v2\x1d.mavsdk.rpc.camera.EulerAngleR\x12attitudeEulerAngle\x12\x1e\n" +
	"\vtime_utc_us\x18\x05 \x01(\x04R\ttimeUtcUs\x12\x1d\n" +
	"\n" +
	"is_success\x18\x06 \x01(\bR\tisSuccess\x12\x14\n" +
	"\x05index\x18\a \x01(\x05R\x05index\x12\x19\n" +
	"\bfile_url\x18\b \x01(\tR\afileUrl\"\xfa\x02\n" +
	"\vInformation\x12!\n" +
	"\fcomponent_id\x18\x01 \x01(\x05R\vcomponentId\x12\x1f\n" +
	"\vvendor_name\x18\x02 \x01(\tR\n" +
	"vendorName\x12\x1d\n" +
	"\n" +
	"model_name\x18\x03 \x01(\tR\tmodelName\x12&\n" +
	"\x0ffocal_length_mm\x18\x04 \x01(\x02R\rfocalLengthMm\x129\n" +
	"\x19horizontal_sensor_size_mm\x18\x05 \x01(\x02R\x16horizontalSensorSizeMm\x125\n" +
	"\x17vertical_sensor_size_mm\x18\x06 \x01(\x02R\x14verticalSensorSizeMm\x128\n" +
	"\x18horizontal_resolution_px\x18\a \x01(\rR\x16horizontalResolutionPx\x124\n" +
	"\x16vertical_resolution_px\x18\b \x01(\rR\x14verticalResolutionPx\"F\n" +
	"\n" +
	"CameraList\x128\n" +
	"\acameras\x18\x01 \x03(\v2\x1e.mavsdk.rpc.camera.InformationR\acameras*8\n" +
	"\x04Mode\x12\x10\n" +
	"\fMODE_UNKNOWN\x10\x00\x12\x0e\n" +
	"\n" +
	"MODE_PHOTO\x10\x01\x12\x0e\n" +
	"\n" +
	"MODE_VIDEO\x10\x02*F\n" +
	"\vPhotosRange\x12\x14\n" +
	"\x10PHOTOS_RANGE_ALL\x10\x00\x12!\n" +
	"\x1dPHOTOS_RANGE_SINCE_CONNECTION\x10\x012\xdd\x1d\n" +
	"\rCameraService\x12X\n" +
	"\tTakePhoto\x12#.mavsdk.rpc.camera.TakePhotoRequest\x1a$.mavsdk.rpc.camera.TakePhotoResponse\"\x00\x12s\n" +
	"\x12StartPhotoInterval\x12,.mavsdk.rpc.camera.StartPhotoIntervalRequest\x1a-.mavsdk.rpc.camera.StartPhotoIntervalResponse\"\x00\x12p\n" +
	"\x11StopPhotoInterval\x12+.mavsdk.rpc.camera.StopPhotoIntervalRequest\x1a,.mavsdk.rpc.camera.StopPhotoIntervalResponse\"\x00\x12[\n" +
	"\n" +
	"StartVideo\x12$.mavsdk.rpc.camera.StartVideoRequest\x1a%.mavsdk.rpc.camera.StartVideoResponse\"\x00\x12X\n" +
	"\tStopVideo\x12#.mavsdk.rpc.camera.StopVideoRequest\x1a$.mavsdk.rpc.camera.StopVideoResponse\"\x00\x12z\n" +
	"\x13StartVideoStreaming\x12-.mavsdk.rpc.camera.StartVideoStreamingRequest\x1a..mavsdk.rpc.camera.StartVideoStreamingResponse\"\x04\x80\xb5\x18\x01\x12w\n" +
	"\x12StopVideoStreaming\x12,.mavsdk.rpc.camera.StopVideoStreamingRequest\x1a-.mavsdk.rpc.camera.StopVideoStreamingResponse\"\x04\x80\xb5\x18\x01\x12R\n" +
	"\aSetMode\x12!.mavsdk.rpc.camera.SetModeRequest\x1a\".mavsdk.rpc.camera.SetModeResponse\"\x00\x12[\n" +
	"\n" +
	"ListPhotos\x12$.mavsdk.rpc.camera.ListPhotosRequest\x1a%.mavsdk.rpc.camera.ListPhotosResponse\"\x00\x12o\n" +
	"\x13SubscribeCameraList\x12-.mavsdk.rpc.camera.SubscribeCameraListRequest\x1a%.mavsdk.rpc.camera.CameraListResponse\"\x000\x01\x12a\n" +
	"\rSubscribeMode\x12'.mavsdk.rpc.camera.SubscribeModeRequest\x1a\x1f.mavsdk.rpc.camera.ModeResponse\"\x04\x80\xb5\x18\x000\x01\x12V\n" +
	"\aGetMode\x12!.mavsdk.rpc.camera.GetModeRequest\x1a\".mavsdk.rpc.camera.GetModeResponse\"\x04\x80\xb5\x18\x01\x12\x82\x01\n" +
	"\x18SubscribeVideoStreamInfo\x122.mavsdk.rpc.camera.SubscribeVideoStreamInfoRequest\x1a*.mavsdk.rpc.camera.VideoStreamInfoResponse\"\x04\x80\xb5\x18\x000\x01\x12w\n" +
	"\x12GetVideoStreamInfo\x12,.mavsdk.rpc.camera.GetVideoStreamInfoRequest\x1a-.mavsdk.rpc.camera.GetVideoStreamInfoResponse\"\x04\x80\xb5\x18\x01\x12v\n" +
	"\x14SubscribeCaptureInfo\x12..mavsdk.rpc.camera.SubscribeCaptureInfoRequest\x1a&.mavsdk.rpc.camera.CaptureInfoResponse\"\x04\x80\xb5\x18\x000\x01\x12j\n" +
	"\x10SubscribeStorage\x12*.mavsdk.rpc.camera.SubscribeStorageRequest\x1a\".mavsdk.rpc.camera.StorageResponse\"\x04\x80\xb5\x18\x000\x01\x12_\n" +
	"\n" +
	"GetStorage\x12$.mavsdk.rpc.camera.GetStorageRequest\x1a%.mavsdk.rpc.camera.GetStorageResponse\"\x04\x80\xb5\x18\x01\x12\x82\x01\n" +
	"\x18SubscribeCurrentSettings\x122.mavsdk.rpc.camera.SubscribeCurrentSettingsRequest\x1a*.mavsdk.rpc.camera.CurrentSettingsResponse\"\x04\x80\xb5\x18\x000\x01\x12w\n" +
	"\x12GetCurrentSettings\x12,.mavsdk.rpc.camera.GetCurrentSettingsRequest\x1a-.mavsdk.rpc.camera.GetCurrentSettingsResponse\"\x04\x80\xb5\x18\x01\x12\x97\x01\n" +
	"\x1fSubscribePossibleSettingOptions\x129.mavsdk.rpc.camera.SubscribePossibleSettingOptionsRequest\x1a1.mavsdk.rpc.camera.PossibleSettingOptionsResponse\"\x04\x80\xb5\x18\x000\x01\x12\x8c\x01\n" +
	"\x19GetPossibleSettingOptions\x123.mavsdk.rpc.camera.GetPossibleSettingOptionsRequest\x1a4.mavsdk.rpc.camera.GetPossibleSettingOptionsResponse\"\x04\x80\xb5\x18\x01\x12[\n" +
	"\n" +
	"SetSetting\x12$.mavsdk.rpc.camera.SetSettingRequest\x1a%.mavsdk.rpc.camera.SetSettingResponse\"\x00\x12[\n" +
	"\n" +
	"GetSetting\x12$.mavsdk.rpc.camera.GetSettingRequest\x1a%.mavsdk.rpc.camera.GetSettingResponse\"\x00\x12d\n" +
	"\rFormatStorage\x12'.mavsdk.rpc.camera.FormatStorageRequest\x1a(.mavsdk.rpc.camera.FormatStorageResponse\"\x00\x12d\n" +
	"\rResetSettings\x12'.mavsdk.rpc.camera.ResetSettingsRequest\x1a(.mavsdk.rpc.camera.ResetSettingsResponse\"\x00\x12^\n" +
	"\vZoomInStart\x12%.mavsdk.rpc.camera.ZoomInStartRequest\x1a&.mavsdk.rpc.camera.ZoomInStartResponse\"\x00\x12a\n" +
	"\fZoomOutStart\x12&.mavsdk.rpc.camera.ZoomOutStartRequest\x1a'.mavsdk.rpc.camera.ZoomOutStartResponse\"\x00\x12U\n" +
	"\bZoomStop\x12\".mavsdk.rpc.camera.ZoomStopRequest\x1a#.mavsdk.rpc.camera.ZoomStopResponse\"\x00\x12X\n" +
	"\tZoomRange\x12#.mavsdk.rpc.camera.ZoomRangeRequest\x1a$.mavsdk.rpc.camera.ZoomRangeResponse\"\x00\x12[\n" +
	"\n" +
	"TrackPoint\x12$.mavsdk.rpc.camera.TrackPointRequest\x1a%.mavsdk.rpc.camera.TrackPointResponse\"\x00\x12g\n" +
	"\x0eTrackRectangle\x12(.mavsdk.rpc.camera.TrackRectangleRequest\x1a).mavsdk.rpc.camera.TrackRectangleResponse\"\x00\x12X\n" +
	"\tTrackStop\x12#.mavsdk.rpc.camera.TrackStopRequest\x1a$.mavsdk.rpc.camera.TrackStopResponse\"\x00\x12a\n" +
	"\fFocusInStart\x12&.mavsdk.rpc.camera.FocusInStartRequest\x1a'.mavsdk.rpc.camera.FocusInStartResponse\"\x00\x12d\n" +
	"\rFocusOutStart\x12'.mavsdk.rpc.camera.FocusOutStartRequest\x1a(.mavsdk.rpc.camera.FocusOutStartResponse\"\x00\x12X\n" +
	"\tFocusStop\x12#.mavsdk.rpc.camera.FocusStopRequest\x1a$.mavsdk.rpc.camera.FocusStopResponse\"\x00\x12[\n" +
	"\n" +
	"FocusRange\x12$.mavsdk.rpc.camera.FocusRangeRequest\x1a%.mavsdk.rpc.camera.FocusRangeResponse\"\x00B\x17B\vCameraProtoZ\b.;camerab\x06proto3"

var (
	file_camera_proto_rawDescOnce sync.Once
	file_camera_proto_rawDescData []byte
)

func file_camera_proto_rawDescGZIP() []byte {
	file_camera_proto_rawDescOnce.Do(func() {
		file_camera_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_camera_proto_rawDesc), len(file_camera_proto_rawDesc)))
	})
	return file_camera_proto_rawDescData
}

var file_camera_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_camera_proto_msgTypes = make([]protoimpl.MessageInfo, 90)
var file_camera_proto_goTypes = []any{
	(Mode)(0),                                      // 0: mavsdk.rpc.camera.Mode
	(PhotosRange)(0),                               // 1: mavsdk.rpc.camera.PhotosRange
	(VideoStreamInfo_VideoStreamStatus)(0),         // 2: mavsdk.rpc.camera.VideoStreamInfo.VideoStreamStatus
	(VideoStreamInfo_VideoStreamSpectrum)(0),       // 3: mavsdk.rpc.camera.VideoStreamInfo.VideoStreamSpectrum
	(Storage_StorageStatus)(0),                     // 4: mavsdk.rpc.camera.Storage.StorageStatus
	(Storage_StorageType)(0),                       // 5: mavsdk.rpc.camera.Storage.StorageType
	(CameraResult_Result)(0),                       // 6: mavsdk.rpc.camera.CameraResult.Result
	(*Option)(nil),                                 // 7: mavsdk.rpc.camera.Option
	(*Setting)(nil),                                // 8: mavsdk.rpc.camera.Setting
	(*SettingOptions)(nil),                         // 9: mavsdk.rpc.camera.SettingOptions
	(*VideoStreamSettings)(nil),                    // 10: mavsdk.rpc.camera.VideoStreamSettings
	(*VideoStreamInfo)(nil),                        // 11: mavsdk.rpc.camera.VideoStreamInfo
	(*TakePhotoRequest)(nil),                       // 12: mavsdk.rpc.camera.TakePhotoRequest
	(*TakePhotoResponse)(nil),                      // 13: mavsdk.rpc.camera.TakePhotoResponse
	(*StartPhotoIntervalRequest)(nil),              // 14: mavsdk.rpc.camera.StartPhotoIntervalRequest
	(*StartPhotoIntervalResponse)(nil),             // 15: mavsdk.rpc.camera.StartPhotoIntervalResponse
	(*StopPhotoIntervalRequest)(nil),               // 16: mavsdk.rpc.camera.StopPhotoIntervalRequest
	(*StopPhotoIntervalResponse)(nil),              // 17: mavsdk.rpc.camera.StopPhotoIntervalResponse
	(*StartVideoRequest)(nil),                      // 18: mavsdk.rpc.camera.StartVideoRequest
	(*StartVideoResponse)(nil),                     // 19: mavsdk.rpc.camera.StartVideoResponse
	(*StopVideoRequest)(nil),                       // 20: mavsdk.rpc.camera.StopVideoRequest
	(*StopVideoResponse)(nil),                      // 21: mavsdk.rpc.camera.StopVideoResponse
	(*StartVideoStreamingRequest)(nil),             // 22: mavsdk.rpc.camera.StartVideoStreamingRequest
	(*StartVideoStreamingResponse)(nil),            // 23: mavsdk.rpc.camera.StartVideoStreamingResponse
	(*StopVideoStreamingRequest)(nil),              // 24: mavsdk.rpc.camera.StopVideoStreamingRequest
	(*StopVideoStreamingResponse)(nil),             // 25: mavsdk.rpc.camera.StopVideoStreamingResponse
	(*SetModeRequest)(nil),                         // 26: mavsdk.rpc.camera.SetModeRequest
	(*SetModeResponse)(nil),                        // 27: mavsdk.rpc.camera.SetModeResponse
	(*ListPhotosRequest)(nil),                      // 28: mavsdk.rpc.camera.ListPhotosRequest
	(*ListPhotosResponse)(nil),                     // 29: mavsdk.rpc.camera.ListPhotosResponse
	(*SubscribeCameraListRequest)(nil),             // 30: mavsdk.rpc.camera.SubscribeCameraListRequest
	(*CameraListResponse)(nil),                     // 31: mavsdk.rpc.camera.CameraListResponse
	(*ModeUpdate)(nil),                             // 32: mavsdk.rpc.camera.ModeUpdate
	(*SubscribeModeRequest)(nil),                   // 33: mavsdk.rpc.camera.SubscribeModeRequest
	(*ModeResponse)(nil),                           // 34: mavsdk.rpc.camera.ModeResponse
	(*VideoStreamUpdate)(nil),                      // 35: mavsdk.rpc.camera.VideoStreamUpdate
	(*SubscribeVideoStreamInfoRequest)(nil),        // 36: mavsdk.rpc.camera.SubscribeVideoStreamInfoRequest
	(*VideoStreamInfoResponse)(nil),                // 37: mavsdk.rpc.camera.VideoStreamInfoResponse
	(*SubscribeCaptureInfoRequest)(nil),            // 38: mavsdk.rpc.camera.SubscribeCaptureInfoRequest
	(*CaptureInfoResponse)(nil),                    // 39: mavsdk.rpc.camera.CaptureInfoResponse
	(*Storage)(nil),                                // 40: mavsdk.rpc.camera.Storage
	(*StorageUpdate)(nil),                          // 41: mavsdk.rpc.camera.StorageUpdate
	(*SubscribeStorageRequest)(nil),                // 42: mavsdk.rpc.camera.SubscribeStorageRequest
	(*StorageResponse)(nil),                        // 43: mavsdk.rpc.camera.StorageResponse
	(*CurrentSettingsUpdate)(nil),                  // 44: mavsdk.rpc.camera.CurrentSettingsUpdate
	(*SubscribeCurrentSettingsRequest)(nil),        // 45: mavsdk.rpc.camera.SubscribeCurrentSettingsRequest
	(*CurrentSettingsResponse)(nil),                // 46: mavsdk.rpc.camera.CurrentSettingsResponse
	(*PossibleSettingOptionsUpdate)(nil),           // 47: mavsdk.rpc.camera.PossibleSettingOptionsUpdate
	(*SubscribePossibleSettingOptionsRequest)(nil), // 48: mavsdk.rpc.camera.SubscribePossibleSettingOptionsRequest
	(*PossibleSettingOptionsResponse)(nil),         // 49: mavsdk.rpc.camera.PossibleSettingOptionsResponse
	(*SetSettingRequest)(nil),                      // 50: mavsdk.rpc.camera.SetSettingRequest
	(*SetSettingResponse)(nil),                     // 51: mavsdk.rpc.camera.SetSettingResponse
	(*GetModeRequest)(nil),                         // 52: mavsdk.rpc.camera.GetModeRequest
	(*GetModeResponse)(nil),                        // 53: mavsdk.rpc.camera.GetModeResponse
	(*GetVideoStreamInfoRequest)(nil),              // 54: mavsdk.rpc.camera.GetVideoStreamInfoRequest
	(*GetVideoStreamInfoResponse)(nil),             // 55: mavsdk.rpc.camera.GetVideoStreamInfoResponse
	(*GetStorageRequest)(nil),                      // 56: mavsdk.rpc.camera.GetStorageRequest
	(*GetStorageResponse)(nil),                     // 57: mavsdk.rpc.camera.GetStorageResponse
	(*GetCurrentSettingsRequest)(nil),              // 58: mavsdk.rpc.camera.GetCurrentSettingsRequest
	(*GetCurrentSettingsResponse)(nil),             // 59: mavsdk.rpc.camera.GetCurrentSettingsResponse
	(*GetPossibleSettingOptionsRequest)(nil),       // 60: mavsdk.rpc.camera.GetPossibleSettingOptionsRequest
	(*GetPossibleSettingOptionsResponse)(nil),      // 61: mavsdk.rpc.camera.GetPossibleSettingOptionsResponse
	(*GetSettingRequest)(nil),                      // 62: mavsdk.rpc.camera.GetSettingRequest
	(*GetSettingResponse)(nil),                     // 63: mavsdk.rpc.camera.GetSettingResponse
	(*FormatStorageRequest)(nil),                   // 64: mavsdk.rpc.camera.FormatStorageRequest
	(*FormatStorageResponse)(nil),                  // 65: mavsdk.rpc.camera.FormatStorageResponse
	(*ResetSettingsRequest)(nil),                   // 66: mavsdk.rpc.camera.ResetSettingsRequest
	(*ResetSettingsResponse)(nil),                  // 67: mavsdk.rpc.camera.ResetSettingsResponse
	(*ZoomInStartRequest)(nil),                     // 68: mavsdk.rpc.camera.ZoomInStartRequest
	(*ZoomInStartResponse)(nil),                    // 69: mavsdk.rpc.camera.ZoomInStartResponse
	(*ZoomOutStartRequest)(nil),                    // 70: mavsdk.rpc.camera.ZoomOutStartRequest
	(*ZoomOutStartResponse)(nil),                   // 71: mavsdk.rpc.camera.ZoomOutStartResponse
	(*ZoomStopRequest)(nil),                        // 72: mavsdk.rpc.camera.ZoomStopRequest
	(*ZoomStopResponse)(nil),                       // 73: mavsdk.rpc.camera.ZoomStopResponse
	(*ZoomRangeRequest)(nil),                       // 74: mavsdk.rpc.camera.ZoomRangeRequest
	(*ZoomRangeResponse)(nil),                      // 75: mavsdk.rpc.camera.ZoomRangeResponse
	(*TrackPointRequest)(nil),                      // 76: mavsdk.rpc.camera.TrackPointRequest
	(*TrackPointResponse)(nil),                     // 77: mavsdk.rpc.camera.TrackPointResponse
	(*TrackRectangleRequest)(nil),                  // 78: mavsdk.rpc.camera.TrackRectangleRequest
	(*TrackRectangleResponse)(nil),                 // 79: mavsdk.rpc.camera.TrackRectangleResponse
	(*TrackStopRequest)(nil),                       // 80: mavsdk.rpc.camera.TrackStopRequest
	(*TrackStopResponse)(nil),                      // 81: mavsdk.rpc.camera.TrackStopResponse
	(*FocusInStartRequest)(nil),                    // 82: mavsdk.rpc.camera.FocusInStartRequest
	(*FocusInStartResponse)(nil),                   // 83: mavsdk.rpc.camera.FocusInStartResponse
	(*FocusOutStartRequest)(nil),                   // 84: mavsdk.rpc.camera.FocusOutStartRequest
	(*FocusOutStartResponse)(nil),                  // 85: mavsdk.rpc.camera.FocusOutStartResponse
	(*FocusStopRequest)(nil),                       // 86: mavsdk.rpc.camera.FocusStopRequest
	(*FocusStopResponse)(nil),                      // 87: mavsdk.rpc.camera.FocusStopResponse
	(*FocusRangeRequest)(nil),                      // 88: mavsdk.rpc.camera.FocusRangeRequest
	(*FocusRangeResponse)(nil),                     // 89: mavsdk.rpc.camera.FocusRangeResponse
	(*CameraResult)(nil),                           // 90: mavsdk.rpc.camera.CameraResult
	(*Position)(nil),                               // 91: mavsdk.rpc.camera.Position
	(*Quaternion)(nil),                             // 92: mavsdk.rpc.camera.Quaternion
	(*EulerAngle)(nil),                             // 93: mavsdk.rpc.camera.EulerAngle
	(*CaptureInfo)(nil),                            // 94: mavsdk.rpc.camera.CaptureInfo
	(*Information)(nil),                            // 95: mavsdk.rpc.camera.Information
	(*CameraList)(nil),                             // 96: mavsdk.rpc.camera.CameraList
}
var file_camera_proto_depIdxs = []int32{
	7,   // 0: mavsdk.rpc.camera.Setting.option:type_name -> mavsdk.rpc.camera.Option
	7,   // 1: mavsdk.rpc.camera.SettingOptions.options:type_name -> mavsdk.rpc.camera.Option
	10,  // 2: mavsdk.rpc.camera.VideoStreamInfo.settings:type_name -> mavsdk.rpc.camera.VideoStreamSettings
	2,   // 3: mavsdk.rpc.camera.VideoStreamInfo.status:type_name -> mavsdk.rpc.camera.VideoStreamInfo.VideoStreamStatus
	3,   // 4: mavsdk.rpc.camera.VideoStreamInfo.spectrum:type_name -> mavsdk.rpc.camera.VideoStreamInfo.VideoStreamSpectrum
	90,  // 5: mavsdk.rpc.camera.TakePhotoResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 6: mavsdk.rpc.camera.StartPhotoIntervalResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 7: mavsdk.rpc.camera.StopPhotoIntervalResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 8: mavsdk.rpc.camera.StartVideoResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 9: mavsdk.rpc.camera.StopVideoResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 10: mavsdk.rpc.camera.StartVideoStreamingResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 11: mavsdk.rpc.camera.StopVideoStreamingResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	0,   // 12: mavsdk.rpc.camera.SetModeRequest.mode:type_name -> mavsdk.rpc.camera.Mode
	90,  // 13: mavsdk.rpc.camera.SetModeResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	1,   // 14: mavsdk.rpc.camera.ListPhotosRequest.photos_range:type_name -> mavsdk.rpc.camera.PhotosRange
	90,  // 15: mavsdk.rpc.camera.ListPhotosResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	94,  // 16: mavsdk.rpc.camera.ListPhotosResponse.capture_infos:type_name -> mavsdk.rpc.camera.CaptureInfo
	96,  // 17: mavsdk.rpc.camera.CameraListResponse.camera_list:type_name -> mavsdk.rpc.camera.CameraList
	0,   // 18: mavsdk.rpc.camera.ModeUpdate.mode:type_name -> mavsdk.rpc.camera.Mode
	32,  // 19: mavsdk.rpc.camera.ModeResponse.update:type_name -> mavsdk.rpc.camera.ModeUpdate
	11,  // 20: mavsdk.rpc.camera.VideoStreamUpdate.video_stream_info:type_name -> mavsdk.rpc.camera.VideoStreamInfo
	35,  // 21: mavsdk.rpc.camera.VideoStreamInfoResponse.update:type_name -> mavsdk.rpc.camera.VideoStreamUpdate
	94,  // 22: mavsdk.rpc.camera.CaptureInfoResponse.capture_info:type_name -> mavsdk.rpc.camera.CaptureInfo
	4,   // 23: mavsdk.rpc.camera.Storage.storage_status:type_name -> mavsdk.rpc.camera.Storage.StorageStatus
	5,   // 24: mavsdk.rpc.camera.Storage.storage_type:type_name -> mavsdk.rpc.camera.Storage.StorageType
	40,  // 25: mavsdk.rpc.camera.StorageUpdate.storage:type_name -> mavsdk.rpc.camera.Storage
	41,  // 26: mavsdk.rpc.camera.StorageResponse.update:type_name -> mavsdk.rpc.camera.StorageUpdate
	8,   // 27: mavsdk.rpc.camera.CurrentSettingsUpdate.current_settings:type_name -> mavsdk.rpc.camera.Setting
	44,  // 28: mavsdk.rpc.camera.CurrentSettingsResponse.update:type_name -> mavsdk.rpc.camera.CurrentSettingsUpdate
	9,   // 29: mavsdk.rpc.camera.PossibleSettingOptionsUpdate.setting_options:type_name -> mavsdk.rpc.camera.SettingOptions
	47,  // 30: mavsdk.rpc.camera.PossibleSettingOptionsResponse.update:type_name -> mavsdk.rpc.camera.PossibleSettingOptionsUpdate
	8,   // 31: mavsdk.rpc.camera.SetSettingRequest.setting:type_name -> mavsdk.rpc.camera.Setting
	90,  // 32: mavsdk.rpc.camera.SetSettingResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 33: mavsdk.rpc.camera.GetModeResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	0,   // 34: mavsdk.rpc.camera.GetModeResponse.mode:type_name -> mavsdk.rpc.camera.Mode
	90,  // 35: mavsdk.rpc.camera.GetVideoStreamInfoResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	11,  // 36: mavsdk.rpc.camera.GetVideoStreamInfoResponse.video_stream_info:type_name -> mavsdk.rpc.camera.VideoStreamInfo
	90,  // 37: mavsdk.rpc.camera.GetStorageResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	40,  // 38: mavsdk.rpc.camera.GetStorageResponse.storage:type_name -> mavsdk.rpc.camera.Storage
	90,  // 39: mavsdk.rpc.camera.GetCurrentSettingsResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	8,   // 40: mavsdk.rpc.camera.GetCurrentSettingsResponse.current_settings:type_name -> mavsdk.rpc.camera.Setting
	90,  // 41: mavsdk.rpc.camera.GetPossibleSettingOptionsResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	9,   // 42: mavsdk.rpc.camera.GetPossibleSettingOptionsResponse.setting_options:type_name -> mavsdk.rpc.camera.SettingOptions
	8,   // 43: mavsdk.rpc.camera.GetSettingRequest.setting:type_name -> mavsdk.rpc.camera.Setting
	90,  // 44: mavsdk.rpc.camera.GetSettingResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	8,   // 45: mavsdk.rpc.camera.GetSettingResponse.setting:type_name -> mavsdk.rpc.camera.Setting
	90,  // 46: mavsdk.rpc.camera.FormatStorageResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 47: mavsdk.rpc.camera.ResetSettingsResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 48: mavsdk.rpc.camera.ZoomInStartResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 49: mavsdk.rpc.camera.ZoomOutStartResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 50: mavsdk.rpc.camera.ZoomStopResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 51: mavsdk.rpc.camera.ZoomRangeResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 52: mavsdk.rpc.camera.TrackPointResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 53: mavsdk.rpc.camera.TrackRectangleResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 54: mavsdk.rpc.camera.TrackStopResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 55: mavsdk.rpc.camera.FocusInStartResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 56: mavsdk.rpc.camera.FocusOutStartResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 57: mavsdk.rpc.camera.FocusStopResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	90,  // 58: mavsdk.rpc.camera.FocusRangeResponse.camera_result:type_name -> mavsdk.rpc.camera.CameraResult
	6,   // 59: mavsdk.rpc.camera.CameraResult.result:type_name -> mavsdk.rpc.camera.CameraResult.Result
	91,  // 60: mavsdk.rpc.camera.CaptureInfo.position:type_name -> mavsdk.rpc.camera.Position
	92,  // 61: mavsdk.rpc.camera.CaptureInfo.attitude_quaternion:type_name -> mavsdk.rpc.camera.Quaternion
	93,  // 62: mavsdk.rpc.camera.CaptureInfo.attitude_euler_angle:type_name -> mavsdk.rpc.camera.EulerAngle
	95,  // 63: mavsdk.rpc.camera.CameraList.cameras:type_name -> mavsdk.rpc.camera.Information
	12,  // 64: mavsdk.rpc.camera.CameraService.TakePhoto:input_type -> mavsdk.rpc.camera.TakePhotoRequest
	14,  // 65: mavsdk.rpc.camera.CameraService.StartPhotoInterval:input_type -> mavsdk.rpc.camera.StartPhotoIntervalRequest
	16,  // 66: mavsdk.rpc.camera.CameraService.StopPhotoInterval:input_type -> mavsdk.rpc.camera.StopPhotoIntervalRequest
	18,  // 67: mavsdk.rpc.camera.CameraService.StartVideo:input_type -> mavsdk.rpc.camera.StartVideoRequest
	20,  // 68: mavsdk.rpc.camera.CameraService.StopVideo:input_type -> mavsdk.rpc.camera.StopVideoRequest
	22,  // 69: mavsdk.rpc.camera.CameraService.StartVideoStreaming:input_type -> mavsdk.rpc.camera.StartVideoStreamingRequest
	24,  // 70: mavsdk.rpc.camera.CameraService.StopVideoStreaming:input_type -> mavsdk.rpc.camera.StopVideoStreamingRequest
	26,  // 71: mavsdk.rpc.camera.CameraService.SetMode:input_type -> mavsdk.rpc.camera.SetModeRequest
	28,  // 72: mavsdk.rpc.camera.CameraService.ListPhotos:input_type -> mavsdk.rpc.camera.ListPhotosRequest
	30,  // 73: mavsdk.rpc.camera.CameraService.SubscribeCameraList:input_type -> mavsdk.rpc.camera.SubscribeCameraListRequest
	33,  // 74: mavsdk.rpc.camera.CameraService.SubscribeMode:input_type -> mavsdk.rpc.camera.SubscribeModeRequest
	52,  // 75: mavsdk.rpc.camera.CameraService.GetMode:input_type -> mavsdk.rpc.camera.GetModeRequest
	36,  // 76: mavsdk.rpc.camera.CameraService.SubscribeVideoStreamInfo:input_type -> mavsdk.rpc.camera.SubscribeVideoStreamInfoRequest
	54,  // 77: mavsdk.rpc.camera.CameraService.GetVideoStreamInfo:input_type -> mavsdk.rpc.camera.GetVideoStreamInfoRequest
	38,  // 78: mavsdk.rpc.camera.CameraService.SubscribeCaptureInfo:input_type -> mavsdk.rpc.camera.SubscribeCaptureInfoRequest
	42,  // 79: mavsdk.rpc.camera.CameraService.SubscribeStorage:input_type -> mavsdk.rpc.camera.SubscribeStorageRequest
	56,  // 80: mavsdk.rpc.camera.CameraService.GetStorage:input_type -> mavsdk.rpc.camera.GetStorageRequest
	45,  // 81: mavsdk.rpc.camera.CameraService.SubscribeCurrentSettings:input_type -> mavsdk.rpc.camera.SubscribeCurrentSettingsRequest
	58,  // 82: mavsdk.rpc.camera.CameraService.GetCurrentSettings:input_type -> mavsdk.rpc.camera.GetCurrentSettingsRequest
	48,  // 83: mavsdk.rpc.camera.CameraService.SubscribePossibleSettingOptions:input_type -> mavsdk.rpc.camera.SubscribePossibleSettingOptionsRequest
	60,  // 84: mavsdk.rpc.camera.CameraService.GetPossibleSettingOptions:input_type -> mavsdk.rpc.camera.GetPossibleSettingOptionsRequest
	50,  // 85: mavsdk.rpc.camera.CameraService.SetSetting:input_type -> mavsdk.rpc.camera.SetSettingRequest
	62,  // 86: mavsdk.rpc.camera.CameraService.GetSetting:input_type -> mavsdk.rpc.camera.GetSettingRequest
	64,  // 87: mavsdk.rpc.camera.CameraService.FormatStorage:input_type -> mavsdk.rpc.camera.FormatStorageRequest
	66,  // 88: mavsdk.rpc.camera.CameraService.ResetSettings:input_type -> mavsdk.rpc.camera.ResetSettingsRequest
	68,  // 89: mavsdk.rpc.camera.CameraService.ZoomInStart:input_type -> mavsdk.rpc.camera.ZoomInStartRequest
	70,  // 90: mavsdk.rpc.camera.CameraService.ZoomOutStart:input_type -> mavsdk.rpc.camera.ZoomOutStartRequest
	72,  // 91: mavsdk.rpc.camera.CameraService.ZoomStop:input_type -> mavsdk.rpc.camera.ZoomStopRequest
	74,  // 92: mavsdk.rpc.camera.CameraService.ZoomRange:input_type -> mavsdk.rpc.camera.ZoomRangeRequest
	76,  // 93: mavsdk.rpc.camera.CameraService.TrackPoint:input_type -> mavsdk.rpc.camera.TrackPointRequest
	78,  // 94: mavsdk.rpc.camera.CameraService.TrackRectangle:input_type -> mavsdk.rpc.camera.TrackRectangleRequest
	80,  // 95: mavsdk.rpc.camera.CameraService.TrackStop:input_type -> mavsdk.rpc.camera.TrackStopRequest
	82,  // 96: mavsdk.rpc.camera.CameraService.FocusInStart:input_type -> mavsdk.rpc.camera.FocusInStartRequest
	84,  // 97: mavsdk.rpc.camera.CameraService.FocusOutStart:input_type -> mavsdk.rpc.camera.FocusOutStartRequest
	86,  // 98: mavsdk.rpc.camera.CameraService.FocusStop:input_type -> mavsdk.rpc.camera.FocusStopRequest
	88,  // 99: mavsdk.rpc.camera.CameraService.FocusRange:input_type -> mavsdk.rpc.camera.FocusRangeRequest
	13,  // 100: mavsdk.rpc.camera.CameraService.TakePhoto:output_type -> mavsdk.rpc.camera.TakePhotoResponse
	15,  // 101: mavsdk.rpc.camera.CameraService.StartPhotoInterval:output_type -> mavsdk.rpc.camera.StartPhotoIntervalResponse
	17,  // 102: mavsdk.rpc.camera.CameraService.StopPhotoInterval:output_type -> mavsdk.rpc.camera.StopPhotoIntervalResponse
	19,  // 103: mavsdk.rpc.camera.CameraService.StartVideo:output_type -> mavsdk.rpc.camera.StartVideoResponse
	21,  // 104: mavsdk.rpc.camera.CameraService.StopVideo:output_type -> mavsdk.rpc.camera.StopVideoResponse
	23,  // 105: mavsdk.rpc.camera.CameraService.StartVideoStreaming:output_type -> mavsdk.rpc.camera.StartVideoStreamingResponse
	25,  // 106: mavsdk.rpc.camera.CameraService.StopVideoStreaming:output_type -> mavsdk.rpc.camera.StopVideoStreamingResponse
	27,  // 107: mavsdk.rpc.camera.CameraService.SetMode:output_type -> mavsdk.rpc.camera.SetModeResponse
	29,  // 108: mavsdk.rpc.camera.CameraService.ListPhotos:output_type -> mavsdk.rpc.camera.ListPhotosResponse
	31,  // 109: mavsdk.rpc.camera.CameraService.SubscribeCameraList:output_type -> mavsdk.rpc.camera.CameraListResponse
	34,  // 110: mavsdk.rpc.camera.CameraService.SubscribeMode:output_type -> mavsdk.rpc.camera.ModeResponse
	53,  // 111: mavsdk.rpc.camera.CameraService.GetMode:output_type -> mavsdk.rpc.camera.GetModeResponse
	37,  // 112: mavsdk.rpc.camera.CameraService.SubscribeVideoStreamInfo:output_type -> mavsdk.rpc.camera.VideoStreamInfoResponse
	55,  // 113: mavsdk.rpc.camera.CameraService.GetVideoStreamInfo:output_type -> mavsdk.rpc.camera.GetVideoStreamInfoResponse
	39,  // 114: mavsdk.rpc.camera.CameraService.SubscribeCaptureInfo:output_type -> mavsdk.rpc.camera.CaptureInfoResponse
	43,  // 115: mavsdk.rpc.camera.CameraService.SubscribeStorage:output_type -> mavsdk.rpc.camera.StorageResponse
	57,  // 116: mavsdk.rpc.camera.CameraService.GetStorage:output_type -> mavsdk.rpc.camera.GetStorageResponse
	46,  // 117: mavsdk.rpc.camera.CameraService.SubscribeCurrentSettings:output_type -> mavsdk.rpc.camera.CurrentSettingsResponse
	59,  // 118: mavsdk.rpc.camera.CameraService.GetCurrentSettings:output_type -> mavsdk.rpc.camera.GetCurrentSettingsResponse
	49,  // 119: mavsdk.rpc.camera.CameraService.SubscribePossibleSettingOptions:output_type -> mavsdk.rpc.camera.PossibleSettingOptionsResponse
	61,  // 120: mavsdk.rpc.camera.CameraService.GetPossibleSettingOptions:output_type -> mavsdk.rpc.camera.GetPossibleSettingOptionsResponse
	51,  // 121: mavsdk.rpc.camera.CameraService.SetSetting:output_type -> mavsdk.rpc.camera.SetSettingResponse
	63,  // 122: mavsdk.rpc.camera.CameraService.GetSetting:output_type -> mavsdk.rpc.camera.GetSettingResponse
	65,  // 123: mavsdk.rpc.camera.CameraService.FormatStorage:output_type -> mavsdk.rpc.camera.FormatStorageResponse
	67,  // 124: mavsdk.rpc.camera.CameraService.ResetSettings:output_type -> mavsdk.rpc.camera.ResetSettingsResponse
	69,  // 125: mavsdk.rpc.camera.CameraService.ZoomInStart:output_type -> mavsdk.rpc.camera.ZoomInStartResponse
	71,  // 126: mavsdk.rpc.camera.CameraService.ZoomOutStart:output_type -> mavsdk.rpc.camera.ZoomOutStartResponse
	73,  // 127: mavsdk.rpc.camera.CameraService.ZoomStop:output_type -> mavsdk.rpc.camera.ZoomStopResponse
	75,  // 128: mavsdk.rpc.camera.CameraService.ZoomRange:output_type -> mavsdk.rpc.camera.ZoomRangeResponse
	77,  // 129: mavsdk.rpc.camera.CameraService.TrackPoint:output_type -> mavsdk.rpc.camera.TrackPointResponse
	79,  // 130: mavsdk.rpc.camera.CameraService.TrackRectangle:output_type -> mavsdk.rpc.camera.TrackRectangleResponse
	81,  // 131: mavsdk.rpc.camera.CameraService.TrackStop:output_type -> mavsdk.rpc.camera.TrackStopResponse
	83,  // 132: mavsdk.rpc.camera.CameraService.FocusInStart:output_type -> mavsdk.rpc.camera.FocusInStartResponse
	85,  // 133: mavsdk.rpc.camera.CameraService.FocusOutStart:output_type -> mavsdk.rpc.camera.FocusOutStartResponse
	87,  // 134: mavsdk.rpc.camera.CameraService.FocusStop:output_type -> mavsdk.rpc.camera.FocusStopResponse
	89,  // 135: mavsdk.rpc.camera.CameraService.FocusRange:output_type -> mavsdk.rpc.camera.FocusRangeResponse
	100, // [100:136] is the sub-list for method output_type
	64,  // [64:100] is the sub-list for method input_type
	64,  // [64:64] is the sub-list for extension type_name
	64,  // [64:64] is the sub-list for extension extendee
	0,   // [0:64] is the sub-list for field type_name
}

func init() { file_camera_proto_init() }
func file_camera_proto_init() {
	if File_camera_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_camera_proto_rawDesc), len(file_camera_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   90,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_camera_proto_goTypes,
		DependencyIndexes: file_camera_proto_depIdxs,
		EnumInfos:         file_camera_proto_enumTypes,
		MessageInfos:      file_camera_proto_msgTypes,
	}.Build()
	File_camera_proto = out.File
	file_camera_proto_goTypes = nil
	file_camera_proto_depIdxs = nil
}
