// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: offboard.proto

package offboard

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Possible altitude options
type PositionGlobalYaw_AltitudeType int32

const (
	PositionGlobalYaw_ALTITUDE_TYPE_REL_HOME PositionGlobalYaw_AltitudeType = 0 // Altitude relative to the Home position
	PositionGlobalYaw_ALTITUDE_TYPE_AMSL     PositionGlobalYaw_AltitudeType = 1 // Altitude above mean sea level (AMSL)
	PositionGlobalYaw_ALTITUDE_TYPE_AGL      PositionGlobalYaw_AltitudeType = 2 // Altitude above ground level (AGL)
)

// Enum value maps for PositionGlobalYaw_AltitudeType.
var (
	PositionGlobalYaw_AltitudeType_name = map[int32]string{
		0: "ALTITUDE_TYPE_REL_HOME",
		1: "ALTITUDE_TYPE_AMSL",
		2: "ALTITUDE_TYPE_AGL",
	}
	PositionGlobalYaw_AltitudeType_value = map[string]int32{
		"ALTITUDE_TYPE_REL_HOME": 0,
		"ALTITUDE_TYPE_AMSL":     1,
		"ALTITUDE_TYPE_AGL":      2,
	}
)

func (x PositionGlobalYaw_AltitudeType) Enum() *PositionGlobalYaw_AltitudeType {
	p := new(PositionGlobalYaw_AltitudeType)
	*p = x
	return p
}

func (x PositionGlobalYaw_AltitudeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PositionGlobalYaw_AltitudeType) Descriptor() protoreflect.EnumDescriptor {
	return file_offboard_proto_enumTypes[0].Descriptor()
}

func (PositionGlobalYaw_AltitudeType) Type() protoreflect.EnumType {
	return &file_offboard_proto_enumTypes[0]
}

func (x PositionGlobalYaw_AltitudeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PositionGlobalYaw_AltitudeType.Descriptor instead.
func (PositionGlobalYaw_AltitudeType) EnumDescriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{31, 0}
}

// Possible results returned for offboard requests
type OffboardResult_Result int32

const (
	OffboardResult_RESULT_UNKNOWN          OffboardResult_Result = 0 // Unknown result
	OffboardResult_RESULT_SUCCESS          OffboardResult_Result = 1 // Request succeeded
	OffboardResult_RESULT_NO_SYSTEM        OffboardResult_Result = 2 // No system is connected
	OffboardResult_RESULT_CONNECTION_ERROR OffboardResult_Result = 3 // Connection error
	OffboardResult_RESULT_BUSY             OffboardResult_Result = 4 // Vehicle is busy
	OffboardResult_RESULT_COMMAND_DENIED   OffboardResult_Result = 5 // Command denied
	OffboardResult_RESULT_TIMEOUT          OffboardResult_Result = 6 // Request timed out
	OffboardResult_RESULT_NO_SETPOINT_SET  OffboardResult_Result = 7 // Cannot start without setpoint set
	OffboardResult_RESULT_FAILED           OffboardResult_Result = 8 // Request failed
)

// Enum value maps for OffboardResult_Result.
var (
	OffboardResult_Result_name = map[int32]string{
		0: "RESULT_UNKNOWN",
		1: "RESULT_SUCCESS",
		2: "RESULT_NO_SYSTEM",
		3: "RESULT_CONNECTION_ERROR",
		4: "RESULT_BUSY",
		5: "RESULT_COMMAND_DENIED",
		6: "RESULT_TIMEOUT",
		7: "RESULT_NO_SETPOINT_SET",
		8: "RESULT_FAILED",
	}
	OffboardResult_Result_value = map[string]int32{
		"RESULT_UNKNOWN":          0,
		"RESULT_SUCCESS":          1,
		"RESULT_NO_SYSTEM":        2,
		"RESULT_CONNECTION_ERROR": 3,
		"RESULT_BUSY":             4,
		"RESULT_COMMAND_DENIED":   5,
		"RESULT_TIMEOUT":          6,
		"RESULT_NO_SETPOINT_SET":  7,
		"RESULT_FAILED":           8,
	}
)

func (x OffboardResult_Result) Enum() *OffboardResult_Result {
	p := new(OffboardResult_Result)
	*p = x
	return p
}

func (x OffboardResult_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OffboardResult_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_offboard_proto_enumTypes[1].Descriptor()
}

func (OffboardResult_Result) Type() protoreflect.EnumType {
	return &file_offboard_proto_enumTypes[1]
}

func (x OffboardResult_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OffboardResult_Result.Descriptor instead.
func (OffboardResult_Result) EnumDescriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{35, 0}
}

type StartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	mi := &file_offboard_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRequest.ProtoReflect.Descriptor instead.
func (*StartRequest) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{0}
}

type StartResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OffboardResult *OffboardResult        `protobuf:"bytes,1,opt,name=offboard_result,json=offboardResult,proto3" json:"offboard_result,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StartResponse) Reset() {
	*x = StartResponse{}
	mi := &file_offboard_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartResponse) ProtoMessage() {}

func (x *StartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartResponse.ProtoReflect.Descriptor instead.
func (*StartResponse) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{1}
}

func (x *StartResponse) GetOffboardResult() *OffboardResult {
	if x != nil {
		return x.OffboardResult
	}
	return nil
}

type StopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	mi := &file_offboard_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{2}
}

type StopResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OffboardResult *OffboardResult        `protobuf:"bytes,1,opt,name=offboard_result,json=offboardResult,proto3" json:"offboard_result,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	mi := &file_offboard_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{3}
}

func (x *StopResponse) GetOffboardResult() *OffboardResult {
	if x != nil {
		return x.OffboardResult
	}
	return nil
}

type IsActiveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsActiveRequest) Reset() {
	*x = IsActiveRequest{}
	mi := &file_offboard_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsActiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsActiveRequest) ProtoMessage() {}

func (x *IsActiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsActiveRequest.ProtoReflect.Descriptor instead.
func (*IsActiveRequest) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{4}
}

type IsActiveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsActive      bool                   `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"` // True if offboard is active
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsActiveResponse) Reset() {
	*x = IsActiveResponse{}
	mi := &file_offboard_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsActiveResponse) ProtoMessage() {}

func (x *IsActiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsActiveResponse.ProtoReflect.Descriptor instead.
func (*IsActiveResponse) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{5}
}

func (x *IsActiveResponse) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type SetAttitudeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Attitude      *Attitude              `protobuf:"bytes,1,opt,name=attitude,proto3" json:"attitude,omitempty"` // Attitude roll, pitch and yaw along with thrust
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAttitudeRequest) Reset() {
	*x = SetAttitudeRequest{}
	mi := &file_offboard_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAttitudeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAttitudeRequest) ProtoMessage() {}

func (x *SetAttitudeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAttitudeRequest.ProtoReflect.Descriptor instead.
func (*SetAttitudeRequest) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{6}
}

func (x *SetAttitudeRequest) GetAttitude() *Attitude {
	if x != nil {
		return x.Attitude
	}
	return nil
}

type SetAttitudeResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OffboardResult *OffboardResult        `protobuf:"bytes,1,opt,name=offboard_result,json=offboardResult,proto3" json:"offboard_result,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetAttitudeResponse) Reset() {
	*x = SetAttitudeResponse{}
	mi := &file_offboard_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAttitudeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAttitudeResponse) ProtoMessage() {}

func (x *SetAttitudeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAttitudeResponse.ProtoReflect.Descriptor instead.
func (*SetAttitudeResponse) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{7}
}

func (x *SetAttitudeResponse) GetOffboardResult() *OffboardResult {
	if x != nil {
		return x.OffboardResult
	}
	return nil
}

type SetActuatorControlRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ActuatorControl *ActuatorControl       `protobuf:"bytes,1,opt,name=actuator_control,json=actuatorControl,proto3" json:"actuator_control,omitempty"` // Actuator control values
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SetActuatorControlRequest) Reset() {
	*x = SetActuatorControlRequest{}
	mi := &file_offboard_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetActuatorControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetActuatorControlRequest) ProtoMessage() {}

func (x *SetActuatorControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetActuatorControlRequest.ProtoReflect.Descriptor instead.
func (*SetActuatorControlRequest) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{8}
}

func (x *SetActuatorControlRequest) GetActuatorControl() *ActuatorControl {
	if x != nil {
		return x.ActuatorControl
	}
	return nil
}

type SetActuatorControlResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OffboardResult *OffboardResult        `protobuf:"bytes,1,opt,name=offboard_result,json=offboardResult,proto3" json:"offboard_result,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetActuatorControlResponse) Reset() {
	*x = SetActuatorControlResponse{}
	mi := &file_offboard_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetActuatorControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetActuatorControlResponse) ProtoMessage() {}

func (x *SetActuatorControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetActuatorControlResponse.ProtoReflect.Descriptor instead.
func (*SetActuatorControlResponse) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{9}
}

func (x *SetActuatorControlResponse) GetOffboardResult() *OffboardResult {
	if x != nil {
		return x.OffboardResult
	}
	return nil
}

type SetAttitudeRateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttitudeRate  *AttitudeRate          `protobuf:"bytes,1,opt,name=attitude_rate,json=attitudeRate,proto3" json:"attitude_rate,omitempty"` // Attitude rate roll, pitch and yaw angular rate along with thrust
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAttitudeRateRequest) Reset() {
	*x = SetAttitudeRateRequest{}
	mi := &file_offboard_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAttitudeRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAttitudeRateRequest) ProtoMessage() {}

func (x *SetAttitudeRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAttitudeRateRequest.ProtoReflect.Descriptor instead.
func (*SetAttitudeRateRequest) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{10}
}

func (x *SetAttitudeRateRequest) GetAttitudeRate() *AttitudeRate {
	if x != nil {
		return x.AttitudeRate
	}
	return nil
}

type SetAttitudeRateResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OffboardResult *OffboardResult        `protobuf:"bytes,1,opt,name=offboard_result,json=offboardResult,proto3" json:"offboard_result,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetAttitudeRateResponse) Reset() {
	*x = SetAttitudeRateResponse{}
	mi := &file_offboard_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAttitudeRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAttitudeRateResponse) ProtoMessage() {}

func (x *SetAttitudeRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAttitudeRateResponse.ProtoReflect.Descriptor instead.
func (*SetAttitudeRateResponse) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{11}
}

func (x *SetAttitudeRateResponse) GetOffboardResult() *OffboardResult {
	if x != nil {
		return x.OffboardResult
	}
	return nil
}

type SetPositionNedRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PositionNedYaw *PositionNedYaw        `protobuf:"bytes,1,opt,name=position_ned_yaw,json=positionNedYaw,proto3" json:"position_ned_yaw,omitempty"` // Position and yaw
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetPositionNedRequest) Reset() {
	*x = SetPositionNedRequest{}
	mi := &file_offboard_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPositionNedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPositionNedRequest) ProtoMessage() {}

func (x *SetPositionNedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPositionNedRequest.ProtoReflect.Descriptor instead.
func (*SetPositionNedRequest) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{12}
}

func (x *SetPositionNedRequest) GetPositionNedYaw() *PositionNedYaw {
	if x != nil {
		return x.PositionNedYaw
	}
	return nil
}

type SetPositionNedResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OffboardResult *OffboardResult        `protobuf:"bytes,1,opt,name=offboard_result,json=offboardResult,proto3" json:"offboard_result,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetPositionNedResponse) Reset() {
	*x = SetPositionNedResponse{}
	mi := &file_offboard_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPositionNedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPositionNedResponse) ProtoMessage() {}

func (x *SetPositionNedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPositionNedResponse.ProtoReflect.Descriptor instead.
func (*SetPositionNedResponse) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{13}
}

func (x *SetPositionNedResponse) GetOffboardResult() *OffboardResult {
	if x != nil {
		return x.OffboardResult
	}
	return nil
}

type SetPositionGlobalRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PositionGlobalYaw *PositionGlobalYaw     `protobuf:"bytes,1,opt,name=position_global_yaw,json=positionGlobalYaw,proto3" json:"position_global_yaw,omitempty"` // Position and yaw
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SetPositionGlobalRequest) Reset() {
	*x = SetPositionGlobalRequest{}
	mi := &file_offboard_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPositionGlobalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPositionGlobalRequest) ProtoMessage() {}

func (x *SetPositionGlobalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPositionGlobalRequest.ProtoReflect.Descriptor instead.
func (*SetPositionGlobalRequest) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{14}
}

func (x *SetPositionGlobalRequest) GetPositionGlobalYaw() *PositionGlobalYaw {
	if x != nil {
		return x.PositionGlobalYaw
	}
	return nil
}

type SetPositionGlobalResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OffboardResult *OffboardResult        `protobuf:"bytes,1,opt,name=offboard_result,json=offboardResult,proto3" json:"offboard_result,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetPositionGlobalResponse) Reset() {
	*x = SetPositionGlobalResponse{}
	mi := &file_offboard_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPositionGlobalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPositionGlobalResponse) ProtoMessage() {}

func (x *SetPositionGlobalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPositionGlobalResponse.ProtoReflect.Descriptor instead.
func (*SetPositionGlobalResponse) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{15}
}

func (x *SetPositionGlobalResponse) GetOffboardResult() *OffboardResult {
	if x != nil {
		return x.OffboardResult
	}
	return nil
}

type SetVelocityBodyRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	VelocityBodyYawspeed *VelocityBodyYawspeed  `protobuf:"bytes,1,opt,name=velocity_body_yawspeed,json=velocityBodyYawspeed,proto3" json:"velocity_body_yawspeed,omitempty"` // Velocity and yaw angular rate
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SetVelocityBodyRequest) Reset() {
	*x = SetVelocityBodyRequest{}
	mi := &file_offboard_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetVelocityBodyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVelocityBodyRequest) ProtoMessage() {}

func (x *SetVelocityBodyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVelocityBodyRequest.ProtoReflect.Descriptor instead.
func (*SetVelocityBodyRequest) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{16}
}

func (x *SetVelocityBodyRequest) GetVelocityBodyYawspeed() *VelocityBodyYawspeed {
	if x != nil {
		return x.VelocityBodyYawspeed
	}
	return nil
}

type SetVelocityBodyResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OffboardResult *OffboardResult        `protobuf:"bytes,1,opt,name=offboard_result,json=offboardResult,proto3" json:"offboard_result,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetVelocityBodyResponse) Reset() {
	*x = SetVelocityBodyResponse{}
	mi := &file_offboard_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetVelocityBodyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVelocityBodyResponse) ProtoMessage() {}

func (x *SetVelocityBodyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVelocityBodyResponse.ProtoReflect.Descriptor instead.
func (*SetVelocityBodyResponse) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{17}
}

func (x *SetVelocityBodyResponse) GetOffboardResult() *OffboardResult {
	if x != nil {
		return x.OffboardResult
	}
	return nil
}

type SetVelocityNedRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	VelocityNedYaw *VelocityNedYaw        `protobuf:"bytes,1,opt,name=velocity_ned_yaw,json=velocityNedYaw,proto3" json:"velocity_ned_yaw,omitempty"` // Velocity and yaw
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetVelocityNedRequest) Reset() {
	*x = SetVelocityNedRequest{}
	mi := &file_offboard_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetVelocityNedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVelocityNedRequest) ProtoMessage() {}

func (x *SetVelocityNedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVelocityNedRequest.ProtoReflect.Descriptor instead.
func (*SetVelocityNedRequest) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{18}
}

func (x *SetVelocityNedRequest) GetVelocityNedYaw() *VelocityNedYaw {
	if x != nil {
		return x.VelocityNedYaw
	}
	return nil
}

type SetVelocityNedResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OffboardResult *OffboardResult        `protobuf:"bytes,1,opt,name=offboard_result,json=offboardResult,proto3" json:"offboard_result,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetVelocityNedResponse) Reset() {
	*x = SetVelocityNedResponse{}
	mi := &file_offboard_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetVelocityNedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVelocityNedResponse) ProtoMessage() {}

func (x *SetVelocityNedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVelocityNedResponse.ProtoReflect.Descriptor instead.
func (*SetVelocityNedResponse) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{19}
}

func (x *SetVelocityNedResponse) GetOffboardResult() *OffboardResult {
	if x != nil {
		return x.OffboardResult
	}
	return nil
}

type SetPositionVelocityNedRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PositionNedYaw *PositionNedYaw        `protobuf:"bytes,1,opt,name=position_ned_yaw,json=positionNedYaw,proto3" json:"position_ned_yaw,omitempty"` // Position and yaw
	VelocityNedYaw *VelocityNedYaw        `protobuf:"bytes,2,opt,name=velocity_ned_yaw,json=velocityNedYaw,proto3" json:"velocity_ned_yaw,omitempty"` // Velocity and yaw
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetPositionVelocityNedRequest) Reset() {
	*x = SetPositionVelocityNedRequest{}
	mi := &file_offboard_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPositionVelocityNedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPositionVelocityNedRequest) ProtoMessage() {}

func (x *SetPositionVelocityNedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPositionVelocityNedRequest.ProtoReflect.Descriptor instead.
func (*SetPositionVelocityNedRequest) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{20}
}

func (x *SetPositionVelocityNedRequest) GetPositionNedYaw() *PositionNedYaw {
	if x != nil {
		return x.PositionNedYaw
	}
	return nil
}

func (x *SetPositionVelocityNedRequest) GetVelocityNedYaw() *VelocityNedYaw {
	if x != nil {
		return x.VelocityNedYaw
	}
	return nil
}

type SetPositionVelocityAccelerationNedRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PositionNedYaw  *PositionNedYaw        `protobuf:"bytes,1,opt,name=position_ned_yaw,json=positionNedYaw,proto3" json:"position_ned_yaw,omitempty"`  // Position and yaw
	VelocityNedYaw  *VelocityNedYaw        `protobuf:"bytes,2,opt,name=velocity_ned_yaw,json=velocityNedYaw,proto3" json:"velocity_ned_yaw,omitempty"`  // Velocity and yaw
	AccelerationNed *AccelerationNed       `protobuf:"bytes,3,opt,name=acceleration_ned,json=accelerationNed,proto3" json:"acceleration_ned,omitempty"` // Acceleration
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SetPositionVelocityAccelerationNedRequest) Reset() {
	*x = SetPositionVelocityAccelerationNedRequest{}
	mi := &file_offboard_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPositionVelocityAccelerationNedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPositionVelocityAccelerationNedRequest) ProtoMessage() {}

func (x *SetPositionVelocityAccelerationNedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPositionVelocityAccelerationNedRequest.ProtoReflect.Descriptor instead.
func (*SetPositionVelocityAccelerationNedRequest) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{21}
}

func (x *SetPositionVelocityAccelerationNedRequest) GetPositionNedYaw() *PositionNedYaw {
	if x != nil {
		return x.PositionNedYaw
	}
	return nil
}

func (x *SetPositionVelocityAccelerationNedRequest) GetVelocityNedYaw() *VelocityNedYaw {
	if x != nil {
		return x.VelocityNedYaw
	}
	return nil
}

func (x *SetPositionVelocityAccelerationNedRequest) GetAccelerationNed() *AccelerationNed {
	if x != nil {
		return x.AccelerationNed
	}
	return nil
}

type SetPositionVelocityNedResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OffboardResult *OffboardResult        `protobuf:"bytes,1,opt,name=offboard_result,json=offboardResult,proto3" json:"offboard_result,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetPositionVelocityNedResponse) Reset() {
	*x = SetPositionVelocityNedResponse{}
	mi := &file_offboard_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPositionVelocityNedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPositionVelocityNedResponse) ProtoMessage() {}

func (x *SetPositionVelocityNedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPositionVelocityNedResponse.ProtoReflect.Descriptor instead.
func (*SetPositionVelocityNedResponse) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{22}
}

func (x *SetPositionVelocityNedResponse) GetOffboardResult() *OffboardResult {
	if x != nil {
		return x.OffboardResult
	}
	return nil
}

type SetPositionVelocityAccelerationNedResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OffboardResult *OffboardResult        `protobuf:"bytes,1,opt,name=offboard_result,json=offboardResult,proto3" json:"offboard_result,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetPositionVelocityAccelerationNedResponse) Reset() {
	*x = SetPositionVelocityAccelerationNedResponse{}
	mi := &file_offboard_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPositionVelocityAccelerationNedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPositionVelocityAccelerationNedResponse) ProtoMessage() {}

func (x *SetPositionVelocityAccelerationNedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPositionVelocityAccelerationNedResponse.ProtoReflect.Descriptor instead.
func (*SetPositionVelocityAccelerationNedResponse) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{23}
}

func (x *SetPositionVelocityAccelerationNedResponse) GetOffboardResult() *OffboardResult {
	if x != nil {
		return x.OffboardResult
	}
	return nil
}

type SetAccelerationNedRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AccelerationNed *AccelerationNed       `protobuf:"bytes,1,opt,name=acceleration_ned,json=accelerationNed,proto3" json:"acceleration_ned,omitempty"` // Acceleration
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SetAccelerationNedRequest) Reset() {
	*x = SetAccelerationNedRequest{}
	mi := &file_offboard_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAccelerationNedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccelerationNedRequest) ProtoMessage() {}

func (x *SetAccelerationNedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccelerationNedRequest.ProtoReflect.Descriptor instead.
func (*SetAccelerationNedRequest) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{24}
}

func (x *SetAccelerationNedRequest) GetAccelerationNed() *AccelerationNed {
	if x != nil {
		return x.AccelerationNed
	}
	return nil
}

type SetAccelerationNedResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OffboardResult *OffboardResult        `protobuf:"bytes,1,opt,name=offboard_result,json=offboardResult,proto3" json:"offboard_result,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetAccelerationNedResponse) Reset() {
	*x = SetAccelerationNedResponse{}
	mi := &file_offboard_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAccelerationNedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccelerationNedResponse) ProtoMessage() {}

func (x *SetAccelerationNedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccelerationNedResponse.ProtoReflect.Descriptor instead.
func (*SetAccelerationNedResponse) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{25}
}

func (x *SetAccelerationNedResponse) GetOffboardResult() *OffboardResult {
	if x != nil {
		return x.OffboardResult
	}
	return nil
}

// Type for attitude body angles in NED reference frame (roll, pitch, yaw and thrust)
type Attitude struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RollDeg       float32                `protobuf:"fixed32,1,opt,name=roll_deg,json=rollDeg,proto3" json:"roll_deg,omitempty"`             // Roll angle (in degrees, positive is right side down)
	PitchDeg      float32                `protobuf:"fixed32,2,opt,name=pitch_deg,json=pitchDeg,proto3" json:"pitch_deg,omitempty"`          // Pitch angle (in degrees, positive is nose up)
	YawDeg        float32                `protobuf:"fixed32,3,opt,name=yaw_deg,json=yawDeg,proto3" json:"yaw_deg,omitempty"`                // Yaw angle (in degrees, positive is move nose to the right)
	ThrustValue   float32                `protobuf:"fixed32,4,opt,name=thrust_value,json=thrustValue,proto3" json:"thrust_value,omitempty"` // Thrust (range: 0 to 1)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attitude) Reset() {
	*x = Attitude{}
	mi := &file_offboard_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attitude) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attitude) ProtoMessage() {}

func (x *Attitude) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attitude.ProtoReflect.Descriptor instead.
func (*Attitude) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{26}
}

func (x *Attitude) GetRollDeg() float32 {
	if x != nil {
		return x.RollDeg
	}
	return 0
}

func (x *Attitude) GetPitchDeg() float32 {
	if x != nil {
		return x.PitchDeg
	}
	return 0
}

func (x *Attitude) GetYawDeg() float32 {
	if x != nil {
		return x.YawDeg
	}
	return 0
}

func (x *Attitude) GetThrustValue() float32 {
	if x != nil {
		return x.ThrustValue
	}
	return 0
}

// Eight controls that will be given to the group. Each control is a normalized
// (-1..+1) command value, which will be mapped and scaled through the mixer.
type ActuatorControlGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Controls      []float32              `protobuf:"fixed32,1,rep,packed,name=controls,proto3" json:"controls,omitempty"` // Controls in the group
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActuatorControlGroup) Reset() {
	*x = ActuatorControlGroup{}
	mi := &file_offboard_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActuatorControlGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActuatorControlGroup) ProtoMessage() {}

func (x *ActuatorControlGroup) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActuatorControlGroup.ProtoReflect.Descriptor instead.
func (*ActuatorControlGroup) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{27}
}

func (x *ActuatorControlGroup) GetControls() []float32 {
	if x != nil {
		return x.Controls
	}
	return nil
}

// Type for actuator control.
//
// Control members should be normed to -1..+1 where 0 is neutral position.
// Throttle for single rotation direction motors is 0..1, negative range for reverse direction.
//
// One group support eight controls.
//
// Up to 16 actuator controls can be set. To ignore an output group, set all it controls to NaN.
// If one or more controls in group is not NaN, then all NaN controls will sent as zero.
// The first 8 actuator controls internally map to control group 0, the latter 8 actuator
// controls map to control group 1. Depending on what controls are set (instead of NaN) 1 or 2
// MAVLink messages are actually sent.
//
// In PX4 v1.9.0 Only first four Control Groups are supported
// (https://github.com/PX4/Firmware/blob/v1.9.0/src/modules/mavlink/mavlink_receiver.cpp#L980).
type ActuatorControl struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Groups        []*ActuatorControlGroup `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"` // Control groups.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActuatorControl) Reset() {
	*x = ActuatorControl{}
	mi := &file_offboard_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActuatorControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActuatorControl) ProtoMessage() {}

func (x *ActuatorControl) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActuatorControl.ProtoReflect.Descriptor instead.
func (*ActuatorControl) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{28}
}

func (x *ActuatorControl) GetGroups() []*ActuatorControlGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

// Type for attitude rate commands in body coordinates (roll, pitch, yaw angular rate and thrust)
type AttitudeRate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RollDegS      float32                `protobuf:"fixed32,1,opt,name=roll_deg_s,json=rollDegS,proto3" json:"roll_deg_s,omitempty"`        // Roll angular rate (in degrees/second, positive for clock-wise looking from front)
	PitchDegS     float32                `protobuf:"fixed32,2,opt,name=pitch_deg_s,json=pitchDegS,proto3" json:"pitch_deg_s,omitempty"`     // Pitch angular rate (in degrees/second, positive for head/front moving up)
	YawDegS       float32                `protobuf:"fixed32,3,opt,name=yaw_deg_s,json=yawDegS,proto3" json:"yaw_deg_s,omitempty"`           // Yaw angular rate (in degrees/second, positive for clock-wise looking from above)
	ThrustValue   float32                `protobuf:"fixed32,4,opt,name=thrust_value,json=thrustValue,proto3" json:"thrust_value,omitempty"` // Thrust (range: 0 to 1)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttitudeRate) Reset() {
	*x = AttitudeRate{}
	mi := &file_offboard_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttitudeRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttitudeRate) ProtoMessage() {}

func (x *AttitudeRate) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttitudeRate.ProtoReflect.Descriptor instead.
func (*AttitudeRate) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{29}
}

func (x *AttitudeRate) GetRollDegS() float32 {
	if x != nil {
		return x.RollDegS
	}
	return 0
}

func (x *AttitudeRate) GetPitchDegS() float32 {
	if x != nil {
		return x.PitchDegS
	}
	return 0
}

func (x *AttitudeRate) GetYawDegS() float32 {
	if x != nil {
		return x.YawDegS
	}
	return 0
}

func (x *AttitudeRate) GetThrustValue() float32 {
	if x != nil {
		return x.ThrustValue
	}
	return 0
}

// Type for position commands in NED (North East Down) coordinates and yaw.
type PositionNedYaw struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NorthM        float32                `protobuf:"fixed32,1,opt,name=north_m,json=northM,proto3" json:"north_m,omitempty"` // Position North (in metres)
	EastM         float32                `protobuf:"fixed32,2,opt,name=east_m,json=eastM,proto3" json:"east_m,omitempty"`    // Position East (in metres)
	DownM         float32                `protobuf:"fixed32,3,opt,name=down_m,json=downM,proto3" json:"down_m,omitempty"`    // Position Down (in metres)
	YawDeg        float32                `protobuf:"fixed32,4,opt,name=yaw_deg,json=yawDeg,proto3" json:"yaw_deg,omitempty"` // Yaw in degrees (0 North, positive is clock-wise looking from above)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PositionNedYaw) Reset() {
	*x = PositionNedYaw{}
	mi := &file_offboard_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PositionNedYaw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionNedYaw) ProtoMessage() {}

func (x *PositionNedYaw) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionNedYaw.ProtoReflect.Descriptor instead.
func (*PositionNedYaw) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{30}
}

func (x *PositionNedYaw) GetNorthM() float32 {
	if x != nil {
		return x.NorthM
	}
	return 0
}

func (x *PositionNedYaw) GetEastM() float32 {
	if x != nil {
		return x.EastM
	}
	return 0
}

func (x *PositionNedYaw) GetDownM() float32 {
	if x != nil {
		return x.DownM
	}
	return 0
}

func (x *PositionNedYaw) GetYawDeg() float32 {
	if x != nil {
		return x.YawDeg
	}
	return 0
}

// Type for position commands in Global (Latitude, Longitude, Altitude) coordinates and yaw.
type PositionGlobalYaw struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	LatDeg        float64                        `protobuf:"fixed64,1,opt,name=lat_deg,json=latDeg,proto3" json:"lat_deg,omitempty"`                                                                          // Latitude (in degrees)
	LonDeg        float64                        `protobuf:"fixed64,2,opt,name=lon_deg,json=lonDeg,proto3" json:"lon_deg,omitempty"`                                                                          // Longitude (in degrees)
	AltM          float32                        `protobuf:"fixed32,3,opt,name=alt_m,json=altM,proto3" json:"alt_m,omitempty"`                                                                                // altitude (in metres)
	YawDeg        float32                        `protobuf:"fixed32,4,opt,name=yaw_deg,json=yawDeg,proto3" json:"yaw_deg,omitempty"`                                                                          // Yaw in degrees (0 North, positive is clock-wise looking from above)
	AltitudeType  PositionGlobalYaw_AltitudeType `protobuf:"varint,5,opt,name=altitude_type,json=altitudeType,proto3,enum=mavsdk.rpc.offboard.PositionGlobalYaw_AltitudeType" json:"altitude_type,omitempty"` // altitude type for this position
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PositionGlobalYaw) Reset() {
	*x = PositionGlobalYaw{}
	mi := &file_offboard_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PositionGlobalYaw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionGlobalYaw) ProtoMessage() {}

func (x *PositionGlobalYaw) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionGlobalYaw.ProtoReflect.Descriptor instead.
func (*PositionGlobalYaw) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{31}
}

func (x *PositionGlobalYaw) GetLatDeg() float64 {
	if x != nil {
		return x.LatDeg
	}
	return 0
}

func (x *PositionGlobalYaw) GetLonDeg() float64 {
	if x != nil {
		return x.LonDeg
	}
	return 0
}

func (x *PositionGlobalYaw) GetAltM() float32 {
	if x != nil {
		return x.AltM
	}
	return 0
}

func (x *PositionGlobalYaw) GetYawDeg() float32 {
	if x != nil {
		return x.YawDeg
	}
	return 0
}

func (x *PositionGlobalYaw) GetAltitudeType() PositionGlobalYaw_AltitudeType {
	if x != nil {
		return x.AltitudeType
	}
	return PositionGlobalYaw_ALTITUDE_TYPE_REL_HOME
}

// Type for velocity commands in body coordinates.
type VelocityBodyYawspeed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ForwardMS     float32                `protobuf:"fixed32,1,opt,name=forward_m_s,json=forwardMS,proto3" json:"forward_m_s,omitempty"`          // Velocity forward (in metres/second)
	RightMS       float32                `protobuf:"fixed32,2,opt,name=right_m_s,json=rightMS,proto3" json:"right_m_s,omitempty"`                // Velocity right (in metres/second)
	DownMS        float32                `protobuf:"fixed32,3,opt,name=down_m_s,json=downMS,proto3" json:"down_m_s,omitempty"`                   // Velocity down (in metres/second)
	YawspeedDegS  float32                `protobuf:"fixed32,4,opt,name=yawspeed_deg_s,json=yawspeedDegS,proto3" json:"yawspeed_deg_s,omitempty"` // Yaw angular rate (in degrees/second, positive for clock-wise looking from above)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VelocityBodyYawspeed) Reset() {
	*x = VelocityBodyYawspeed{}
	mi := &file_offboard_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VelocityBodyYawspeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VelocityBodyYawspeed) ProtoMessage() {}

func (x *VelocityBodyYawspeed) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VelocityBodyYawspeed.ProtoReflect.Descriptor instead.
func (*VelocityBodyYawspeed) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{32}
}

func (x *VelocityBodyYawspeed) GetForwardMS() float32 {
	if x != nil {
		return x.ForwardMS
	}
	return 0
}

func (x *VelocityBodyYawspeed) GetRightMS() float32 {
	if x != nil {
		return x.RightMS
	}
	return 0
}

func (x *VelocityBodyYawspeed) GetDownMS() float32 {
	if x != nil {
		return x.DownMS
	}
	return 0
}

func (x *VelocityBodyYawspeed) GetYawspeedDegS() float32 {
	if x != nil {
		return x.YawspeedDegS
	}
	return 0
}

// Type for velocity commands in NED (North East Down) coordinates and yaw.
type VelocityNedYaw struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NorthMS       float32                `protobuf:"fixed32,1,opt,name=north_m_s,json=northMS,proto3" json:"north_m_s,omitempty"` // Velocity North (in metres/second)
	EastMS        float32                `protobuf:"fixed32,2,opt,name=east_m_s,json=eastMS,proto3" json:"east_m_s,omitempty"`    // Velocity East (in metres/second)
	DownMS        float32                `protobuf:"fixed32,3,opt,name=down_m_s,json=downMS,proto3" json:"down_m_s,omitempty"`    // Velocity Down (in metres/second)
	YawDeg        float32                `protobuf:"fixed32,4,opt,name=yaw_deg,json=yawDeg,proto3" json:"yaw_deg,omitempty"`      // Yaw in degrees (0 North, positive is clock-wise looking from above)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VelocityNedYaw) Reset() {
	*x = VelocityNedYaw{}
	mi := &file_offboard_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VelocityNedYaw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VelocityNedYaw) ProtoMessage() {}

func (x *VelocityNedYaw) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VelocityNedYaw.ProtoReflect.Descriptor instead.
func (*VelocityNedYaw) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{33}
}

func (x *VelocityNedYaw) GetNorthMS() float32 {
	if x != nil {
		return x.NorthMS
	}
	return 0
}

func (x *VelocityNedYaw) GetEastMS() float32 {
	if x != nil {
		return x.EastMS
	}
	return 0
}

func (x *VelocityNedYaw) GetDownMS() float32 {
	if x != nil {
		return x.DownMS
	}
	return 0
}

func (x *VelocityNedYaw) GetYawDeg() float32 {
	if x != nil {
		return x.YawDeg
	}
	return 0
}

// Type for acceleration commands in NED (North East Down) coordinates.
type AccelerationNed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NorthMS2      float32                `protobuf:"fixed32,1,opt,name=north_m_s2,json=northMS2,proto3" json:"north_m_s2,omitempty"` // Acceleration North (in metres/second^2)
	EastMS2       float32                `protobuf:"fixed32,2,opt,name=east_m_s2,json=eastMS2,proto3" json:"east_m_s2,omitempty"`    // Acceleration East (in metres/second^2)
	DownMS2       float32                `protobuf:"fixed32,3,opt,name=down_m_s2,json=downMS2,proto3" json:"down_m_s2,omitempty"`    // Acceleration Down (in metres/second^2)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccelerationNed) Reset() {
	*x = AccelerationNed{}
	mi := &file_offboard_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccelerationNed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccelerationNed) ProtoMessage() {}

func (x *AccelerationNed) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccelerationNed.ProtoReflect.Descriptor instead.
func (*AccelerationNed) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{34}
}

func (x *AccelerationNed) GetNorthMS2() float32 {
	if x != nil {
		return x.NorthMS2
	}
	return 0
}

func (x *AccelerationNed) GetEastMS2() float32 {
	if x != nil {
		return x.EastMS2
	}
	return 0
}

func (x *AccelerationNed) GetDownMS2() float32 {
	if x != nil {
		return x.DownMS2
	}
	return 0
}

// Result type.
type OffboardResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        OffboardResult_Result  `protobuf:"varint,1,opt,name=result,proto3,enum=mavsdk.rpc.offboard.OffboardResult_Result" json:"result,omitempty"` // Result enum value
	ResultStr     string                 `protobuf:"bytes,2,opt,name=result_str,json=resultStr,proto3" json:"result_str,omitempty"`                          // Human-readable English string describing the result
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OffboardResult) Reset() {
	*x = OffboardResult{}
	mi := &file_offboard_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OffboardResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffboardResult) ProtoMessage() {}

func (x *OffboardResult) ProtoReflect() protoreflect.Message {
	mi := &file_offboard_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffboardResult.ProtoReflect.Descriptor instead.
func (*OffboardResult) Descriptor() ([]byte, []int) {
	return file_offboard_proto_rawDescGZIP(), []int{35}
}

func (x *OffboardResult) GetResult() OffboardResult_Result {
	if x != nil {
		return x.Result
	}
	return OffboardResult_RESULT_UNKNOWN
}

func (x *OffboardResult) GetResultStr() string {
	if x != nil {
		return x.ResultStr
	}
	return ""
}

var File_offboard_proto protoreflect.FileDescriptor

const file_offboard_proto_rawDesc = "" +
	"\n" +
	"\x0eoffboard.proto\x12\x13mavsdk.rpc.offboard\x1a\x14mavsdk_options.proto\"\x0e\n" +
	"\fStartRequest\"]\n" +
	"\rStartResponse\x12L\n" +
	"\x0foffboard_result\x18\x01 \x01(\v2#.mavsdk.rpc.offboard.OffboardResultR\x0eoffboardResult\"\r\n" +
	"\vStopRequest\"\\\n" +
	"\fStopResponse\x12L\n" +
	"\x0foffboard_result\x18\x01 \x01(\v2#.mavsdk.rpc.offboard.OffboardResultR\x0eoffboardResult\"\x11\n" +
	"\x0fIsActiveRequest\"/\n" +
	"\x10IsActiveResponse\x12\x1b\n" +
	"\tis_active\x18\x01 \x01(\bR\bisActive\"O\n" +
	"\x12SetAttitudeRequest\x129\n" +
	"\battitude\x18\x01 \x01(\v2\x1d.mavsdk.rpc.offboard.AttitudeR\battitude\"c\n" +
	"\x13SetAttitudeResponse\x12L\n" +
	"\x0foffboard_result\x18\x01 \x01(\v2#.mavsdk.rpc.offboard.OffboardResultR\x0eoffboardResult\"l\n" +
	"\x19SetActuatorControlRequest\x12O\n" +
	"\x10actuator_control\x18\x01 \x01(\v2$.mavsdk.rpc.offboard.ActuatorControlR\x0factuatorControl\"j\n" +
	"\x1aSetActuatorControlResponse\x12L\n" +
	"\x0foffboard_result\x18\x01 \x01(\v2#.mavsdk.rpc.offboard.OffboardResultR\x0eoffboardResult\"`\n" +
	"\x16SetAttitudeRateRequest\x12F\n" +
	"\rattitude_rate\x18\x01 \x01(\v2!.mavsdk.rpc.offboard.AttitudeRateR\fattitudeRate\"g\n" +
	"\x17SetAttitudeRateResponse\x12L\n" +
	"\x0foffboard_result\x18\x01 \x01(\v2#.mavsdk.rpc.offboard.OffboardResultR\x0eoffboardResult\"f\n" +
	"\x15SetPositionNedRequest\x12M\n" +
	"\x10position_ned_yaw\x18\x01 \x01(\v2#.mavsdk.rpc.offboard.PositionNedYawR\x0epositionNedYaw\"f\n" +
	"\x16SetPositionNedResponse\x12L\n" +
	"\x0foffboard_result\x18\x01 \x01(\v2#.mavsdk.rpc.offboard.OffboardResultR\x0eoffboardResult\"r\n" +
	"\x18SetPositionGlobalRequest\x12V\n" +
	"\x13position_global_yaw\x18\x01 \x01(\v2&.mavsdk.rpc.offboard.PositionGlobalYawR\x11positionGlobalYaw\"i\n" +
	"\x19SetPositionGlobalResponse\x12L\n" +
	"\x0foffboard_result\x18\x01 \x01(\v2#.mavsdk.rpc.offboard.OffboardResultR\x0eoffboardResult\"y\n" +
	"\x16SetVelocityBodyRequest\x12_\n" +
	"\x16velocity_body_yawspeed\x18\x01 \x01(\v2).mavsdk.rpc.offboard.VelocityBodyYawspeedR\x14velocityBodyYawspeed\"g\n" +
	"\x17SetVelocityBodyResponse\x12L\n" +
	"\x0foffboard_result\x18\x01 \x01(\v2#.mavsdk.rpc.offboard.OffboardResultR\x0eoffboardResult\"f\n" +
	"\x15SetVelocityNedRequest\x12M\n" +
	"\x10velocity_ned_yaw\x18\x01 \x01(\v2#.mavsdk.rpc.offboard.VelocityNedYawR\x0evelocityNedYaw\"f\n" +
	"\x16SetVelocityNedResponse\x12L\n" +
	"\x0foffboard_result\x18\x01 \x01(\v2#.mavsdk.rpc.offboard.OffboardResultR\x0eoffboardResult\"\xbd\x01\n" +
	"\x1dSetPositionVelocityNedRequest\x12M\n" +
	"\x10position_ned_yaw\x18\x01 \x01(\v2#.mavsdk.rpc.offboard.PositionNedYawR\x0epositionNedYaw\x12M\n" +
	"\x10velocity_ned_yaw\x18\x02 \x01(\v2#.mavsdk.rpc.offboard.VelocityNedYawR\x0evelocityNedYaw\"\x9a\x02\n" +
	")SetPositionVelocityAccelerationNedRequest\x12M\n" +
	"\x10position_ned_yaw\x18\x01 \x01(\v2#.mavsdk.rpc.offboard.PositionNedYawR\x0epositionNedYaw\x12M\n" +
	"\x10velocity_ned_yaw\x18\x02 \x01(\v2#.mavsdk.rpc.offboard.VelocityNedYawR\x0evelocityNedYaw\x12O\n" +
	"\x10acceleration_ned\x18\x03 \x01(\v2$.mavsdk.rpc.offboard.AccelerationNedR\x0faccelerationNed\"n\n" +
	"\x1eSetPositionVelocityNedResponse\x12L\n" +
	"\x0foffboard_result\x18\x01 \x01(\v2#.mavsdk.rpc.offboard.OffboardResultR\x0eoffboardResult\"z\n" +
	"*SetPositionVelocityAccelerationNedResponse\x12L\n" +
	"\x0foffboard_result\x18\x01 \x01(\v2#.mavsdk.rpc.offboard.OffboardResultR\x0eoffboardResult\"l\n" +
	"\x19SetAccelerationNedRequest\x12O\n" +
	"\x10acceleration_ned\x18\x01 \x01(\v2$.mavsdk.rpc.offboard.AccelerationNedR\x0faccelerationNed\"j\n" +
	"\x1aSetAccelerationNedResponse\x12L\n" +
	"\x0foffboard_result\x18\x01 \x01(\v2#.mavsdk.rpc.offboard.OffboardResultR\x0eoffboardResult\"~\n" +
	"\bAttitude\x12\x19\n" +
	"\broll_deg\x18\x01 \x01(\x02R\arollDeg\x12\x1b\n" +
	"\tpitch_deg\x18\x02 \x01(\x02R\bpitchDeg\x12\x17\n" +
	"\ayaw_deg\x18\x03 \x01(\x02R\x06yawDeg\x12!\n" +
	"\fthrust_value\x18\x04 \x01(\x02R\vthrustValue\"2\n" +
	"\x14ActuatorControlGroup\x12\x1a\n" +
	"\bcontrols\x18\x01 \x03(\x02R\bcontrols\"T\n" +
	"\x0fActuatorControl\x12A\n" +
	"\x06groups\x18\x01 \x03(\v2).mavsdk.rpc.offboard.ActuatorControlGroupR\x06groups\"\x8b\x01\n" +
	"\fAttitudeRate\x12\x1c\n" +
	"\n" +
	"roll_deg_s\x18\x01 \x01(\x02R\brollDegS\x12\x1e\n" +
	"\vpitch_deg_s\x18\x02 \x01(\x02R\tpitchDegS\x12\x1a\n" +
	"\tyaw_deg_s\x18\x03 \x01(\x02R\ayawDegS\x12!\n" +
	"\fthrust_value\x18\x04 \x01(\x02R\vthrustValue\"p\n" +
	"\x0ePositionNedYaw\x12\x17\n" +
	"\anorth_m\x18\x01 \x01(\x02R\x06northM\x12\x15\n" +
	"\x06east_m\x18\x02 \x01(\x02R\x05eastM\x12\x15\n" +
	"\x06down_m\x18\x03 \x01(\x02R\x05downM\x12\x17\n" +
	"\ayaw_deg\x18\x04 \x01(\x02R\x06yawDeg\"\xa8\x02\n" +
	"\x11PositionGlobalYaw\x12\x17\n" +
	"\alat_deg\x18\x01 \x01(\x01R\x06latDeg\x12\x17\n" +
	"\alon_deg\x18\x02 \x01(\x01R\x06lonDeg\x12\x13\n" +
	"\x05alt_m\x18\x03 \x01(\x02R\x04altM\x12\x17\n" +
	"\ayaw_deg\x18\x04 \x01(\x02R\x06yawDeg\x12X\n" +
	"\raltitude_type\x18\x05 \x01(\x0e23.mavsdk.rpc.offboard.PositionGlobalYaw.AltitudeTypeR\faltitudeType\"Y\n" +
	"\fAltitudeType\x12\x1a\n" +
	"\x16ALTITUDE_TYPE_REL_HOME\x10\x00\x12\x16\n" +
	"\x12ALTITUDE_TYPE_AMSL\x10\x01\x12\x15\n" +
	"\x11ALTITUDE_TYPE_AGL\x10\x02\"\x92\x01\n" +
	"\x14VelocityBodyYawspeed\x12\x1e\n" +
	"\vforward_m_s\x18\x01 \x01(\x02R\tforwardMS\x12\x1a\n" +
	"\tright_m_s\x18\x02 \x01(\x02R\arightMS\x12\x18\n" +
	"\bdown_m_s\x18\x03 \x01(\x02R\x06downMS\x12$\n" +
	"\x0eyawspeed_deg_s\x18\x04 \x01(\x02R\fyawspeedDegS\"y\n" +
	"\x0eVelocityNedYaw\x12\x1a\n" +
	"\tnorth_m_s\x18\x01 \x01(\x02R\anorthMS\x12\x18\n" +
	"\beast_m_s\x18\x02 \x01(\x02R\x06eastMS\x12\x18\n" +
	"\bdown_m_s\x18\x03 \x01(\x02R\x06downMS\x12\x17\n" +
	"\ayaw_deg\x18\x04 \x01(\x02R\x06yawDeg\"g\n" +
	"\x0fAccelerationNed\x12\x1c\n" +
	"\n" +
	"north_m_s2\x18\x01 \x01(\x02R\bnorthMS2\x12\x1a\n" +
	"\teast_m_s2\x18\x02 \x01(\x02R\aeastMS2\x12\x1a\n" +
	"\tdown_m_s2\x18\x03 \x01(\x02R\adownMS2\"\xc8\x02\n" +
	"\x0eOffboardResult\x12B\n" +
	"\x06result\x18\x01 \x01(\x0e2*.mavsdk.rpc.offboard.OffboardResult.ResultR\x06result\x12\x1d\n" +
	"\n" +
	"result_str\x18\x02 \x01(\tR\tresultStr\"\xd2\x01\n" +
	"\x06Result\x12\x12\n" +
	"\x0eRESULT_UNKNOWN\x10\x00\x12\x12\n" +
	"\x0eRESULT_SUCCESS\x10\x01\x12\x14\n" +
	"\x10RESULT_NO_SYSTEM\x10\x02\x12\x1b\n" +
	"\x17RESULT_CONNECTION_ERROR\x10\x03\x12\x0f\n" +
	"\vRESULT_BUSY\x10\x04\x12\x19\n" +
	"\x15RESULT_COMMAND_DENIED\x10\x05\x12\x12\n" +
	"\x0eRESULT_TIMEOUT\x10\x06\x12\x1a\n" +
	"\x16RESULT_NO_SETPOINT_SET\x10\a\x12\x11\n" +
	"\rRESULT_FAILED\x10\b2\xef\v\n" +
	"\x0fOffboardService\x12P\n" +
	"\x05Start\x12!.mavsdk.rpc.offboard.StartRequest\x1a\".mavsdk.rpc.offboard.StartResponse\"\x00\x12M\n" +
	"\x04Stop\x12 .mavsdk.rpc.offboard.StopRequest\x1a!.mavsdk.rpc.offboard.StopResponse\"\x00\x12]\n" +
	"\bIsActive\x12$.mavsdk.rpc.offboard.IsActiveRequest\x1a%.mavsdk.rpc.offboard.IsActiveResponse\"\x04\x80\xb5\x18\x01\x12f\n" +
	"\vSetAttitude\x12'.mavsdk.rpc.offboard.SetAttitudeRequest\x1a(.mavsdk.rpc.offboard.SetAttitudeResponse\"\x04\x80\xb5\x18\x01\x12{\n" +
	"\x12SetActuatorControl\x12..mavsdk.rpc.offboard.SetActuatorControlRequest\x1a/.mavsdk.rpc.offboard.SetActuatorControlResponse\"\x04\x80\xb5\x18\x01\x12r\n" +
	"\x0fSetAttitudeRate\x12+.mavsdk.rpc.offboard.SetAttitudeRateRequest\x1a,.mavsdk.rpc.offboard.SetAttitudeRateResponse\"\x04\x80\xb5\x18\x01\x12o\n" +
	"\x0eSetPositionNed\x12*.mavsdk.rpc.offboard.SetPositionNedRequest\x1a+.mavsdk.rpc.offboard.SetPositionNedResponse\"\x04\x80\xb5\x18\x01\x12x\n" +
	"\x11SetPositionGlobal\x12-.mavsdk.rpc.offboard.SetPositionGlobalRequest\x1a..mavsdk.rpc.offboard.SetPositionGlobalResponse\"\x04\x80\xb5\x18\x01\x12r\n" +
	"\x0fSetVelocityBody\x12+.mavsdk.rpc.offboard.SetVelocityBodyRequest\x1a,.mavsdk.rpc.offboard.SetVelocityBodyResponse\"\x04\x80\xb5\x18\x01\x12o\n" +
	"\x0eSetVelocityNed\x12*.mavsdk.rpc.offboard.SetVelocityNedRequest\x1a+.mavsdk.rpc.offboard.SetVelocityNedResponse\"\x04\x80\xb5\x18\x01\x12\x87\x01\n" +
	"\x16SetPositionVelocityNed\x122.mavsdk.rpc.offboard.SetPositionVelocityNedRequest\x1a3.mavsdk.rpc.offboard.SetPositionVelocityNedResponse\"\x04\x80\xb5\x18\x01\x12\xab\x01\n" +
	"\"SetPositionVelocityAccelerationNed\x12>.mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedRequest\x1a?.mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedResponse\"\x04\x80\xb5\x18\x01\x12{\n" +
	"\x12SetAccelerationNed\x12..mavsdk.rpc.offboard.SetAccelerationNedRequest\x1a/.mavsdk.rpc.offboard.SetAccelerationNedResponse\"\x04\x80\xb5\x18\x01B\x1bB\rOffboardProtoZ\n" +
	".;offboardb\x06proto3"

var (
	file_offboard_proto_rawDescOnce sync.Once
	file_offboard_proto_rawDescData []byte
)

func file_offboard_proto_rawDescGZIP() []byte {
	file_offboard_proto_rawDescOnce.Do(func() {
		file_offboard_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_offboard_proto_rawDesc), len(file_offboard_proto_rawDesc)))
	})
	return file_offboard_proto_rawDescData
}

var file_offboard_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_offboard_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_offboard_proto_goTypes = []any{
	(PositionGlobalYaw_AltitudeType)(0),                // 0: mavsdk.rpc.offboard.PositionGlobalYaw.AltitudeType
	(OffboardResult_Result)(0),                         // 1: mavsdk.rpc.offboard.OffboardResult.Result
	(*StartRequest)(nil),                               // 2: mavsdk.rpc.offboard.StartRequest
	(*StartResponse)(nil),                              // 3: mavsdk.rpc.offboard.StartResponse
	(*StopRequest)(nil),                                // 4: mavsdk.rpc.offboard.StopRequest
	(*StopResponse)(nil),                               // 5: mavsdk.rpc.offboard.StopResponse
	(*IsActiveRequest)(nil),                            // 6: mavsdk.rpc.offboard.IsActiveRequest
	(*IsActiveResponse)(nil),                           // 7: mavsdk.rpc.offboard.IsActiveResponse
	(*SetAttitudeRequest)(nil),                         // 8: mavsdk.rpc.offboard.SetAttitudeRequest
	(*SetAttitudeResponse)(nil),                        // 9: mavsdk.rpc.offboard.SetAttitudeResponse
	(*SetActuatorControlRequest)(nil),                  // 10: mavsdk.rpc.offboard.SetActuatorControlRequest
	(*SetActuatorControlResponse)(nil),                 // 11: mavsdk.rpc.offboard.SetActuatorControlResponse
	(*SetAttitudeRateRequest)(nil),                     // 12: mavsdk.rpc.offboard.SetAttitudeRateRequest
	(*SetAttitudeRateResponse)(nil),                    // 13: mavsdk.rpc.offboard.SetAttitudeRateResponse
	(*SetPositionNedRequest)(nil),                      // 14: mavsdk.rpc.offboard.SetPositionNedRequest
	(*SetPositionNedResponse)(nil),                     // 15: mavsdk.rpc.offboard.SetPositionNedResponse
	(*SetPositionGlobalRequest)(nil),                   // 16: mavsdk.rpc.offboard.SetPositionGlobalRequest
	(*SetPositionGlobalResponse)(nil),                  // 17: mavsdk.rpc.offboard.SetPositionGlobalResponse
	(*SetVelocityBodyRequest)(nil),                     // 18: mavsdk.rpc.offboard.SetVelocityBodyRequest
	(*SetVelocityBodyResponse)(nil),                    // 19: mavsdk.rpc.offboard.SetVelocityBodyResponse
	(*SetVelocityNedRequest)(nil),                      // 20: mavsdk.rpc.offboard.SetVelocityNedRequest
	(*SetVelocityNedResponse)(nil),                     // 21: mavsdk.rpc.offboard.SetVelocityNedResponse
	(*SetPositionVelocityNedRequest)(nil),              // 22: mavsdk.rpc.offboard.SetPositionVelocityNedRequest
	(*SetPositionVelocityAccelerationNedRequest)(nil),  // 23: mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedRequest
	(*SetPositionVelocityNedResponse)(nil),             // 24: mavsdk.rpc.offboard.SetPositionVelocityNedResponse
	(*SetPositionVelocityAccelerationNedResponse)(nil), // 25: mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedResponse
	(*SetAccelerationNedRequest)(nil),                  // 26: mavsdk.rpc.offboard.SetAccelerationNedRequest
	(*SetAccelerationNedResponse)(nil),                 // 27: mavsdk.rpc.offboard.SetAccelerationNedResponse
	(*Attitude)(nil),                                   // 28: mavsdk.rpc.offboard.Attitude
	(*ActuatorControlGroup)(nil),                       // 29: mavsdk.rpc.offboard.ActuatorControlGroup
	(*ActuatorControl)(nil),                            // 30: mavsdk.rpc.offboard.ActuatorControl
	(*AttitudeRate)(nil),                               // 31: mavsdk.rpc.offboard.AttitudeRate
	(*PositionNedYaw)(nil),                             // 32: mavsdk.rpc.offboard.PositionNedYaw
	(*PositionGlobalYaw)(nil),                          // 33: mavsdk.rpc.offboard.PositionGlobalYaw
	(*VelocityBodyYawspeed)(nil),                       // 34: mavsdk.rpc.offboard.VelocityBodyYawspeed
	(*VelocityNedYaw)(nil),                             // 35: mavsdk.rpc.offboard.VelocityNedYaw
	(*AccelerationNed)(nil),                            // 36: mavsdk.rpc.offboard.AccelerationNed
	(*OffboardResult)(nil),                             // 37: mavsdk.rpc.offboard.OffboardResult
}
var file_offboard_proto_depIdxs = []int32{
	37, // 0: mavsdk.rpc.offboard.StartResponse.offboard_result:type_name -> mavsdk.rpc.offboard.OffboardResult
	37, // 1: mavsdk.rpc.offboard.StopResponse.offboard_result:type_name -> mavsdk.rpc.offboard.OffboardResult
	28, // 2: mavsdk.rpc.offboard.SetAttitudeRequest.attitude:type_name -> mavsdk.rpc.offboard.Attitude
	37, // 3: mavsdk.rpc.offboard.SetAttitudeResponse.offboard_result:type_name -> mavsdk.rpc.offboard.OffboardResult
	30, // 4: mavsdk.rpc.offboard.SetActuatorControlRequest.actuator_control:type_name -> mavsdk.rpc.offboard.ActuatorControl
	37, // 5: mavsdk.rpc.offboard.SetActuatorControlResponse.offboard_result:type_name -> mavsdk.rpc.offboard.OffboardResult
	31, // 6: mavsdk.rpc.offboard.SetAttitudeRateRequest.attitude_rate:type_name -> mavsdk.rpc.offboard.AttitudeRate
	37, // 7: mavsdk.rpc.offboard.SetAttitudeRateResponse.offboard_result:type_name -> mavsdk.rpc.offboard.OffboardResult
	32, // 8: mavsdk.rpc.offboard.SetPositionNedRequest.position_ned_yaw:type_name -> mavsdk.rpc.offboard.PositionNedYaw
	37, // 9: mavsdk.rpc.offboard.SetPositionNedResponse.offboard_result:type_name -> mavsdk.rpc.offboard.OffboardResult
	33, // 10: mavsdk.rpc.offboard.SetPositionGlobalRequest.position_global_yaw:type_name -> mavsdk.rpc.offboard.PositionGlobalYaw
	37, // 11: mavsdk.rpc.offboard.SetPositionGlobalResponse.offboard_result:type_name -> mavsdk.rpc.offboard.OffboardResult
	34, // 12: mavsdk.rpc.offboard.SetVelocityBodyRequest.velocity_body_yawspeed:type_name -> mavsdk.rpc.offboard.VelocityBodyYawspeed
	37, // 13: mavsdk.rpc.offboard.SetVelocityBodyResponse.offboard_result:type_name -> mavsdk.rpc.offboard.OffboardResult
	35, // 14: mavsdk.rpc.offboard.SetVelocityNedRequest.velocity_ned_yaw:type_name -> mavsdk.rpc.offboard.VelocityNedYaw
	37, // 15: mavsdk.rpc.offboard.SetVelocityNedResponse.offboard_result:type_name -> mavsdk.rpc.offboard.OffboardResult
	32, // 16: mavsdk.rpc.offboard.SetPositionVelocityNedRequest.position_ned_yaw:type_name -> mavsdk.rpc.offboard.PositionNedYaw
	35, // 17: mavsdk.rpc.offboard.SetPositionVelocityNedRequest.velocity_ned_yaw:type_name -> mavsdk.rpc.offboard.VelocityNedYaw
	32, // 18: mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedRequest.position_ned_yaw:type_name -> mavsdk.rpc.offboard.PositionNedYaw
	35, // 19: mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedRequest.velocity_ned_yaw:type_name -> mavsdk.rpc.offboard.VelocityNedYaw
	36, // 20: mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedRequest.acceleration_ned:type_name -> mavsdk.rpc.offboard.AccelerationNed
	37, // 21: mavsdk.rpc.offboard.SetPositionVelocityNedResponse.offboard_result:type_name -> mavsdk.rpc.offboard.OffboardResult
	37, // 22: mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedResponse.offboard_result:type_name -> mavsdk.rpc.offboard.OffboardResult
	36, // 23: mavsdk.rpc.offboard.SetAccelerationNedRequest.acceleration_ned:type_name -> mavsdk.rpc.offboard.AccelerationNed
	37, // 24: mavsdk.rpc.offboard.SetAccelerationNedResponse.offboard_result:type_name -> mavsdk.rpc.offboard.OffboardResult
	29, // 25: mavsdk.rpc.offboard.ActuatorControl.groups:type_name -> mavsdk.rpc.offboard.ActuatorControlGroup
	0,  // 26: mavsdk.rpc.offboard.PositionGlobalYaw.altitude_type:type_name -> mavsdk.rpc.offboard.PositionGlobalYaw.AltitudeType
	1,  // 27: mavsdk.rpc.offboard.OffboardResult.result:type_name -> mavsdk.rpc.offboard.OffboardResult.Result
	2,  // 28: mavsdk.rpc.offboard.OffboardService.Start:input_type -> mavsdk.rpc.offboard.StartRequest
	4,  // 29: mavsdk.rpc.offboard.OffboardService.Stop:input_type -> mavsdk.rpc.offboard.StopRequest
	6,  // 30: mavsdk.rpc.offboard.OffboardService.IsActive:input_type -> mavsdk.rpc.offboard.IsActiveRequest
	8,  // 31: mavsdk.rpc.offboard.OffboardService.SetAttitude:input_type -> mavsdk.rpc.offboard.SetAttitudeRequest
	10, // 32: mavsdk.rpc.offboard.OffboardService.SetActuatorControl:input_type -> mavsdk.rpc.offboard.SetActuatorControlRequest
	12, // 33: mavsdk.rpc.offboard.OffboardService.SetAttitudeRate:input_type -> mavsdk.rpc.offboard.SetAttitudeRateRequest
	14, // 34: mavsdk.rpc.offboard.OffboardService.SetPositionNed:input_type -> mavsdk.rpc.offboard.SetPositionNedRequest
	16, // 35: mavsdk.rpc.offboard.OffboardService.SetPositionGlobal:input_type -> mavsdk.rpc.offboard.SetPositionGlobalRequest
	18, // 36: mavsdk.rpc.offboard.OffboardService.SetVelocityBody:input_type -> mavsdk.rpc.offboard.SetVelocityBodyRequest
	20, // 37: mavsdk.rpc.offboard.OffboardService.SetVelocityNed:input_type -> mavsdk.rpc.offboard.SetVelocityNedRequest
	22, // 38: mavsdk.rpc.offboard.OffboardService.SetPositionVelocityNed:input_type -> mavsdk.rpc.offboard.SetPositionVelocityNedRequest
	23, // 39: mavsdk.rpc.offboard.OffboardService.SetPositionVelocityAccelerationNed:input_type -> mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedRequest
	26, // 40: mavsdk.rpc.offboard.OffboardService.SetAccelerationNed:input_type -> mavsdk.rpc.offboard.SetAccelerationNedRequest
	3,  // 41: mavsdk.rpc.offboard.OffboardService.Start:output_type -> mavsdk.rpc.offboard.StartResponse
	5,  // 42: mavsdk.rpc.offboard.OffboardService.Stop:output_type -> mavsdk.rpc.offboard.StopResponse
	7,  // 43: mavsdk.rpc.offboard.OffboardService.IsActive:output_type -> mavsdk.rpc.offboard.IsActiveResponse
	9,  // 44: mavsdk.rpc.offboard.OffboardService.SetAttitude:output_type -> mavsdk.rpc.offboard.SetAttitudeResponse
	11, // 45: mavsdk.rpc.offboard.OffboardService.SetActuatorControl:output_type -> mavsdk.rpc.offboard.SetActuatorControlResponse
	13, // 46: mavsdk.rpc.offboard.OffboardService.SetAttitudeRate:output_type -> mavsdk.rpc.offboard.SetAttitudeRateResponse
	15, // 47: mavsdk.rpc.offboard.OffboardService.SetPositionNed:output_type -> mavsdk.rpc.offboard.SetPositionNedResponse
	17, // 48: mavsdk.rpc.offboard.OffboardService.SetPositionGlobal:output_type -> mavsdk.rpc.offboard.SetPositionGlobalResponse
	19, // 49: mavsdk.rpc.offboard.OffboardService.SetVelocityBody:output_type -> mavsdk.rpc.offboard.SetVelocityBodyResponse
	21, // 50: mavsdk.rpc.offboard.OffboardService.SetVelocityNed:output_type -> mavsdk.rpc.offboard.SetVelocityNedResponse
	24, // 51: mavsdk.rpc.offboard.OffboardService.SetPositionVelocityNed:output_type -> mavsdk.rpc.offboard.SetPositionVelocityNedResponse
	25, // 52: mavsdk.rpc.offboard.OffboardService.SetPositionVelocityAccelerationNed:output_type -> mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedResponse
	27, // 53: mavsdk.rpc.offboard.OffboardService.SetAccelerationNed:output_type -> mavsdk.rpc.offboard.SetAccelerationNedResponse
	41, // [41:54] is the sub-list for method output_type
	28, // [28:41] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_offboard_proto_init() }
func file_offboard_proto_init() {
	if File_offboard_proto != nil {
		return
	}
	file_mavsdk_options_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_offboard_proto_rawDesc), len(file_offboard_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_offboard_proto_goTypes,
		DependencyIndexes: file_offboard_proto_depIdxs,
		EnumInfos:         file_offboard_proto_enumTypes,
		MessageInfos:      file_offboard_proto_msgTypes,
	}.Build()
	File_offboard_proto = out.File
	file_offboard_proto_goTypes = nil
	file_offboard_proto_depIdxs = nil
}
