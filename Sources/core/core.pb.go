// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: core.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscribeConnectionStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeConnectionStateRequest) Reset() {
	*x = SubscribeConnectionStateRequest{}
	mi := &file_core_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeConnectionStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeConnectionStateRequest) ProtoMessage() {}

func (x *SubscribeConnectionStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeConnectionStateRequest.ProtoReflect.Descriptor instead.
func (*SubscribeConnectionStateRequest) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{0}
}

type ConnectionStateResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConnectionState *ConnectionState       `protobuf:"bytes,1,opt,name=connection_state,json=connectionState,proto3" json:"connection_state,omitempty"` // Connection state
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ConnectionStateResponse) Reset() {
	*x = ConnectionStateResponse{}
	mi := &file_core_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionStateResponse) ProtoMessage() {}

func (x *ConnectionStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionStateResponse.ProtoReflect.Descriptor instead.
func (*ConnectionStateResponse) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectionStateResponse) GetConnectionState() *ConnectionState {
	if x != nil {
		return x.ConnectionState
	}
	return nil
}

type SetMavlinkTimeoutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TimeoutS      float64                `protobuf:"fixed64,1,opt,name=timeout_s,json=timeoutS,proto3" json:"timeout_s,omitempty"` // Timeout in seconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetMavlinkTimeoutRequest) Reset() {
	*x = SetMavlinkTimeoutRequest{}
	mi := &file_core_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetMavlinkTimeoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMavlinkTimeoutRequest) ProtoMessage() {}

func (x *SetMavlinkTimeoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMavlinkTimeoutRequest.ProtoReflect.Descriptor instead.
func (*SetMavlinkTimeoutRequest) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{2}
}

func (x *SetMavlinkTimeoutRequest) GetTimeoutS() float64 {
	if x != nil {
		return x.TimeoutS
	}
	return 0
}

type SetMavlinkTimeoutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetMavlinkTimeoutResponse) Reset() {
	*x = SetMavlinkTimeoutResponse{}
	mi := &file_core_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetMavlinkTimeoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMavlinkTimeoutResponse) ProtoMessage() {}

func (x *SetMavlinkTimeoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMavlinkTimeoutResponse.ProtoReflect.Descriptor instead.
func (*SetMavlinkTimeoutResponse) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{3}
}

// Connection state type.
type ConnectionState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsConnected   bool                   `protobuf:"varint,2,opt,name=is_connected,json=isConnected,proto3" json:"is_connected,omitempty"` // Whether the vehicle got connected or disconnected
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionState) Reset() {
	*x = ConnectionState{}
	mi := &file_core_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionState) ProtoMessage() {}

func (x *ConnectionState) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionState.ProtoReflect.Descriptor instead.
func (*ConnectionState) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{4}
}

func (x *ConnectionState) GetIsConnected() bool {
	if x != nil {
		return x.IsConnected
	}
	return false
}

var File_core_proto protoreflect.FileDescriptor

const file_core_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"core.proto\x12\x0fmavsdk.rpc.core\"!\n" +
	"\x1fSubscribeConnectionStateRequest\"f\n" +
	"\x17ConnectionStateResponse\x12K\n" +
	"\x10connection_state\x18\x01 \x01(\v2 .mavsdk.rpc.core.ConnectionStateR\x0fconnectionState\"7\n" +
	"\x18SetMavlinkTimeoutRequest\x12\x1b\n" +
	"\ttimeout_s\x18\x01 \x01(\x01R\btimeoutS\"\x1b\n" +
	"\x19SetMavlinkTimeoutResponse\"4\n" +
	"\x0fConnectionState\x12!\n" +
	"\fis_connected\x18\x02 \x01(\bR\visConnected2\xf7\x01\n" +
	"\vCoreService\x12z\n" +
	"\x18SubscribeConnectionState\x120.mavsdk.rpc.core.SubscribeConnectionStateRequest\x1a(.mavsdk.rpc.core.ConnectionStateResponse\"\x000\x01\x12l\n" +
	"\x11SetMavlinkTimeout\x12).mavsdk.rpc.core.SetMavlinkTimeoutRequest\x1a*.mavsdk.rpc.core.SetMavlinkTimeoutResponse\"\x00B\x13B\tCoreProtoZ\x06.;coreb\x06proto3"

var (
	file_core_proto_rawDescOnce sync.Once
	file_core_proto_rawDescData []byte
)

func file_core_proto_rawDescGZIP() []byte {
	file_core_proto_rawDescOnce.Do(func() {
		file_core_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_core_proto_rawDesc), len(file_core_proto_rawDesc)))
	})
	return file_core_proto_rawDescData
}

var file_core_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_core_proto_goTypes = []any{
	(*SubscribeConnectionStateRequest)(nil), // 0: mavsdk.rpc.core.SubscribeConnectionStateRequest
	(*ConnectionStateResponse)(nil),         // 1: mavsdk.rpc.core.ConnectionStateResponse
	(*SetMavlinkTimeoutRequest)(nil),        // 2: mavsdk.rpc.core.SetMavlinkTimeoutRequest
	(*SetMavlinkTimeoutResponse)(nil),       // 3: mavsdk.rpc.core.SetMavlinkTimeoutResponse
	(*ConnectionState)(nil),                 // 4: mavsdk.rpc.core.ConnectionState
}
var file_core_proto_depIdxs = []int32{
	4, // 0: mavsdk.rpc.core.ConnectionStateResponse.connection_state:type_name -> mavsdk.rpc.core.ConnectionState
	0, // 1: mavsdk.rpc.core.CoreService.SubscribeConnectionState:input_type -> mavsdk.rpc.core.SubscribeConnectionStateRequest
	2, // 2: mavsdk.rpc.core.CoreService.SetMavlinkTimeout:input_type -> mavsdk.rpc.core.SetMavlinkTimeoutRequest
	1, // 3: mavsdk.rpc.core.CoreService.SubscribeConnectionState:output_type -> mavsdk.rpc.core.ConnectionStateResponse
	3, // 4: mavsdk.rpc.core.CoreService.SetMavlinkTimeout:output_type -> mavsdk.rpc.core.SetMavlinkTimeoutResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_core_proto_init() }
func file_core_proto_init() {
	if File_core_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_core_proto_rawDesc), len(file_core_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_core_proto_goTypes,
		DependencyIndexes: file_core_proto_depIdxs,
		MessageInfos:      file_core_proto_msgTypes,
	}.Build()
	File_core_proto = out.File
	file_core_proto_goTypes = nil
	file_core_proto_depIdxs = nil
}
