// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: mission_raw.proto

package mission_raw

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Possible results returned for action requests.
type MissionRawResult_Result int32

const (
	MissionRawResult_RESULT_UNKNOWN                     MissionRawResult_Result = 0  // Unknown result
	MissionRawResult_RESULT_SUCCESS                     MissionRawResult_Result = 1  // Request succeeded
	MissionRawResult_RESULT_ERROR                       MissionRawResult_Result = 2  // Error
	MissionRawResult_RESULT_TOO_MANY_MISSION_ITEMS      MissionRawResult_Result = 3  // Too many mission items in the mission
	MissionRawResult_RESULT_BUSY                        MissionRawResult_Result = 4  // Vehicle is busy
	MissionRawResult_RESULT_TIMEOUT                     MissionRawResult_Result = 5  // Request timed out
	MissionRawResult_RESULT_INVALID_ARGUMENT            MissionRawResult_Result = 6  // Invalid argument
	MissionRawResult_RESULT_UNSUPPORTED                 MissionRawResult_Result = 7  // Mission downloaded from the system is not supported
	MissionRawResult_RESULT_NO_MISSION_AVAILABLE        MissionRawResult_Result = 8  // No mission available on the system
	MissionRawResult_RESULT_TRANSFER_CANCELLED          MissionRawResult_Result = 9  // Mission transfer (upload or download) has been cancelled
	MissionRawResult_RESULT_FAILED_TO_OPEN_QGC_PLAN     MissionRawResult_Result = 10 // Failed to open the QGroundControl plan
	MissionRawResult_RESULT_FAILED_TO_PARSE_QGC_PLAN    MissionRawResult_Result = 11 // Failed to parse the QGroundControl plan
	MissionRawResult_RESULT_NO_SYSTEM                   MissionRawResult_Result = 12 // No system connected
	MissionRawResult_RESULT_DENIED                      MissionRawResult_Result = 13 // Request denied
	MissionRawResult_RESULT_MISSION_TYPE_NOT_CONSISTENT MissionRawResult_Result = 14 // Mission type is not consistent
	MissionRawResult_RESULT_INVALID_SEQUENCE            MissionRawResult_Result = 15 // The mission item sequences are not increasing correctly
	MissionRawResult_RESULT_CURRENT_INVALID             MissionRawResult_Result = 16 // The current item is not set correctly
	MissionRawResult_RESULT_PROTOCOL_ERROR              MissionRawResult_Result = 17 // There was a protocol error
	MissionRawResult_RESULT_INT_MESSAGES_NOT_SUPPORTED  MissionRawResult_Result = 18 // The system does not support the MISSION_INT protocol
)

// Enum value maps for MissionRawResult_Result.
var (
	MissionRawResult_Result_name = map[int32]string{
		0:  "RESULT_UNKNOWN",
		1:  "RESULT_SUCCESS",
		2:  "RESULT_ERROR",
		3:  "RESULT_TOO_MANY_MISSION_ITEMS",
		4:  "RESULT_BUSY",
		5:  "RESULT_TIMEOUT",
		6:  "RESULT_INVALID_ARGUMENT",
		7:  "RESULT_UNSUPPORTED",
		8:  "RESULT_NO_MISSION_AVAILABLE",
		9:  "RESULT_TRANSFER_CANCELLED",
		10: "RESULT_FAILED_TO_OPEN_QGC_PLAN",
		11: "RESULT_FAILED_TO_PARSE_QGC_PLAN",
		12: "RESULT_NO_SYSTEM",
		13: "RESULT_DENIED",
		14: "RESULT_MISSION_TYPE_NOT_CONSISTENT",
		15: "RESULT_INVALID_SEQUENCE",
		16: "RESULT_CURRENT_INVALID",
		17: "RESULT_PROTOCOL_ERROR",
		18: "RESULT_INT_MESSAGES_NOT_SUPPORTED",
	}
	MissionRawResult_Result_value = map[string]int32{
		"RESULT_UNKNOWN":                     0,
		"RESULT_SUCCESS":                     1,
		"RESULT_ERROR":                       2,
		"RESULT_TOO_MANY_MISSION_ITEMS":      3,
		"RESULT_BUSY":                        4,
		"RESULT_TIMEOUT":                     5,
		"RESULT_INVALID_ARGUMENT":            6,
		"RESULT_UNSUPPORTED":                 7,
		"RESULT_NO_MISSION_AVAILABLE":        8,
		"RESULT_TRANSFER_CANCELLED":          9,
		"RESULT_FAILED_TO_OPEN_QGC_PLAN":     10,
		"RESULT_FAILED_TO_PARSE_QGC_PLAN":    11,
		"RESULT_NO_SYSTEM":                   12,
		"RESULT_DENIED":                      13,
		"RESULT_MISSION_TYPE_NOT_CONSISTENT": 14,
		"RESULT_INVALID_SEQUENCE":            15,
		"RESULT_CURRENT_INVALID":             16,
		"RESULT_PROTOCOL_ERROR":              17,
		"RESULT_INT_MESSAGES_NOT_SUPPORTED":  18,
	}
)

func (x MissionRawResult_Result) Enum() *MissionRawResult_Result {
	p := new(MissionRawResult_Result)
	*p = x
	return p
}

func (x MissionRawResult_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MissionRawResult_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_mission_raw_proto_enumTypes[0].Descriptor()
}

func (MissionRawResult_Result) Type() protoreflect.EnumType {
	return &file_mission_raw_proto_enumTypes[0]
}

func (x MissionRawResult_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MissionRawResult_Result.Descriptor instead.
func (MissionRawResult_Result) EnumDescriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{31, 0}
}

type UploadMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionItems []*MissionItem `protobuf:"bytes,1,rep,name=mission_items,json=missionItems,proto3" json:"mission_items,omitempty"` // The mission items
}

func (x *UploadMissionRequest) Reset() {
	*x = UploadMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMissionRequest) ProtoMessage() {}

func (x *UploadMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadMissionRequest.ProtoReflect.Descriptor instead.
func (*UploadMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{0}
}

func (x *UploadMissionRequest) GetMissionItems() []*MissionItem {
	if x != nil {
		return x.MissionItems
	}
	return nil
}

type UploadMissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionRawResult *MissionRawResult `protobuf:"bytes,1,opt,name=mission_raw_result,json=missionRawResult,proto3" json:"mission_raw_result,omitempty"`
}

func (x *UploadMissionResponse) Reset() {
	*x = UploadMissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMissionResponse) ProtoMessage() {}

func (x *UploadMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadMissionResponse.ProtoReflect.Descriptor instead.
func (*UploadMissionResponse) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{1}
}

func (x *UploadMissionResponse) GetMissionRawResult() *MissionRawResult {
	if x != nil {
		return x.MissionRawResult
	}
	return nil
}

type UploadGeofenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionItems []*MissionItem `protobuf:"bytes,1,rep,name=mission_items,json=missionItems,proto3" json:"mission_items,omitempty"` // The mission items
}

func (x *UploadGeofenceRequest) Reset() {
	*x = UploadGeofenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadGeofenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadGeofenceRequest) ProtoMessage() {}

func (x *UploadGeofenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadGeofenceRequest.ProtoReflect.Descriptor instead.
func (*UploadGeofenceRequest) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{2}
}

func (x *UploadGeofenceRequest) GetMissionItems() []*MissionItem {
	if x != nil {
		return x.MissionItems
	}
	return nil
}

type UploadGeofenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionRawResult *MissionRawResult `protobuf:"bytes,1,opt,name=mission_raw_result,json=missionRawResult,proto3" json:"mission_raw_result,omitempty"`
}

func (x *UploadGeofenceResponse) Reset() {
	*x = UploadGeofenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadGeofenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadGeofenceResponse) ProtoMessage() {}

func (x *UploadGeofenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadGeofenceResponse.ProtoReflect.Descriptor instead.
func (*UploadGeofenceResponse) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{3}
}

func (x *UploadGeofenceResponse) GetMissionRawResult() *MissionRawResult {
	if x != nil {
		return x.MissionRawResult
	}
	return nil
}

type UploadRallyPointsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionItems []*MissionItem `protobuf:"bytes,1,rep,name=mission_items,json=missionItems,proto3" json:"mission_items,omitempty"` // The mission items
}

func (x *UploadRallyPointsRequest) Reset() {
	*x = UploadRallyPointsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadRallyPointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRallyPointsRequest) ProtoMessage() {}

func (x *UploadRallyPointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRallyPointsRequest.ProtoReflect.Descriptor instead.
func (*UploadRallyPointsRequest) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{4}
}

func (x *UploadRallyPointsRequest) GetMissionItems() []*MissionItem {
	if x != nil {
		return x.MissionItems
	}
	return nil
}

type UploadRallyPointsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionRawResult *MissionRawResult `protobuf:"bytes,1,opt,name=mission_raw_result,json=missionRawResult,proto3" json:"mission_raw_result,omitempty"`
}

func (x *UploadRallyPointsResponse) Reset() {
	*x = UploadRallyPointsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadRallyPointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRallyPointsResponse) ProtoMessage() {}

func (x *UploadRallyPointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRallyPointsResponse.ProtoReflect.Descriptor instead.
func (*UploadRallyPointsResponse) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{5}
}

func (x *UploadRallyPointsResponse) GetMissionRawResult() *MissionRawResult {
	if x != nil {
		return x.MissionRawResult
	}
	return nil
}

type CancelMissionUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelMissionUploadRequest) Reset() {
	*x = CancelMissionUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMissionUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMissionUploadRequest) ProtoMessage() {}

func (x *CancelMissionUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMissionUploadRequest.ProtoReflect.Descriptor instead.
func (*CancelMissionUploadRequest) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{6}
}

type CancelMissionUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionRawResult *MissionRawResult `protobuf:"bytes,1,opt,name=mission_raw_result,json=missionRawResult,proto3" json:"mission_raw_result,omitempty"`
}

func (x *CancelMissionUploadResponse) Reset() {
	*x = CancelMissionUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMissionUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMissionUploadResponse) ProtoMessage() {}

func (x *CancelMissionUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMissionUploadResponse.ProtoReflect.Descriptor instead.
func (*CancelMissionUploadResponse) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{7}
}

func (x *CancelMissionUploadResponse) GetMissionRawResult() *MissionRawResult {
	if x != nil {
		return x.MissionRawResult
	}
	return nil
}

type DownloadMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DownloadMissionRequest) Reset() {
	*x = DownloadMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadMissionRequest) ProtoMessage() {}

func (x *DownloadMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadMissionRequest.ProtoReflect.Descriptor instead.
func (*DownloadMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{8}
}

type DownloadMissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionRawResult *MissionRawResult `protobuf:"bytes,1,opt,name=mission_raw_result,json=missionRawResult,proto3" json:"mission_raw_result,omitempty"`
	MissionItems     []*MissionItem    `protobuf:"bytes,2,rep,name=mission_items,json=missionItems,proto3" json:"mission_items,omitempty"` // The mission items
}

func (x *DownloadMissionResponse) Reset() {
	*x = DownloadMissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadMissionResponse) ProtoMessage() {}

func (x *DownloadMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadMissionResponse.ProtoReflect.Descriptor instead.
func (*DownloadMissionResponse) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{9}
}

func (x *DownloadMissionResponse) GetMissionRawResult() *MissionRawResult {
	if x != nil {
		return x.MissionRawResult
	}
	return nil
}

func (x *DownloadMissionResponse) GetMissionItems() []*MissionItem {
	if x != nil {
		return x.MissionItems
	}
	return nil
}

type CancelMissionDownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelMissionDownloadRequest) Reset() {
	*x = CancelMissionDownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMissionDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMissionDownloadRequest) ProtoMessage() {}

func (x *CancelMissionDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMissionDownloadRequest.ProtoReflect.Descriptor instead.
func (*CancelMissionDownloadRequest) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{10}
}

type CancelMissionDownloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionRawResult *MissionRawResult `protobuf:"bytes,1,opt,name=mission_raw_result,json=missionRawResult,proto3" json:"mission_raw_result,omitempty"`
}

func (x *CancelMissionDownloadResponse) Reset() {
	*x = CancelMissionDownloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMissionDownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMissionDownloadResponse) ProtoMessage() {}

func (x *CancelMissionDownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMissionDownloadResponse.ProtoReflect.Descriptor instead.
func (*CancelMissionDownloadResponse) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{11}
}

func (x *CancelMissionDownloadResponse) GetMissionRawResult() *MissionRawResult {
	if x != nil {
		return x.MissionRawResult
	}
	return nil
}

type StartMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartMissionRequest) Reset() {
	*x = StartMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMissionRequest) ProtoMessage() {}

func (x *StartMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMissionRequest.ProtoReflect.Descriptor instead.
func (*StartMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{12}
}

type StartMissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionRawResult *MissionRawResult `protobuf:"bytes,1,opt,name=mission_raw_result,json=missionRawResult,proto3" json:"mission_raw_result,omitempty"`
}

func (x *StartMissionResponse) Reset() {
	*x = StartMissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMissionResponse) ProtoMessage() {}

func (x *StartMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMissionResponse.ProtoReflect.Descriptor instead.
func (*StartMissionResponse) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{13}
}

func (x *StartMissionResponse) GetMissionRawResult() *MissionRawResult {
	if x != nil {
		return x.MissionRawResult
	}
	return nil
}

type PauseMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PauseMissionRequest) Reset() {
	*x = PauseMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseMissionRequest) ProtoMessage() {}

func (x *PauseMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseMissionRequest.ProtoReflect.Descriptor instead.
func (*PauseMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{14}
}

type PauseMissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionRawResult *MissionRawResult `protobuf:"bytes,1,opt,name=mission_raw_result,json=missionRawResult,proto3" json:"mission_raw_result,omitempty"`
}

func (x *PauseMissionResponse) Reset() {
	*x = PauseMissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseMissionResponse) ProtoMessage() {}

func (x *PauseMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseMissionResponse.ProtoReflect.Descriptor instead.
func (*PauseMissionResponse) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{15}
}

func (x *PauseMissionResponse) GetMissionRawResult() *MissionRawResult {
	if x != nil {
		return x.MissionRawResult
	}
	return nil
}

type ClearMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearMissionRequest) Reset() {
	*x = ClearMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearMissionRequest) ProtoMessage() {}

func (x *ClearMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearMissionRequest.ProtoReflect.Descriptor instead.
func (*ClearMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{16}
}

type ClearMissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionRawResult *MissionRawResult `protobuf:"bytes,1,opt,name=mission_raw_result,json=missionRawResult,proto3" json:"mission_raw_result,omitempty"`
}

func (x *ClearMissionResponse) Reset() {
	*x = ClearMissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearMissionResponse) ProtoMessage() {}

func (x *ClearMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearMissionResponse.ProtoReflect.Descriptor instead.
func (*ClearMissionResponse) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{17}
}

func (x *ClearMissionResponse) GetMissionRawResult() *MissionRawResult {
	if x != nil {
		return x.MissionRawResult
	}
	return nil
}

type SetCurrentMissionItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"` // Index of the mission item to be set as the next one (0-based)
}

func (x *SetCurrentMissionItemRequest) Reset() {
	*x = SetCurrentMissionItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCurrentMissionItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCurrentMissionItemRequest) ProtoMessage() {}

func (x *SetCurrentMissionItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCurrentMissionItemRequest.ProtoReflect.Descriptor instead.
func (*SetCurrentMissionItemRequest) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{18}
}

func (x *SetCurrentMissionItemRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type SetCurrentMissionItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionRawResult *MissionRawResult `protobuf:"bytes,1,opt,name=mission_raw_result,json=missionRawResult,proto3" json:"mission_raw_result,omitempty"`
}

func (x *SetCurrentMissionItemResponse) Reset() {
	*x = SetCurrentMissionItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCurrentMissionItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCurrentMissionItemResponse) ProtoMessage() {}

func (x *SetCurrentMissionItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCurrentMissionItemResponse.ProtoReflect.Descriptor instead.
func (*SetCurrentMissionItemResponse) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{19}
}

func (x *SetCurrentMissionItemResponse) GetMissionRawResult() *MissionRawResult {
	if x != nil {
		return x.MissionRawResult
	}
	return nil
}

type SubscribeMissionProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeMissionProgressRequest) Reset() {
	*x = SubscribeMissionProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeMissionProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeMissionProgressRequest) ProtoMessage() {}

func (x *SubscribeMissionProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeMissionProgressRequest.ProtoReflect.Descriptor instead.
func (*SubscribeMissionProgressRequest) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{20}
}

type MissionProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionProgress *MissionProgress `protobuf:"bytes,1,opt,name=mission_progress,json=missionProgress,proto3" json:"mission_progress,omitempty"` // Mission progress
}

func (x *MissionProgressResponse) Reset() {
	*x = MissionProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionProgressResponse) ProtoMessage() {}

func (x *MissionProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionProgressResponse.ProtoReflect.Descriptor instead.
func (*MissionProgressResponse) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{21}
}

func (x *MissionProgressResponse) GetMissionProgress() *MissionProgress {
	if x != nil {
		return x.MissionProgress
	}
	return nil
}

type SubscribeMissionChangedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeMissionChangedRequest) Reset() {
	*x = SubscribeMissionChangedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeMissionChangedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeMissionChangedRequest) ProtoMessage() {}

func (x *SubscribeMissionChangedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeMissionChangedRequest.ProtoReflect.Descriptor instead.
func (*SubscribeMissionChangedRequest) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{22}
}

type MissionChangedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionChanged bool `protobuf:"varint,1,opt,name=mission_changed,json=missionChanged,proto3" json:"mission_changed,omitempty"` // Mission has changed
}

func (x *MissionChangedResponse) Reset() {
	*x = MissionChangedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionChangedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionChangedResponse) ProtoMessage() {}

func (x *MissionChangedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionChangedResponse.ProtoReflect.Descriptor instead.
func (*MissionChangedResponse) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{23}
}

func (x *MissionChangedResponse) GetMissionChanged() bool {
	if x != nil {
		return x.MissionChanged
	}
	return false
}

type ImportQgroundcontrolMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QgcPlanPath string `protobuf:"bytes,1,opt,name=qgc_plan_path,json=qgcPlanPath,proto3" json:"qgc_plan_path,omitempty"` // File path of the QGC plan
}

func (x *ImportQgroundcontrolMissionRequest) Reset() {
	*x = ImportQgroundcontrolMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportQgroundcontrolMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportQgroundcontrolMissionRequest) ProtoMessage() {}

func (x *ImportQgroundcontrolMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportQgroundcontrolMissionRequest.ProtoReflect.Descriptor instead.
func (*ImportQgroundcontrolMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{24}
}

func (x *ImportQgroundcontrolMissionRequest) GetQgcPlanPath() string {
	if x != nil {
		return x.QgcPlanPath
	}
	return ""
}

type ImportQgroundcontrolMissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionRawResult  *MissionRawResult  `protobuf:"bytes,1,opt,name=mission_raw_result,json=missionRawResult,proto3" json:"mission_raw_result,omitempty"`
	MissionImportData *MissionImportData `protobuf:"bytes,2,opt,name=mission_import_data,json=missionImportData,proto3" json:"mission_import_data,omitempty"` // The imported mission data
}

func (x *ImportQgroundcontrolMissionResponse) Reset() {
	*x = ImportQgroundcontrolMissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportQgroundcontrolMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportQgroundcontrolMissionResponse) ProtoMessage() {}

func (x *ImportQgroundcontrolMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportQgroundcontrolMissionResponse.ProtoReflect.Descriptor instead.
func (*ImportQgroundcontrolMissionResponse) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{25}
}

func (x *ImportQgroundcontrolMissionResponse) GetMissionRawResult() *MissionRawResult {
	if x != nil {
		return x.MissionRawResult
	}
	return nil
}

func (x *ImportQgroundcontrolMissionResponse) GetMissionImportData() *MissionImportData {
	if x != nil {
		return x.MissionImportData
	}
	return nil
}

type ImportQgroundcontrolMissionFromStringRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QgcPlan string `protobuf:"bytes,1,opt,name=qgc_plan,json=qgcPlan,proto3" json:"qgc_plan,omitempty"` // QGC plan as string
}

func (x *ImportQgroundcontrolMissionFromStringRequest) Reset() {
	*x = ImportQgroundcontrolMissionFromStringRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportQgroundcontrolMissionFromStringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportQgroundcontrolMissionFromStringRequest) ProtoMessage() {}

func (x *ImportQgroundcontrolMissionFromStringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportQgroundcontrolMissionFromStringRequest.ProtoReflect.Descriptor instead.
func (*ImportQgroundcontrolMissionFromStringRequest) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{26}
}

func (x *ImportQgroundcontrolMissionFromStringRequest) GetQgcPlan() string {
	if x != nil {
		return x.QgcPlan
	}
	return ""
}

type ImportQgroundcontrolMissionFromStringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionRawResult  *MissionRawResult  `protobuf:"bytes,1,opt,name=mission_raw_result,json=missionRawResult,proto3" json:"mission_raw_result,omitempty"`
	MissionImportData *MissionImportData `protobuf:"bytes,2,opt,name=mission_import_data,json=missionImportData,proto3" json:"mission_import_data,omitempty"` // The imported mission data
}

func (x *ImportQgroundcontrolMissionFromStringResponse) Reset() {
	*x = ImportQgroundcontrolMissionFromStringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportQgroundcontrolMissionFromStringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportQgroundcontrolMissionFromStringResponse) ProtoMessage() {}

func (x *ImportQgroundcontrolMissionFromStringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportQgroundcontrolMissionFromStringResponse.ProtoReflect.Descriptor instead.
func (*ImportQgroundcontrolMissionFromStringResponse) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{27}
}

func (x *ImportQgroundcontrolMissionFromStringResponse) GetMissionRawResult() *MissionRawResult {
	if x != nil {
		return x.MissionRawResult
	}
	return nil
}

func (x *ImportQgroundcontrolMissionFromStringResponse) GetMissionImportData() *MissionImportData {
	if x != nil {
		return x.MissionImportData
	}
	return nil
}

// Mission progress type.
type MissionProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int32 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"` // Current mission item index (0-based), if equal to total, the mission is finished
	Total   int32 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`     // Total number of mission items
}

func (x *MissionProgress) Reset() {
	*x = MissionProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionProgress) ProtoMessage() {}

func (x *MissionProgress) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionProgress.ProtoReflect.Descriptor instead.
func (*MissionProgress) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{28}
}

func (x *MissionProgress) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *MissionProgress) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Mission item exactly identical to MAVLink MISSION_ITEM_INT.
type MissionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq          uint32  `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`                                     // Sequence (uint16_t)
	Frame        uint32  `protobuf:"varint,2,opt,name=frame,proto3" json:"frame,omitempty"`                                 // The coordinate system of the waypoint (actually uint8_t)
	Command      uint32  `protobuf:"varint,3,opt,name=command,proto3" json:"command,omitempty"`                             // The scheduled action for the waypoint (actually uint16_t)
	Current      uint32  `protobuf:"varint,4,opt,name=current,proto3" json:"current,omitempty"`                             // false:0, true:1 (actually uint8_t)
	Autocontinue uint32  `protobuf:"varint,5,opt,name=autocontinue,proto3" json:"autocontinue,omitempty"`                   // Autocontinue to next waypoint (actually uint8_t)
	Param1       float32 `protobuf:"fixed32,6,opt,name=param1,proto3" json:"param1,omitempty"`                              // PARAM1, see MAV_CMD enum
	Param2       float32 `protobuf:"fixed32,7,opt,name=param2,proto3" json:"param2,omitempty"`                              // PARAM2, see MAV_CMD enum
	Param3       float32 `protobuf:"fixed32,8,opt,name=param3,proto3" json:"param3,omitempty"`                              // PARAM3, see MAV_CMD enum
	Param4       float32 `protobuf:"fixed32,9,opt,name=param4,proto3" json:"param4,omitempty"`                              // PARAM4, see MAV_CMD enum
	X            int32   `protobuf:"varint,10,opt,name=x,proto3" json:"x,omitempty"`                                        // PARAM5 / local: x position in meters * 1e4, global: latitude in degrees * 10^7
	Y            int32   `protobuf:"varint,11,opt,name=y,proto3" json:"y,omitempty"`                                        // PARAM6 / y position: local: x position in meters * 1e4, global: longitude in degrees *10^7
	Z            float32 `protobuf:"fixed32,12,opt,name=z,proto3" json:"z,omitempty"`                                       // PARAM7 / local: Z coordinate, global: altitude (relative or absolute, depending on frame)
	MissionType  uint32  `protobuf:"varint,13,opt,name=mission_type,json=missionType,proto3" json:"mission_type,omitempty"` // Mission type (actually uint8_t)
}

func (x *MissionItem) Reset() {
	*x = MissionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionItem) ProtoMessage() {}

func (x *MissionItem) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionItem.ProtoReflect.Descriptor instead.
func (*MissionItem) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{29}
}

func (x *MissionItem) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *MissionItem) GetFrame() uint32 {
	if x != nil {
		return x.Frame
	}
	return 0
}

func (x *MissionItem) GetCommand() uint32 {
	if x != nil {
		return x.Command
	}
	return 0
}

func (x *MissionItem) GetCurrent() uint32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *MissionItem) GetAutocontinue() uint32 {
	if x != nil {
		return x.Autocontinue
	}
	return 0
}

func (x *MissionItem) GetParam1() float32 {
	if x != nil {
		return x.Param1
	}
	return 0
}

func (x *MissionItem) GetParam2() float32 {
	if x != nil {
		return x.Param2
	}
	return 0
}

func (x *MissionItem) GetParam3() float32 {
	if x != nil {
		return x.Param3
	}
	return 0
}

func (x *MissionItem) GetParam4() float32 {
	if x != nil {
		return x.Param4
	}
	return 0
}

func (x *MissionItem) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *MissionItem) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *MissionItem) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *MissionItem) GetMissionType() uint32 {
	if x != nil {
		return x.MissionType
	}
	return 0
}

// Mission import data
type MissionImportData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionItems  []*MissionItem `protobuf:"bytes,1,rep,name=mission_items,json=missionItems,proto3" json:"mission_items,omitempty"`    // Mission items
	GeofenceItems []*MissionItem `protobuf:"bytes,2,rep,name=geofence_items,json=geofenceItems,proto3" json:"geofence_items,omitempty"` // Geofence items
	RallyItems    []*MissionItem `protobuf:"bytes,3,rep,name=rally_items,json=rallyItems,proto3" json:"rally_items,omitempty"`          // Rally items
}

func (x *MissionImportData) Reset() {
	*x = MissionImportData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionImportData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionImportData) ProtoMessage() {}

func (x *MissionImportData) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionImportData.ProtoReflect.Descriptor instead.
func (*MissionImportData) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{30}
}

func (x *MissionImportData) GetMissionItems() []*MissionItem {
	if x != nil {
		return x.MissionItems
	}
	return nil
}

func (x *MissionImportData) GetGeofenceItems() []*MissionItem {
	if x != nil {
		return x.GeofenceItems
	}
	return nil
}

func (x *MissionImportData) GetRallyItems() []*MissionItem {
	if x != nil {
		return x.RallyItems
	}
	return nil
}

// Result type.
type MissionRawResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    MissionRawResult_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mavsdk.rpc.mission_raw.MissionRawResult_Result" json:"result,omitempty"` // Result enum value
	ResultStr string                  `protobuf:"bytes,2,opt,name=result_str,json=resultStr,proto3" json:"result_str,omitempty"`                               // Human-readable English string describing the result
}

func (x *MissionRawResult) Reset() {
	*x = MissionRawResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_raw_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionRawResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionRawResult) ProtoMessage() {}

func (x *MissionRawResult) ProtoReflect() protoreflect.Message {
	mi := &file_mission_raw_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionRawResult.ProtoReflect.Descriptor instead.
func (*MissionRawResult) Descriptor() ([]byte, []int) {
	return file_mission_raw_proto_rawDescGZIP(), []int{31}
}

func (x *MissionRawResult) GetResult() MissionRawResult_Result {
	if x != nil {
		return x.Result
	}
	return MissionRawResult_RESULT_UNKNOWN
}

func (x *MissionRawResult) GetResultStr() string {
	if x != nil {
		return x.ResultStr
	}
	return ""
}

var File_mission_raw_proto protoreflect.FileDescriptor

var file_mission_raw_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x16, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x1a, 0x14, 0x6d, 0x61, 0x76,
	0x73, 0x64, 0x6b, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x60, 0x0a, 0x14, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x0d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x6f, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x12,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64,
	0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61,
	0x77, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x10, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x61, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x65,
	0x6f, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a,
	0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x70, 0x0a, 0x16, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x47, 0x65, 0x6f, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x56, 0x0a, 0x12, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61,
	0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x10, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x64, 0x0a, 0x18, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x61, 0x6c, 0x6c, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d,
	0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x73, 0x0a, 0x19, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x61, 0x6c, 0x6c, 0x79, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x12,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64,
	0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61,
	0x77, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x10, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x75, 0x0a, 0x1b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x56, 0x0a, 0x12, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61,
	0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x10, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x17, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x56, 0x0a, 0x12, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61,
	0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x10, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61,
	0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x48, 0x0a, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x77, 0x0a, 0x1d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61,
	0x77, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x10, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x6e, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x10, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x15, 0x0a, 0x13, 0x50, 0x61, 0x75, 0x73, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6e, 0x0a, 0x14, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x56, 0x0a, 0x12, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d,
	0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x10, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x6e, 0x0a, 0x14, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x10, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x34, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x77, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x10, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x21,
	0x0a, 0x1f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x6d, 0x0a, 0x17, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x10,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x0f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x20, 0x0a, 0x1e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x41, 0x0a, 0x16, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x22, 0x48, 0x0a, 0x22, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x51,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x71,
	0x67, 0x63, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x71, 0x67, 0x63, 0x50, 0x6c, 0x61, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x22,
	0xd8, 0x01, 0x0a, 0x23, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x10, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x59, 0x0a, 0x13, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d,
	0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x49, 0x0a, 0x2c, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x51, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x67,
	0x63, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x67,
	0x63, 0x50, 0x6c, 0x61, 0x6e, 0x22, 0xe2, 0x01, 0x0a, 0x2d, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x51, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x10, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x59, 0x0a, 0x13, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d,
	0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x41, 0x0a, 0x0f, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xba, 0x02,
	0x0a, 0x0b, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74,
	0x6f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x61, 0x75, 0x74, 0x6f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x32, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x32, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x33, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x34, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x34, 0x12, 0x0c, 0x0a,
	0x01, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x7a, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x11, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x48, 0x0a, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77,
	0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x4a, 0x0a, 0x0e, 0x67, 0x65,
	0x6f, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x67, 0x65, 0x6f, 0x66, 0x65, 0x6e, 0x63,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x44, 0x0a, 0x0b, 0x72, 0x61, 0x6c, 0x6c, 0x79, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61,
	0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x0a, 0x72, 0x61, 0x6c, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x91, 0x05, 0x0a,
	0x10, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x47, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2f, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x72, 0x22, 0x94, 0x04, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x53, 0x55,
	0x4c, 0x54, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x21,
	0x0a, 0x1d, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4d, 0x41, 0x4e,
	0x59, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x53, 0x10,
	0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x42, 0x55, 0x53, 0x59,
	0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x4f, 0x55, 0x54, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e,
	0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x07, 0x12, 0x1f, 0x0a, 0x1b, 0x52,
	0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x4e, 0x4f, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x08, 0x12, 0x1d, 0x0a, 0x19,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f,
	0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x09, 0x12, 0x22, 0x0a, 0x1e, 0x52,
	0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f,
	0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x51, 0x47, 0x43, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x10, 0x0a, 0x12,
	0x23, 0x0a, 0x1f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x5f, 0x54, 0x4f, 0x5f, 0x50, 0x41, 0x52, 0x53, 0x45, 0x5f, 0x51, 0x47, 0x43, 0x5f, 0x50, 0x4c,
	0x41, 0x4e, 0x10, 0x0b, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x4e,
	0x4f, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x0c, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x45,
	0x53, 0x55, 0x4c, 0x54, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x0d, 0x12, 0x26, 0x0a,
	0x22, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x53, 0x54,
	0x45, 0x4e, 0x54, 0x10, 0x0e, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x45,
	0x10, 0x0f, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x43, 0x55, 0x52,
	0x52, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x10, 0x12, 0x19,
	0x0a, 0x15, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f,
	0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x11, 0x12, 0x25, 0x0a, 0x21, 0x52, 0x45, 0x53,
	0x55, 0x4c, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x53,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x12,
	0x32, 0xbf, 0x0e, 0x0a, 0x11, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x47, 0x65, 0x6f, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2d, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64,
	0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61,
	0x77, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x65, 0x6f, 0x66, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x65, 0x6f, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x11, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x61, 0x6c, 0x6c, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x30,
	0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x61,
	0x6c, 0x6c, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x61, 0x6c, 0x6c, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x32, 0x2e,
	0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x12, 0x74, 0x0a, 0x0f,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x2e, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x15, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x34, 0x2e, 0x6d,
	0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x12,
	0x6b, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x2b, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d,
	0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x0c,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x6d,
	0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x61, 0x76, 0x73,
	0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x61, 0x77, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x0c, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x6d, 0x61, 0x76, 0x73,
	0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x61, 0x77, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x34, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e,
	0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x88, 0x01, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x2e, 0x6d,
	0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x89, 0x01, 0x0a, 0x17, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x36, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04,
	0x80, 0xb5, 0x18, 0x00, 0x30, 0x01, 0x12, 0x9c, 0x01, 0x0a, 0x1b, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x51, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x51, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x04, 0x80, 0xb5, 0x18, 0x01, 0x12, 0xba, 0x01, 0x0a, 0x25, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x51, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12,
	0x44, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x51,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x2e, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0x80, 0xb5,
	0x18, 0x01, 0x42, 0x20, 0x42, 0x0f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x0d, 0x2e, 0x3b, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x61, 0x77, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mission_raw_proto_rawDescOnce sync.Once
	file_mission_raw_proto_rawDescData = file_mission_raw_proto_rawDesc
)

func file_mission_raw_proto_rawDescGZIP() []byte {
	file_mission_raw_proto_rawDescOnce.Do(func() {
		file_mission_raw_proto_rawDescData = protoimpl.X.CompressGZIP(file_mission_raw_proto_rawDescData)
	})
	return file_mission_raw_proto_rawDescData
}

var file_mission_raw_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mission_raw_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_mission_raw_proto_goTypes = []any{
	(MissionRawResult_Result)(0),                          // 0: mavsdk.rpc.mission_raw.MissionRawResult.Result
	(*UploadMissionRequest)(nil),                          // 1: mavsdk.rpc.mission_raw.UploadMissionRequest
	(*UploadMissionResponse)(nil),                         // 2: mavsdk.rpc.mission_raw.UploadMissionResponse
	(*UploadGeofenceRequest)(nil),                         // 3: mavsdk.rpc.mission_raw.UploadGeofenceRequest
	(*UploadGeofenceResponse)(nil),                        // 4: mavsdk.rpc.mission_raw.UploadGeofenceResponse
	(*UploadRallyPointsRequest)(nil),                      // 5: mavsdk.rpc.mission_raw.UploadRallyPointsRequest
	(*UploadRallyPointsResponse)(nil),                     // 6: mavsdk.rpc.mission_raw.UploadRallyPointsResponse
	(*CancelMissionUploadRequest)(nil),                    // 7: mavsdk.rpc.mission_raw.CancelMissionUploadRequest
	(*CancelMissionUploadResponse)(nil),                   // 8: mavsdk.rpc.mission_raw.CancelMissionUploadResponse
	(*DownloadMissionRequest)(nil),                        // 9: mavsdk.rpc.mission_raw.DownloadMissionRequest
	(*DownloadMissionResponse)(nil),                       // 10: mavsdk.rpc.mission_raw.DownloadMissionResponse
	(*CancelMissionDownloadRequest)(nil),                  // 11: mavsdk.rpc.mission_raw.CancelMissionDownloadRequest
	(*CancelMissionDownloadResponse)(nil),                 // 12: mavsdk.rpc.mission_raw.CancelMissionDownloadResponse
	(*StartMissionRequest)(nil),                           // 13: mavsdk.rpc.mission_raw.StartMissionRequest
	(*StartMissionResponse)(nil),                          // 14: mavsdk.rpc.mission_raw.StartMissionResponse
	(*PauseMissionRequest)(nil),                           // 15: mavsdk.rpc.mission_raw.PauseMissionRequest
	(*PauseMissionResponse)(nil),                          // 16: mavsdk.rpc.mission_raw.PauseMissionResponse
	(*ClearMissionRequest)(nil),                           // 17: mavsdk.rpc.mission_raw.ClearMissionRequest
	(*ClearMissionResponse)(nil),                          // 18: mavsdk.rpc.mission_raw.ClearMissionResponse
	(*SetCurrentMissionItemRequest)(nil),                  // 19: mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest
	(*SetCurrentMissionItemResponse)(nil),                 // 20: mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse
	(*SubscribeMissionProgressRequest)(nil),               // 21: mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest
	(*MissionProgressResponse)(nil),                       // 22: mavsdk.rpc.mission_raw.MissionProgressResponse
	(*SubscribeMissionChangedRequest)(nil),                // 23: mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest
	(*MissionChangedResponse)(nil),                        // 24: mavsdk.rpc.mission_raw.MissionChangedResponse
	(*ImportQgroundcontrolMissionRequest)(nil),            // 25: mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest
	(*ImportQgroundcontrolMissionResponse)(nil),           // 26: mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse
	(*ImportQgroundcontrolMissionFromStringRequest)(nil),  // 27: mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest
	(*ImportQgroundcontrolMissionFromStringResponse)(nil), // 28: mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse
	(*MissionProgress)(nil),                               // 29: mavsdk.rpc.mission_raw.MissionProgress
	(*MissionItem)(nil),                                   // 30: mavsdk.rpc.mission_raw.MissionItem
	(*MissionImportData)(nil),                             // 31: mavsdk.rpc.mission_raw.MissionImportData
	(*MissionRawResult)(nil),                              // 32: mavsdk.rpc.mission_raw.MissionRawResult
}
var file_mission_raw_proto_depIdxs = []int32{
	30, // 0: mavsdk.rpc.mission_raw.UploadMissionRequest.mission_items:type_name -> mavsdk.rpc.mission_raw.MissionItem
	32, // 1: mavsdk.rpc.mission_raw.UploadMissionResponse.mission_raw_result:type_name -> mavsdk.rpc.mission_raw.MissionRawResult
	30, // 2: mavsdk.rpc.mission_raw.UploadGeofenceRequest.mission_items:type_name -> mavsdk.rpc.mission_raw.MissionItem
	32, // 3: mavsdk.rpc.mission_raw.UploadGeofenceResponse.mission_raw_result:type_name -> mavsdk.rpc.mission_raw.MissionRawResult
	30, // 4: mavsdk.rpc.mission_raw.UploadRallyPointsRequest.mission_items:type_name -> mavsdk.rpc.mission_raw.MissionItem
	32, // 5: mavsdk.rpc.mission_raw.UploadRallyPointsResponse.mission_raw_result:type_name -> mavsdk.rpc.mission_raw.MissionRawResult
	32, // 6: mavsdk.rpc.mission_raw.CancelMissionUploadResponse.mission_raw_result:type_name -> mavsdk.rpc.mission_raw.MissionRawResult
	32, // 7: mavsdk.rpc.mission_raw.DownloadMissionResponse.mission_raw_result:type_name -> mavsdk.rpc.mission_raw.MissionRawResult
	30, // 8: mavsdk.rpc.mission_raw.DownloadMissionResponse.mission_items:type_name -> mavsdk.rpc.mission_raw.MissionItem
	32, // 9: mavsdk.rpc.mission_raw.CancelMissionDownloadResponse.mission_raw_result:type_name -> mavsdk.rpc.mission_raw.MissionRawResult
	32, // 10: mavsdk.rpc.mission_raw.StartMissionResponse.mission_raw_result:type_name -> mavsdk.rpc.mission_raw.MissionRawResult
	32, // 11: mavsdk.rpc.mission_raw.PauseMissionResponse.mission_raw_result:type_name -> mavsdk.rpc.mission_raw.MissionRawResult
	32, // 12: mavsdk.rpc.mission_raw.ClearMissionResponse.mission_raw_result:type_name -> mavsdk.rpc.mission_raw.MissionRawResult
	32, // 13: mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse.mission_raw_result:type_name -> mavsdk.rpc.mission_raw.MissionRawResult
	29, // 14: mavsdk.rpc.mission_raw.MissionProgressResponse.mission_progress:type_name -> mavsdk.rpc.mission_raw.MissionProgress
	32, // 15: mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.mission_raw_result:type_name -> mavsdk.rpc.mission_raw.MissionRawResult
	31, // 16: mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.mission_import_data:type_name -> mavsdk.rpc.mission_raw.MissionImportData
	32, // 17: mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.mission_raw_result:type_name -> mavsdk.rpc.mission_raw.MissionRawResult
	31, // 18: mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.mission_import_data:type_name -> mavsdk.rpc.mission_raw.MissionImportData
	30, // 19: mavsdk.rpc.mission_raw.MissionImportData.mission_items:type_name -> mavsdk.rpc.mission_raw.MissionItem
	30, // 20: mavsdk.rpc.mission_raw.MissionImportData.geofence_items:type_name -> mavsdk.rpc.mission_raw.MissionItem
	30, // 21: mavsdk.rpc.mission_raw.MissionImportData.rally_items:type_name -> mavsdk.rpc.mission_raw.MissionItem
	0,  // 22: mavsdk.rpc.mission_raw.MissionRawResult.result:type_name -> mavsdk.rpc.mission_raw.MissionRawResult.Result
	1,  // 23: mavsdk.rpc.mission_raw.MissionRawService.UploadMission:input_type -> mavsdk.rpc.mission_raw.UploadMissionRequest
	3,  // 24: mavsdk.rpc.mission_raw.MissionRawService.UploadGeofence:input_type -> mavsdk.rpc.mission_raw.UploadGeofenceRequest
	5,  // 25: mavsdk.rpc.mission_raw.MissionRawService.UploadRallyPoints:input_type -> mavsdk.rpc.mission_raw.UploadRallyPointsRequest
	7,  // 26: mavsdk.rpc.mission_raw.MissionRawService.CancelMissionUpload:input_type -> mavsdk.rpc.mission_raw.CancelMissionUploadRequest
	9,  // 27: mavsdk.rpc.mission_raw.MissionRawService.DownloadMission:input_type -> mavsdk.rpc.mission_raw.DownloadMissionRequest
	11, // 28: mavsdk.rpc.mission_raw.MissionRawService.CancelMissionDownload:input_type -> mavsdk.rpc.mission_raw.CancelMissionDownloadRequest
	13, // 29: mavsdk.rpc.mission_raw.MissionRawService.StartMission:input_type -> mavsdk.rpc.mission_raw.StartMissionRequest
	15, // 30: mavsdk.rpc.mission_raw.MissionRawService.PauseMission:input_type -> mavsdk.rpc.mission_raw.PauseMissionRequest
	17, // 31: mavsdk.rpc.mission_raw.MissionRawService.ClearMission:input_type -> mavsdk.rpc.mission_raw.ClearMissionRequest
	19, // 32: mavsdk.rpc.mission_raw.MissionRawService.SetCurrentMissionItem:input_type -> mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest
	21, // 33: mavsdk.rpc.mission_raw.MissionRawService.SubscribeMissionProgress:input_type -> mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest
	23, // 34: mavsdk.rpc.mission_raw.MissionRawService.SubscribeMissionChanged:input_type -> mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest
	25, // 35: mavsdk.rpc.mission_raw.MissionRawService.ImportQgroundcontrolMission:input_type -> mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest
	27, // 36: mavsdk.rpc.mission_raw.MissionRawService.ImportQgroundcontrolMissionFromString:input_type -> mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest
	2,  // 37: mavsdk.rpc.mission_raw.MissionRawService.UploadMission:output_type -> mavsdk.rpc.mission_raw.UploadMissionResponse
	4,  // 38: mavsdk.rpc.mission_raw.MissionRawService.UploadGeofence:output_type -> mavsdk.rpc.mission_raw.UploadGeofenceResponse
	6,  // 39: mavsdk.rpc.mission_raw.MissionRawService.UploadRallyPoints:output_type -> mavsdk.rpc.mission_raw.UploadRallyPointsResponse
	8,  // 40: mavsdk.rpc.mission_raw.MissionRawService.CancelMissionUpload:output_type -> mavsdk.rpc.mission_raw.CancelMissionUploadResponse
	10, // 41: mavsdk.rpc.mission_raw.MissionRawService.DownloadMission:output_type -> mavsdk.rpc.mission_raw.DownloadMissionResponse
	12, // 42: mavsdk.rpc.mission_raw.MissionRawService.CancelMissionDownload:output_type -> mavsdk.rpc.mission_raw.CancelMissionDownloadResponse
	14, // 43: mavsdk.rpc.mission_raw.MissionRawService.StartMission:output_type -> mavsdk.rpc.mission_raw.StartMissionResponse
	16, // 44: mavsdk.rpc.mission_raw.MissionRawService.PauseMission:output_type -> mavsdk.rpc.mission_raw.PauseMissionResponse
	18, // 45: mavsdk.rpc.mission_raw.MissionRawService.ClearMission:output_type -> mavsdk.rpc.mission_raw.ClearMissionResponse
	20, // 46: mavsdk.rpc.mission_raw.MissionRawService.SetCurrentMissionItem:output_type -> mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse
	22, // 47: mavsdk.rpc.mission_raw.MissionRawService.SubscribeMissionProgress:output_type -> mavsdk.rpc.mission_raw.MissionProgressResponse
	24, // 48: mavsdk.rpc.mission_raw.MissionRawService.SubscribeMissionChanged:output_type -> mavsdk.rpc.mission_raw.MissionChangedResponse
	26, // 49: mavsdk.rpc.mission_raw.MissionRawService.ImportQgroundcontrolMission:output_type -> mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse
	28, // 50: mavsdk.rpc.mission_raw.MissionRawService.ImportQgroundcontrolMissionFromString:output_type -> mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse
	37, // [37:51] is the sub-list for method output_type
	23, // [23:37] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_mission_raw_proto_init() }
func file_mission_raw_proto_init() {
	if File_mission_raw_proto != nil {
		return
	}
	
	if !protoimpl.UnsafeEnabled {
		file_mission_raw_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*UploadMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*UploadMissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UploadGeofenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UploadGeofenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UploadRallyPointsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UploadRallyPointsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CancelMissionUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CancelMissionUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DownloadMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DownloadMissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CancelMissionDownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CancelMissionDownloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*StartMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*StartMissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*PauseMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*PauseMissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ClearMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ClearMissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*SetCurrentMissionItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*SetCurrentMissionItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*SubscribeMissionProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*MissionProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*SubscribeMissionChangedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*MissionChangedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ImportQgroundcontrolMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*ImportQgroundcontrolMissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*ImportQgroundcontrolMissionFromStringRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*ImportQgroundcontrolMissionFromStringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*MissionProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*MissionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*MissionImportData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_raw_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*MissionRawResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mission_raw_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mission_raw_proto_goTypes,
		DependencyIndexes: file_mission_raw_proto_depIdxs,
		EnumInfos:         file_mission_raw_proto_enumTypes,
		MessageInfos:      file_mission_raw_proto_msgTypes,
	}.Build()
	File_mission_raw_proto = out.File
	file_mission_raw_proto_rawDesc = nil
	file_mission_raw_proto_goTypes = nil
	file_mission_raw_proto_depIdxs = nil
}
