// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.6.1
// source: mission.proto

package mission

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Possible camera actions at a mission item.
type MissionItem_CameraAction int32

const (
	MissionItem_CAMERA_ACTION_NONE                 MissionItem_CameraAction = 0 // No action
	MissionItem_CAMERA_ACTION_TAKE_PHOTO           MissionItem_CameraAction = 1 // Take a single photo
	MissionItem_CAMERA_ACTION_START_PHOTO_INTERVAL MissionItem_CameraAction = 2 // Start capturing photos at regular intervals
	MissionItem_CAMERA_ACTION_STOP_PHOTO_INTERVAL  MissionItem_CameraAction = 3 // Stop capturing photos at regular intervals
	MissionItem_CAMERA_ACTION_START_VIDEO          MissionItem_CameraAction = 4 // Start capturing video
	MissionItem_CAMERA_ACTION_STOP_VIDEO           MissionItem_CameraAction = 5 // Stop capturing video
)

// Enum value maps for MissionItem_CameraAction.
var (
	MissionItem_CameraAction_name = map[int32]string{
		0: "CAMERA_ACTION_NONE",
		1: "CAMERA_ACTION_TAKE_PHOTO",
		2: "CAMERA_ACTION_START_PHOTO_INTERVAL",
		3: "CAMERA_ACTION_STOP_PHOTO_INTERVAL",
		4: "CAMERA_ACTION_START_VIDEO",
		5: "CAMERA_ACTION_STOP_VIDEO",
	}
	MissionItem_CameraAction_value = map[string]int32{
		"CAMERA_ACTION_NONE":                 0,
		"CAMERA_ACTION_TAKE_PHOTO":           1,
		"CAMERA_ACTION_START_PHOTO_INTERVAL": 2,
		"CAMERA_ACTION_STOP_PHOTO_INTERVAL":  3,
		"CAMERA_ACTION_START_VIDEO":          4,
		"CAMERA_ACTION_STOP_VIDEO":           5,
	}
)

func (x MissionItem_CameraAction) Enum() *MissionItem_CameraAction {
	p := new(MissionItem_CameraAction)
	*p = x
	return p
}

func (x MissionItem_CameraAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MissionItem_CameraAction) Descriptor() protoreflect.EnumDescriptor {
	return file_mission_proto_enumTypes[0].Descriptor()
}

func (MissionItem_CameraAction) Type() protoreflect.EnumType {
	return &file_mission_proto_enumTypes[0]
}

func (x MissionItem_CameraAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MissionItem_CameraAction.Descriptor instead.
func (MissionItem_CameraAction) EnumDescriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{26, 0}
}

// Possible results returned for action requests.
type MissionResult_Result int32

const (
	MissionResult_RESULT_UNKNOWN                  MissionResult_Result = 0  // Unknown result
	MissionResult_RESULT_SUCCESS                  MissionResult_Result = 1  // Request succeeded
	MissionResult_RESULT_ERROR                    MissionResult_Result = 2  // Error
	MissionResult_RESULT_TOO_MANY_MISSION_ITEMS   MissionResult_Result = 3  // Too many mission items in the mission
	MissionResult_RESULT_BUSY                     MissionResult_Result = 4  // Vehicle is busy
	MissionResult_RESULT_TIMEOUT                  MissionResult_Result = 5  // Request timed out
	MissionResult_RESULT_INVALID_ARGUMENT         MissionResult_Result = 6  // Invalid argument
	MissionResult_RESULT_UNSUPPORTED              MissionResult_Result = 7  // Mission downloaded from the system is not supported
	MissionResult_RESULT_NO_MISSION_AVAILABLE     MissionResult_Result = 8  // No mission available on the system
	MissionResult_RESULT_FAILED_TO_OPEN_QGC_PLAN  MissionResult_Result = 9  // Failed to open the QGroundControl plan
	MissionResult_RESULT_FAILED_TO_PARSE_QGC_PLAN MissionResult_Result = 10 // Failed to parse the QGroundControl plan
	MissionResult_RESULT_UNSUPPORTED_MISSION_CMD  MissionResult_Result = 11 // Unsupported mission command
	MissionResult_RESULT_TRANSFER_CANCELLED       MissionResult_Result = 12 // Mission transfer (upload or download) has been cancelled
)

// Enum value maps for MissionResult_Result.
var (
	MissionResult_Result_name = map[int32]string{
		0:  "RESULT_UNKNOWN",
		1:  "RESULT_SUCCESS",
		2:  "RESULT_ERROR",
		3:  "RESULT_TOO_MANY_MISSION_ITEMS",
		4:  "RESULT_BUSY",
		5:  "RESULT_TIMEOUT",
		6:  "RESULT_INVALID_ARGUMENT",
		7:  "RESULT_UNSUPPORTED",
		8:  "RESULT_NO_MISSION_AVAILABLE",
		9:  "RESULT_FAILED_TO_OPEN_QGC_PLAN",
		10: "RESULT_FAILED_TO_PARSE_QGC_PLAN",
		11: "RESULT_UNSUPPORTED_MISSION_CMD",
		12: "RESULT_TRANSFER_CANCELLED",
	}
	MissionResult_Result_value = map[string]int32{
		"RESULT_UNKNOWN":                  0,
		"RESULT_SUCCESS":                  1,
		"RESULT_ERROR":                    2,
		"RESULT_TOO_MANY_MISSION_ITEMS":   3,
		"RESULT_BUSY":                     4,
		"RESULT_TIMEOUT":                  5,
		"RESULT_INVALID_ARGUMENT":         6,
		"RESULT_UNSUPPORTED":              7,
		"RESULT_NO_MISSION_AVAILABLE":     8,
		"RESULT_FAILED_TO_OPEN_QGC_PLAN":  9,
		"RESULT_FAILED_TO_PARSE_QGC_PLAN": 10,
		"RESULT_UNSUPPORTED_MISSION_CMD":  11,
		"RESULT_TRANSFER_CANCELLED":       12,
	}
)

func (x MissionResult_Result) Enum() *MissionResult_Result {
	p := new(MissionResult_Result)
	*p = x
	return p
}

func (x MissionResult_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MissionResult_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_mission_proto_enumTypes[1].Descriptor()
}

func (MissionResult_Result) Type() protoreflect.EnumType {
	return &file_mission_proto_enumTypes[1]
}

func (x MissionResult_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MissionResult_Result.Descriptor instead.
func (MissionResult_Result) EnumDescriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{29, 0}
}

type UploadMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionPlan *MissionPlan `protobuf:"bytes,1,opt,name=mission_plan,json=missionPlan,proto3" json:"mission_plan,omitempty"` // The mission plan
}

func (x *UploadMissionRequest) Reset() {
	*x = UploadMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMissionRequest) ProtoMessage() {}

func (x *UploadMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadMissionRequest.ProtoReflect.Descriptor instead.
func (*UploadMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{0}
}

func (x *UploadMissionRequest) GetMissionPlan() *MissionPlan {
	if x != nil {
		return x.MissionPlan
	}
	return nil
}

type UploadMissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionResult *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
}

func (x *UploadMissionResponse) Reset() {
	*x = UploadMissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMissionResponse) ProtoMessage() {}

func (x *UploadMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadMissionResponse.ProtoReflect.Descriptor instead.
func (*UploadMissionResponse) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{1}
}

func (x *UploadMissionResponse) GetMissionResult() *MissionResult {
	if x != nil {
		return x.MissionResult
	}
	return nil
}

type CancelMissionUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelMissionUploadRequest) Reset() {
	*x = CancelMissionUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMissionUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMissionUploadRequest) ProtoMessage() {}

func (x *CancelMissionUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMissionUploadRequest.ProtoReflect.Descriptor instead.
func (*CancelMissionUploadRequest) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{2}
}

type CancelMissionUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionResult *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
}

func (x *CancelMissionUploadResponse) Reset() {
	*x = CancelMissionUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMissionUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMissionUploadResponse) ProtoMessage() {}

func (x *CancelMissionUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMissionUploadResponse.ProtoReflect.Descriptor instead.
func (*CancelMissionUploadResponse) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{3}
}

func (x *CancelMissionUploadResponse) GetMissionResult() *MissionResult {
	if x != nil {
		return x.MissionResult
	}
	return nil
}

type DownloadMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DownloadMissionRequest) Reset() {
	*x = DownloadMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadMissionRequest) ProtoMessage() {}

func (x *DownloadMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadMissionRequest.ProtoReflect.Descriptor instead.
func (*DownloadMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{4}
}

type DownloadMissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionResult *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
	MissionPlan   *MissionPlan   `protobuf:"bytes,2,opt,name=mission_plan,json=missionPlan,proto3" json:"mission_plan,omitempty"` // The mission plan
}

func (x *DownloadMissionResponse) Reset() {
	*x = DownloadMissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadMissionResponse) ProtoMessage() {}

func (x *DownloadMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadMissionResponse.ProtoReflect.Descriptor instead.
func (*DownloadMissionResponse) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{5}
}

func (x *DownloadMissionResponse) GetMissionResult() *MissionResult {
	if x != nil {
		return x.MissionResult
	}
	return nil
}

func (x *DownloadMissionResponse) GetMissionPlan() *MissionPlan {
	if x != nil {
		return x.MissionPlan
	}
	return nil
}

type CancelMissionDownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelMissionDownloadRequest) Reset() {
	*x = CancelMissionDownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMissionDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMissionDownloadRequest) ProtoMessage() {}

func (x *CancelMissionDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMissionDownloadRequest.ProtoReflect.Descriptor instead.
func (*CancelMissionDownloadRequest) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{6}
}

type CancelMissionDownloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionResult *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
}

func (x *CancelMissionDownloadResponse) Reset() {
	*x = CancelMissionDownloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMissionDownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMissionDownloadResponse) ProtoMessage() {}

func (x *CancelMissionDownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMissionDownloadResponse.ProtoReflect.Descriptor instead.
func (*CancelMissionDownloadResponse) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{7}
}

func (x *CancelMissionDownloadResponse) GetMissionResult() *MissionResult {
	if x != nil {
		return x.MissionResult
	}
	return nil
}

type StartMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartMissionRequest) Reset() {
	*x = StartMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMissionRequest) ProtoMessage() {}

func (x *StartMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMissionRequest.ProtoReflect.Descriptor instead.
func (*StartMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{8}
}

type StartMissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionResult *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
}

func (x *StartMissionResponse) Reset() {
	*x = StartMissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMissionResponse) ProtoMessage() {}

func (x *StartMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMissionResponse.ProtoReflect.Descriptor instead.
func (*StartMissionResponse) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{9}
}

func (x *StartMissionResponse) GetMissionResult() *MissionResult {
	if x != nil {
		return x.MissionResult
	}
	return nil
}

type PauseMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PauseMissionRequest) Reset() {
	*x = PauseMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseMissionRequest) ProtoMessage() {}

func (x *PauseMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseMissionRequest.ProtoReflect.Descriptor instead.
func (*PauseMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{10}
}

type PauseMissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionResult *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
}

func (x *PauseMissionResponse) Reset() {
	*x = PauseMissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseMissionResponse) ProtoMessage() {}

func (x *PauseMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseMissionResponse.ProtoReflect.Descriptor instead.
func (*PauseMissionResponse) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{11}
}

func (x *PauseMissionResponse) GetMissionResult() *MissionResult {
	if x != nil {
		return x.MissionResult
	}
	return nil
}

type ClearMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearMissionRequest) Reset() {
	*x = ClearMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearMissionRequest) ProtoMessage() {}

func (x *ClearMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearMissionRequest.ProtoReflect.Descriptor instead.
func (*ClearMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{12}
}

type ClearMissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionResult *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
}

func (x *ClearMissionResponse) Reset() {
	*x = ClearMissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearMissionResponse) ProtoMessage() {}

func (x *ClearMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearMissionResponse.ProtoReflect.Descriptor instead.
func (*ClearMissionResponse) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{13}
}

func (x *ClearMissionResponse) GetMissionResult() *MissionResult {
	if x != nil {
		return x.MissionResult
	}
	return nil
}

type SetCurrentMissionItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"` // Index of the mission item to be set as the next one (0-based)
}

func (x *SetCurrentMissionItemRequest) Reset() {
	*x = SetCurrentMissionItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCurrentMissionItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCurrentMissionItemRequest) ProtoMessage() {}

func (x *SetCurrentMissionItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCurrentMissionItemRequest.ProtoReflect.Descriptor instead.
func (*SetCurrentMissionItemRequest) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{14}
}

func (x *SetCurrentMissionItemRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type SetCurrentMissionItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionResult *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
}

func (x *SetCurrentMissionItemResponse) Reset() {
	*x = SetCurrentMissionItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCurrentMissionItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCurrentMissionItemResponse) ProtoMessage() {}

func (x *SetCurrentMissionItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCurrentMissionItemResponse.ProtoReflect.Descriptor instead.
func (*SetCurrentMissionItemResponse) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{15}
}

func (x *SetCurrentMissionItemResponse) GetMissionResult() *MissionResult {
	if x != nil {
		return x.MissionResult
	}
	return nil
}

type IsMissionFinishedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IsMissionFinishedRequest) Reset() {
	*x = IsMissionFinishedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsMissionFinishedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsMissionFinishedRequest) ProtoMessage() {}

func (x *IsMissionFinishedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsMissionFinishedRequest.ProtoReflect.Descriptor instead.
func (*IsMissionFinishedRequest) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{16}
}

type IsMissionFinishedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionResult *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
	IsFinished    bool           `protobuf:"varint,2,opt,name=is_finished,json=isFinished,proto3" json:"is_finished,omitempty"` // True if the mission is finished and the last mission item has been reached
}

func (x *IsMissionFinishedResponse) Reset() {
	*x = IsMissionFinishedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsMissionFinishedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsMissionFinishedResponse) ProtoMessage() {}

func (x *IsMissionFinishedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsMissionFinishedResponse.ProtoReflect.Descriptor instead.
func (*IsMissionFinishedResponse) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{17}
}

func (x *IsMissionFinishedResponse) GetMissionResult() *MissionResult {
	if x != nil {
		return x.MissionResult
	}
	return nil
}

func (x *IsMissionFinishedResponse) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

type SubscribeMissionProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeMissionProgressRequest) Reset() {
	*x = SubscribeMissionProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeMissionProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeMissionProgressRequest) ProtoMessage() {}

func (x *SubscribeMissionProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeMissionProgressRequest.ProtoReflect.Descriptor instead.
func (*SubscribeMissionProgressRequest) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{18}
}

type MissionProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionProgress *MissionProgress `protobuf:"bytes,1,opt,name=mission_progress,json=missionProgress,proto3" json:"mission_progress,omitempty"` // Mission progress
}

func (x *MissionProgressResponse) Reset() {
	*x = MissionProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionProgressResponse) ProtoMessage() {}

func (x *MissionProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionProgressResponse.ProtoReflect.Descriptor instead.
func (*MissionProgressResponse) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{19}
}

func (x *MissionProgressResponse) GetMissionProgress() *MissionProgress {
	if x != nil {
		return x.MissionProgress
	}
	return nil
}

type GetReturnToLaunchAfterMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetReturnToLaunchAfterMissionRequest) Reset() {
	*x = GetReturnToLaunchAfterMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReturnToLaunchAfterMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReturnToLaunchAfterMissionRequest) ProtoMessage() {}

func (x *GetReturnToLaunchAfterMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReturnToLaunchAfterMissionRequest.ProtoReflect.Descriptor instead.
func (*GetReturnToLaunchAfterMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{20}
}

type GetReturnToLaunchAfterMissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionResult *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
	Enable        bool           `protobuf:"varint,2,opt,name=enable,proto3" json:"enable,omitempty"` // If true, trigger an RTL at the end of the mission
}

func (x *GetReturnToLaunchAfterMissionResponse) Reset() {
	*x = GetReturnToLaunchAfterMissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReturnToLaunchAfterMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReturnToLaunchAfterMissionResponse) ProtoMessage() {}

func (x *GetReturnToLaunchAfterMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReturnToLaunchAfterMissionResponse.ProtoReflect.Descriptor instead.
func (*GetReturnToLaunchAfterMissionResponse) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{21}
}

func (x *GetReturnToLaunchAfterMissionResponse) GetMissionResult() *MissionResult {
	if x != nil {
		return x.MissionResult
	}
	return nil
}

func (x *GetReturnToLaunchAfterMissionResponse) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type SetReturnToLaunchAfterMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"` // If true, trigger an RTL at the end of the mission
}

func (x *SetReturnToLaunchAfterMissionRequest) Reset() {
	*x = SetReturnToLaunchAfterMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetReturnToLaunchAfterMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetReturnToLaunchAfterMissionRequest) ProtoMessage() {}

func (x *SetReturnToLaunchAfterMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetReturnToLaunchAfterMissionRequest.ProtoReflect.Descriptor instead.
func (*SetReturnToLaunchAfterMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{22}
}

func (x *SetReturnToLaunchAfterMissionRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type SetReturnToLaunchAfterMissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionResult *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
}

func (x *SetReturnToLaunchAfterMissionResponse) Reset() {
	*x = SetReturnToLaunchAfterMissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetReturnToLaunchAfterMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetReturnToLaunchAfterMissionResponse) ProtoMessage() {}

func (x *SetReturnToLaunchAfterMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetReturnToLaunchAfterMissionResponse.ProtoReflect.Descriptor instead.
func (*SetReturnToLaunchAfterMissionResponse) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{23}
}

func (x *SetReturnToLaunchAfterMissionResponse) GetMissionResult() *MissionResult {
	if x != nil {
		return x.MissionResult
	}
	return nil
}

type ImportQgroundcontrolMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QgcPlanPath string `protobuf:"bytes,1,opt,name=qgc_plan_path,json=qgcPlanPath,proto3" json:"qgc_plan_path,omitempty"` // File path of the QGC plan
}

func (x *ImportQgroundcontrolMissionRequest) Reset() {
	*x = ImportQgroundcontrolMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportQgroundcontrolMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportQgroundcontrolMissionRequest) ProtoMessage() {}

func (x *ImportQgroundcontrolMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportQgroundcontrolMissionRequest.ProtoReflect.Descriptor instead.
func (*ImportQgroundcontrolMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{24}
}

func (x *ImportQgroundcontrolMissionRequest) GetQgcPlanPath() string {
	if x != nil {
		return x.QgcPlanPath
	}
	return ""
}

type ImportQgroundcontrolMissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionResult *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
	MissionPlan   *MissionPlan   `protobuf:"bytes,2,opt,name=mission_plan,json=missionPlan,proto3" json:"mission_plan,omitempty"` // The mission plan
}

func (x *ImportQgroundcontrolMissionResponse) Reset() {
	*x = ImportQgroundcontrolMissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportQgroundcontrolMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportQgroundcontrolMissionResponse) ProtoMessage() {}

func (x *ImportQgroundcontrolMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportQgroundcontrolMissionResponse.ProtoReflect.Descriptor instead.
func (*ImportQgroundcontrolMissionResponse) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{25}
}

func (x *ImportQgroundcontrolMissionResponse) GetMissionResult() *MissionResult {
	if x != nil {
		return x.MissionResult
	}
	return nil
}

func (x *ImportQgroundcontrolMissionResponse) GetMissionPlan() *MissionPlan {
	if x != nil {
		return x.MissionPlan
	}
	return nil
}

//
// Type representing a mission item.
//
// A MissionItem can contain a position and/or actions.
// Mission items are building blocks to assemble a mission,
// which can be sent to (or received from) a system.
// They cannot be used independently.
type MissionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LatitudeDeg          float64                  `protobuf:"fixed64,1,opt,name=latitude_deg,json=latitudeDeg,proto3" json:"latitude_deg,omitempty"`                                                    // Latitude in degrees (range: -90 to +90)
	LongitudeDeg         float64                  `protobuf:"fixed64,2,opt,name=longitude_deg,json=longitudeDeg,proto3" json:"longitude_deg,omitempty"`                                                 // Longitude in degrees (range: -180 to +180)
	RelativeAltitudeM    float32                  `protobuf:"fixed32,3,opt,name=relative_altitude_m,json=relativeAltitudeM,proto3" json:"relative_altitude_m,omitempty"`                                // Altitude relative to takeoff altitude in metres
	SpeedMS              float32                  `protobuf:"fixed32,4,opt,name=speed_m_s,json=speedMS,proto3" json:"speed_m_s,omitempty"`                                                              // Speed to use after this mission item (in metres/second)
	IsFlyThrough         bool                     `protobuf:"varint,5,opt,name=is_fly_through,json=isFlyThrough,proto3" json:"is_fly_through,omitempty"`                                                // True will make the drone fly through without stopping, while false will make the drone stop on the waypoint
	GimbalPitchDeg       float32                  `protobuf:"fixed32,6,opt,name=gimbal_pitch_deg,json=gimbalPitchDeg,proto3" json:"gimbal_pitch_deg,omitempty"`                                         // Gimbal pitch (in degrees)
	GimbalYawDeg         float32                  `protobuf:"fixed32,7,opt,name=gimbal_yaw_deg,json=gimbalYawDeg,proto3" json:"gimbal_yaw_deg,omitempty"`                                               // Gimbal yaw (in degrees)
	CameraAction         MissionItem_CameraAction `protobuf:"varint,8,opt,name=camera_action,json=cameraAction,proto3,enum=mavsdk.rpc.mission.MissionItem_CameraAction" json:"camera_action,omitempty"` // Camera action to trigger at this mission item
	LoiterTimeS          float32                  `protobuf:"fixed32,9,opt,name=loiter_time_s,json=loiterTimeS,proto3" json:"loiter_time_s,omitempty"`                                                  // Loiter time (in seconds)
	CameraPhotoIntervalS float64                  `protobuf:"fixed64,10,opt,name=camera_photo_interval_s,json=cameraPhotoIntervalS,proto3" json:"camera_photo_interval_s,omitempty"`                    // Camera photo interval to use after this mission item (in seconds)
}

func (x *MissionItem) Reset() {
	*x = MissionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionItem) ProtoMessage() {}

func (x *MissionItem) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionItem.ProtoReflect.Descriptor instead.
func (*MissionItem) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{26}
}

func (x *MissionItem) GetLatitudeDeg() float64 {
	if x != nil {
		return x.LatitudeDeg
	}
	return 0
}

func (x *MissionItem) GetLongitudeDeg() float64 {
	if x != nil {
		return x.LongitudeDeg
	}
	return 0
}

func (x *MissionItem) GetRelativeAltitudeM() float32 {
	if x != nil {
		return x.RelativeAltitudeM
	}
	return 0
}

func (x *MissionItem) GetSpeedMS() float32 {
	if x != nil {
		return x.SpeedMS
	}
	return 0
}

func (x *MissionItem) GetIsFlyThrough() bool {
	if x != nil {
		return x.IsFlyThrough
	}
	return false
}

func (x *MissionItem) GetGimbalPitchDeg() float32 {
	if x != nil {
		return x.GimbalPitchDeg
	}
	return 0
}

func (x *MissionItem) GetGimbalYawDeg() float32 {
	if x != nil {
		return x.GimbalYawDeg
	}
	return 0
}

func (x *MissionItem) GetCameraAction() MissionItem_CameraAction {
	if x != nil {
		return x.CameraAction
	}
	return MissionItem_CAMERA_ACTION_NONE
}

func (x *MissionItem) GetLoiterTimeS() float32 {
	if x != nil {
		return x.LoiterTimeS
	}
	return 0
}

func (x *MissionItem) GetCameraPhotoIntervalS() float64 {
	if x != nil {
		return x.CameraPhotoIntervalS
	}
	return 0
}

// Mission plan type
type MissionPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionItems []*MissionItem `protobuf:"bytes,1,rep,name=mission_items,json=missionItems,proto3" json:"mission_items,omitempty"` // The mission items
}

func (x *MissionPlan) Reset() {
	*x = MissionPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionPlan) ProtoMessage() {}

func (x *MissionPlan) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionPlan.ProtoReflect.Descriptor instead.
func (*MissionPlan) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{27}
}

func (x *MissionPlan) GetMissionItems() []*MissionItem {
	if x != nil {
		return x.MissionItems
	}
	return nil
}

// Mission progress type.
type MissionProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int32 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"` // Current mission item index (0-based)
	Total   int32 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`     // Total number of mission items
}

func (x *MissionProgress) Reset() {
	*x = MissionProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionProgress) ProtoMessage() {}

func (x *MissionProgress) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionProgress.ProtoReflect.Descriptor instead.
func (*MissionProgress) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{28}
}

func (x *MissionProgress) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *MissionProgress) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Result type.
type MissionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    MissionResult_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mavsdk.rpc.mission.MissionResult_Result" json:"result,omitempty"` // Result enum value
	ResultStr string               `protobuf:"bytes,2,opt,name=result_str,json=resultStr,proto3" json:"result_str,omitempty"`                        // Human-readable English string describing the result
}

func (x *MissionResult) Reset() {
	*x = MissionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionResult) ProtoMessage() {}

func (x *MissionResult) ProtoReflect() protoreflect.Message {
	mi := &file_mission_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionResult.ProtoReflect.Descriptor instead.
func (*MissionResult) Descriptor() ([]byte, []int) {
	return file_mission_proto_rawDescGZIP(), []int{29}
}

func (x *MissionResult) GetResult() MissionResult_Result {
	if x != nil {
		return x.Result
	}
	return MissionResult_RESULT_UNKNOWN
}

func (x *MissionResult) GetResultStr() string {
	if x != nil {
		return x.ResultStr
	}
	return ""
}

var File_mission_proto protoreflect.FileDescriptor

var file_mission_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x12, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x1a, 0x14, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x14, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x42, 0x0a, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0b, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x22, 0x61, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x67, 0x0a, 0x1b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x18, 0x0a, 0x16, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa7, 0x01, 0x0a, 0x17, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x42, 0x0a, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0b, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x22, 0x1e, 0x0a, 0x1c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x69, 0x0a, 0x1d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d,
	0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x15,
	0x0a, 0x13, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x50, 0x61, 0x75, 0x73, 0x65,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x60,
	0x0a, 0x14, 0x50, 0x61, 0x75, 0x73, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x15, 0x0a, 0x13, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x14, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x48, 0x0a, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x34, 0x0a, 0x1c, 0x53, 0x65, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x69, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x48, 0x0a, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64,
	0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x49, 0x73,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x19, 0x49, 0x73, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d,
	0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x22,
	0x21, 0x0a, 0x1f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x69, 0x0a, 0x17, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x10, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x26, 0x0a,
	0x24, 0x47, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x6f, 0x4c, 0x61, 0x75, 0x6e,
	0x63, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x54, 0x6f, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x48, 0x0a, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x3e, 0x0a, 0x24, 0x53, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x6f,
	0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x71, 0x0a, 0x25, 0x53, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x6f,
	0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x48, 0x0a, 0x22, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x71, 0x67,
	0x63, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x71, 0x67, 0x63, 0x50, 0x6c, 0x61, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x22, 0xb3,
	0x01, 0x0a, 0x23, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x42, 0x0a, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0b, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x22, 0x97, 0x06, 0x0a, 0x0b, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x35, 0x0a, 0x0c, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x5f, 0x64, 0x65, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x42, 0x12, 0x82, 0xb5, 0x18, 0x03,
	0x4e, 0x61, 0x4e, 0x89, 0xb5, 0x18, 0x48, 0xaf, 0xbc, 0x9a, 0xf2, 0xd7, 0x7a, 0x3e, 0x52, 0x0b,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x44, 0x65, 0x67, 0x12, 0x37, 0x0a, 0x0d, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x42, 0x12, 0x82, 0xb5, 0x18, 0x03, 0x4e, 0x61, 0x4e, 0x89, 0xb5, 0x18, 0x48, 0xaf,
	0xbc, 0x9a, 0xf2, 0xd7, 0x7a, 0x3e, 0x52, 0x0c, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x44, 0x65, 0x67, 0x12, 0x37, 0x0a, 0x13, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x42, 0x07, 0x82, 0xb5, 0x18, 0x03, 0x4e, 0x61, 0x4e, 0x52, 0x11, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x4d, 0x12, 0x23, 0x0a,
	0x09, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x6d, 0x5f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x42, 0x07, 0x82, 0xb5, 0x18, 0x03, 0x4e, 0x61, 0x4e, 0x52, 0x07, 0x73, 0x70, 0x65, 0x65, 0x64,
	0x4d, 0x53, 0x12, 0x2f, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x66, 0x6c, 0x79, 0x5f, 0x74, 0x68, 0x72,
	0x6f, 0x75, 0x67, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x09, 0x82, 0xb5, 0x18, 0x05,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0c, 0x69, 0x73, 0x46, 0x6c, 0x79, 0x54, 0x68, 0x72, 0x6f,
	0x75, 0x67, 0x68, 0x12, 0x3c, 0x0a, 0x10, 0x67, 0x69, 0x6d, 0x62, 0x61, 0x6c, 0x5f, 0x70, 0x69,
	0x74, 0x63, 0x68, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x42, 0x12, 0x82,
	0xb5, 0x18, 0x03, 0x4e, 0x61, 0x4e, 0x89, 0xb5, 0x18, 0x2d, 0x43, 0x1c, 0xeb, 0xe2, 0x36, 0x1a,
	0x3f, 0x52, 0x0e, 0x67, 0x69, 0x6d, 0x62, 0x61, 0x6c, 0x50, 0x69, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x67, 0x12, 0x38, 0x0a, 0x0e, 0x67, 0x69, 0x6d, 0x62, 0x61, 0x6c, 0x5f, 0x79, 0x61, 0x77, 0x5f,
	0x64, 0x65, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x42, 0x12, 0x82, 0xb5, 0x18, 0x03, 0x4e,
	0x61, 0x4e, 0x89, 0xb5, 0x18, 0x2d, 0x43, 0x1c, 0xeb, 0xe2, 0x36, 0x1a, 0x3f, 0x52, 0x0c, 0x67,
	0x69, 0x6d, 0x62, 0x61, 0x6c, 0x59, 0x61, 0x77, 0x44, 0x65, 0x67, 0x12, 0x51, 0x0a, 0x0d, 0x63,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0c, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x0a, 0x0d, 0x6c, 0x6f, 0x69, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x02, 0x42, 0x07, 0x82, 0xb5, 0x18, 0x03, 0x4e, 0x61, 0x4e, 0x52, 0x0b,
	0x6c, 0x6f, 0x69, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x12, 0x3e, 0x0a, 0x17, 0x63,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x42, 0x07, 0x82, 0xb5,
	0x18, 0x03, 0x31, 0x2e, 0x30, 0x52, 0x14, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x22, 0xd0, 0x01, 0x0a, 0x0c,
	0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12,
	0x43, 0x41, 0x4d, 0x45, 0x52, 0x41, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x41, 0x4d, 0x45, 0x52, 0x41, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x4b, 0x45, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f,
	0x10, 0x01, 0x12, 0x26, 0x0a, 0x22, 0x43, 0x41, 0x4d, 0x45, 0x52, 0x41, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x5f,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x41,
	0x4d, 0x45, 0x52, 0x41, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x4f, 0x50,
	0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x10,
	0x03, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x41, 0x4d, 0x45, 0x52, 0x41, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x04,
	0x12, 0x1c, 0x0a, 0x18, 0x43, 0x41, 0x4d, 0x45, 0x52, 0x41, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x05, 0x22, 0x53,
	0x0a, 0x0b, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x44, 0x0a,
	0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x41, 0x0a, 0x0f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xdf, 0x03, 0x0a, 0x0d, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64,
	0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x72, 0x22, 0xec, 0x02, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x53, 0x55,
	0x4c, 0x54, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x21,
	0x0a, 0x1d, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4d, 0x41, 0x4e,
	0x59, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x53, 0x10,
	0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x42, 0x55, 0x53, 0x59,
	0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x4f, 0x55, 0x54, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e,
	0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x07, 0x12, 0x1f, 0x0a, 0x1b, 0x52,
	0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x4e, 0x4f, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x08, 0x12, 0x22, 0x0a, 0x1e,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f,
	0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x51, 0x47, 0x43, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x10, 0x09,
	0x12, 0x23, 0x0a, 0x1f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x50, 0x41, 0x52, 0x53, 0x45, 0x5f, 0x51, 0x47, 0x43, 0x5f, 0x50,
	0x4c, 0x41, 0x4e, 0x10, 0x0a, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f,
	0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x4d, 0x49, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0x0b, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x53,
	0x55, 0x4c, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x0c, 0x32, 0xe0, 0x0c, 0x0a, 0x0e, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x0d, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x6d,
	0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2e, 0x2e, 0x6d, 0x61, 0x76,
	0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6d, 0x61, 0x76,
	0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0x80, 0xb5, 0x18,
	0x01, 0x12, 0x6c, 0x0a, 0x0f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x82, 0x01, 0x0a, 0x15, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x30, 0x2e, 0x6d, 0x61, 0x76, 0x73,
	0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6d, 0x61,
	0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04,
	0x80, 0xb5, 0x18, 0x01, 0x12, 0x63, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0c, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x6d, 0x61, 0x76, 0x73,
	0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x75, 0x73, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63,
	0x0a, 0x0c, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x2e, 0x6d,
	0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x11, 0x49, 0x73, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x2c, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64,
	0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x73,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x73, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x12, 0x80, 0x01, 0x0a, 0x18,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x33, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64,
	0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x9a,
	0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x6f, 0x4c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x38, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54,
	0x6f, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6d, 0x61, 0x76,
	0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x6f, 0x4c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x12, 0x9a, 0x01, 0x0a, 0x1d,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x6f, 0x4c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x2e,
	0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x6f, 0x4c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x6f, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x12, 0x90, 0x01, 0x0a, 0x1b, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x51, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64,
	0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x51, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x37, 0x2e, 0x6d, 0x61, 0x76, 0x73, 0x64, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x19, 0x42, 0x0c, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x09, 0x2e, 0x3b, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mission_proto_rawDescOnce sync.Once
	file_mission_proto_rawDescData = file_mission_proto_rawDesc
)

func file_mission_proto_rawDescGZIP() []byte {
	file_mission_proto_rawDescOnce.Do(func() {
		file_mission_proto_rawDescData = protoimpl.X.CompressGZIP(file_mission_proto_rawDescData)
	})
	return file_mission_proto_rawDescData
}

var file_mission_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_mission_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_mission_proto_goTypes = []interface{}{
	(MissionItem_CameraAction)(0),                 // 0: mavsdk.rpc.mission.MissionItem.CameraAction
	(MissionResult_Result)(0),                     // 1: mavsdk.rpc.mission.MissionResult.Result
	(*UploadMissionRequest)(nil),                  // 2: mavsdk.rpc.mission.UploadMissionRequest
	(*UploadMissionResponse)(nil),                 // 3: mavsdk.rpc.mission.UploadMissionResponse
	(*CancelMissionUploadRequest)(nil),            // 4: mavsdk.rpc.mission.CancelMissionUploadRequest
	(*CancelMissionUploadResponse)(nil),           // 5: mavsdk.rpc.mission.CancelMissionUploadResponse
	(*DownloadMissionRequest)(nil),                // 6: mavsdk.rpc.mission.DownloadMissionRequest
	(*DownloadMissionResponse)(nil),               // 7: mavsdk.rpc.mission.DownloadMissionResponse
	(*CancelMissionDownloadRequest)(nil),          // 8: mavsdk.rpc.mission.CancelMissionDownloadRequest
	(*CancelMissionDownloadResponse)(nil),         // 9: mavsdk.rpc.mission.CancelMissionDownloadResponse
	(*StartMissionRequest)(nil),                   // 10: mavsdk.rpc.mission.StartMissionRequest
	(*StartMissionResponse)(nil),                  // 11: mavsdk.rpc.mission.StartMissionResponse
	(*PauseMissionRequest)(nil),                   // 12: mavsdk.rpc.mission.PauseMissionRequest
	(*PauseMissionResponse)(nil),                  // 13: mavsdk.rpc.mission.PauseMissionResponse
	(*ClearMissionRequest)(nil),                   // 14: mavsdk.rpc.mission.ClearMissionRequest
	(*ClearMissionResponse)(nil),                  // 15: mavsdk.rpc.mission.ClearMissionResponse
	(*SetCurrentMissionItemRequest)(nil),          // 16: mavsdk.rpc.mission.SetCurrentMissionItemRequest
	(*SetCurrentMissionItemResponse)(nil),         // 17: mavsdk.rpc.mission.SetCurrentMissionItemResponse
	(*IsMissionFinishedRequest)(nil),              // 18: mavsdk.rpc.mission.IsMissionFinishedRequest
	(*IsMissionFinishedResponse)(nil),             // 19: mavsdk.rpc.mission.IsMissionFinishedResponse
	(*SubscribeMissionProgressRequest)(nil),       // 20: mavsdk.rpc.mission.SubscribeMissionProgressRequest
	(*MissionProgressResponse)(nil),               // 21: mavsdk.rpc.mission.MissionProgressResponse
	(*GetReturnToLaunchAfterMissionRequest)(nil),  // 22: mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest
	(*GetReturnToLaunchAfterMissionResponse)(nil), // 23: mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse
	(*SetReturnToLaunchAfterMissionRequest)(nil),  // 24: mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest
	(*SetReturnToLaunchAfterMissionResponse)(nil), // 25: mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse
	(*ImportQgroundcontrolMissionRequest)(nil),    // 26: mavsdk.rpc.mission.ImportQgroundcontrolMissionRequest
	(*ImportQgroundcontrolMissionResponse)(nil),   // 27: mavsdk.rpc.mission.ImportQgroundcontrolMissionResponse
	(*MissionItem)(nil),                           // 28: mavsdk.rpc.mission.MissionItem
	(*MissionPlan)(nil),                           // 29: mavsdk.rpc.mission.MissionPlan
	(*MissionProgress)(nil),                       // 30: mavsdk.rpc.mission.MissionProgress
	(*MissionResult)(nil),                         // 31: mavsdk.rpc.mission.MissionResult
}
var file_mission_proto_depIdxs = []int32{
	29, // 0: mavsdk.rpc.mission.UploadMissionRequest.mission_plan:type_name -> mavsdk.rpc.mission.MissionPlan
	31, // 1: mavsdk.rpc.mission.UploadMissionResponse.mission_result:type_name -> mavsdk.rpc.mission.MissionResult
	31, // 2: mavsdk.rpc.mission.CancelMissionUploadResponse.mission_result:type_name -> mavsdk.rpc.mission.MissionResult
	31, // 3: mavsdk.rpc.mission.DownloadMissionResponse.mission_result:type_name -> mavsdk.rpc.mission.MissionResult
	29, // 4: mavsdk.rpc.mission.DownloadMissionResponse.mission_plan:type_name -> mavsdk.rpc.mission.MissionPlan
	31, // 5: mavsdk.rpc.mission.CancelMissionDownloadResponse.mission_result:type_name -> mavsdk.rpc.mission.MissionResult
	31, // 6: mavsdk.rpc.mission.StartMissionResponse.mission_result:type_name -> mavsdk.rpc.mission.MissionResult
	31, // 7: mavsdk.rpc.mission.PauseMissionResponse.mission_result:type_name -> mavsdk.rpc.mission.MissionResult
	31, // 8: mavsdk.rpc.mission.ClearMissionResponse.mission_result:type_name -> mavsdk.rpc.mission.MissionResult
	31, // 9: mavsdk.rpc.mission.SetCurrentMissionItemResponse.mission_result:type_name -> mavsdk.rpc.mission.MissionResult
	31, // 10: mavsdk.rpc.mission.IsMissionFinishedResponse.mission_result:type_name -> mavsdk.rpc.mission.MissionResult
	30, // 11: mavsdk.rpc.mission.MissionProgressResponse.mission_progress:type_name -> mavsdk.rpc.mission.MissionProgress
	31, // 12: mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse.mission_result:type_name -> mavsdk.rpc.mission.MissionResult
	31, // 13: mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse.mission_result:type_name -> mavsdk.rpc.mission.MissionResult
	31, // 14: mavsdk.rpc.mission.ImportQgroundcontrolMissionResponse.mission_result:type_name -> mavsdk.rpc.mission.MissionResult
	29, // 15: mavsdk.rpc.mission.ImportQgroundcontrolMissionResponse.mission_plan:type_name -> mavsdk.rpc.mission.MissionPlan
	0,  // 16: mavsdk.rpc.mission.MissionItem.camera_action:type_name -> mavsdk.rpc.mission.MissionItem.CameraAction
	28, // 17: mavsdk.rpc.mission.MissionPlan.mission_items:type_name -> mavsdk.rpc.mission.MissionItem
	1,  // 18: mavsdk.rpc.mission.MissionResult.result:type_name -> mavsdk.rpc.mission.MissionResult.Result
	2,  // 19: mavsdk.rpc.mission.MissionService.UploadMission:input_type -> mavsdk.rpc.mission.UploadMissionRequest
	4,  // 20: mavsdk.rpc.mission.MissionService.CancelMissionUpload:input_type -> mavsdk.rpc.mission.CancelMissionUploadRequest
	6,  // 21: mavsdk.rpc.mission.MissionService.DownloadMission:input_type -> mavsdk.rpc.mission.DownloadMissionRequest
	8,  // 22: mavsdk.rpc.mission.MissionService.CancelMissionDownload:input_type -> mavsdk.rpc.mission.CancelMissionDownloadRequest
	10, // 23: mavsdk.rpc.mission.MissionService.StartMission:input_type -> mavsdk.rpc.mission.StartMissionRequest
	12, // 24: mavsdk.rpc.mission.MissionService.PauseMission:input_type -> mavsdk.rpc.mission.PauseMissionRequest
	14, // 25: mavsdk.rpc.mission.MissionService.ClearMission:input_type -> mavsdk.rpc.mission.ClearMissionRequest
	16, // 26: mavsdk.rpc.mission.MissionService.SetCurrentMissionItem:input_type -> mavsdk.rpc.mission.SetCurrentMissionItemRequest
	18, // 27: mavsdk.rpc.mission.MissionService.IsMissionFinished:input_type -> mavsdk.rpc.mission.IsMissionFinishedRequest
	20, // 28: mavsdk.rpc.mission.MissionService.SubscribeMissionProgress:input_type -> mavsdk.rpc.mission.SubscribeMissionProgressRequest
	22, // 29: mavsdk.rpc.mission.MissionService.GetReturnToLaunchAfterMission:input_type -> mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest
	24, // 30: mavsdk.rpc.mission.MissionService.SetReturnToLaunchAfterMission:input_type -> mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest
	26, // 31: mavsdk.rpc.mission.MissionService.ImportQgroundcontrolMission:input_type -> mavsdk.rpc.mission.ImportQgroundcontrolMissionRequest
	3,  // 32: mavsdk.rpc.mission.MissionService.UploadMission:output_type -> mavsdk.rpc.mission.UploadMissionResponse
	5,  // 33: mavsdk.rpc.mission.MissionService.CancelMissionUpload:output_type -> mavsdk.rpc.mission.CancelMissionUploadResponse
	7,  // 34: mavsdk.rpc.mission.MissionService.DownloadMission:output_type -> mavsdk.rpc.mission.DownloadMissionResponse
	9,  // 35: mavsdk.rpc.mission.MissionService.CancelMissionDownload:output_type -> mavsdk.rpc.mission.CancelMissionDownloadResponse
	11, // 36: mavsdk.rpc.mission.MissionService.StartMission:output_type -> mavsdk.rpc.mission.StartMissionResponse
	13, // 37: mavsdk.rpc.mission.MissionService.PauseMission:output_type -> mavsdk.rpc.mission.PauseMissionResponse
	15, // 38: mavsdk.rpc.mission.MissionService.ClearMission:output_type -> mavsdk.rpc.mission.ClearMissionResponse
	17, // 39: mavsdk.rpc.mission.MissionService.SetCurrentMissionItem:output_type -> mavsdk.rpc.mission.SetCurrentMissionItemResponse
	19, // 40: mavsdk.rpc.mission.MissionService.IsMissionFinished:output_type -> mavsdk.rpc.mission.IsMissionFinishedResponse
	21, // 41: mavsdk.rpc.mission.MissionService.SubscribeMissionProgress:output_type -> mavsdk.rpc.mission.MissionProgressResponse
	23, // 42: mavsdk.rpc.mission.MissionService.GetReturnToLaunchAfterMission:output_type -> mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse
	25, // 43: mavsdk.rpc.mission.MissionService.SetReturnToLaunchAfterMission:output_type -> mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse
	27, // 44: mavsdk.rpc.mission.MissionService.ImportQgroundcontrolMission:output_type -> mavsdk.rpc.mission.ImportQgroundcontrolMissionResponse
	32, // [32:45] is the sub-list for method output_type
	19, // [19:32] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_mission_proto_init() }
func file_mission_proto_init() {
	if File_mission_proto != nil {
		return
	}
	file_mavsdk_options_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mission_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadMissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelMissionUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelMissionUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadMissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelMissionDownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelMissionDownloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartMissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseMissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearMissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCurrentMissionItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCurrentMissionItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsMissionFinishedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsMissionFinishedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeMissionProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReturnToLaunchAfterMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReturnToLaunchAfterMissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetReturnToLaunchAfterMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetReturnToLaunchAfterMissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportQgroundcontrolMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportQgroundcontrolMissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mission_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mission_proto_goTypes,
		DependencyIndexes: file_mission_proto_depIdxs,
		EnumInfos:         file_mission_proto_enumTypes,
		MessageInfos:      file_mission_proto_msgTypes,
	}.Build()
	File_mission_proto = out.File
	file_mission_proto_rawDesc = nil
	file_mission_proto_goTypes = nil
	file_mission_proto_depIdxs = nil
}
